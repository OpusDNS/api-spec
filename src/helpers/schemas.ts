/**
 * Direct type aliases for OpenAPI schemas.
 * This file is auto-generated from the OpenAPI specification.
 * Do not edit manually.
 */
import { components } from '../schema';

export type Body_issue_organization_token_v1_auth_token_post = components['schemas']['Body_issue_organization_token_v1_auth_token_post'];
export type EmailForwardBulkDeleteResult = components['schemas']['BulkOperationResponse_EmailForwardBulkDeleteResult_'];
export type EmailForwardBulkUpdateResult = components['schemas']['BulkOperationResponse_EmailForwardBulkUpdateResult_'];
export type BulkOperationResult = components['schemas']['BulkOperationResult'];
export type BulkOperationStatus = components['schemas']['BulkOperationStatus'];
export type ContactCreate = components['schemas']['ContactCreate'];
export type ContactIdList = components['schemas']['ContactIdList'];
export type Contact = components['schemas']['ContactResponse'];
export type ContactSchema = components['schemas']['ContactSchema'];
export type ContactSortField = components['schemas']['ContactSortField'];
export type ContactVerificationApi = components['schemas']['ContactVerificationApiResponse'];
export type ContactVerificationEmail = components['schemas']['ContactVerificationEmailResponse'];
export type ContactVerification = components['schemas']['ContactVerificationResponse'];
export type Currency = components['schemas']['Currency'];
export type DeletedEvent = components['schemas']['DeletedEvent'];
export type DnsChangeAction = components['schemas']['DnsChangeAction'];
export type DnsChange = components['schemas']['DnsChangeResponse'];
export type DnsChanges = components['schemas']['DnsChangesResponse'];
export type DnsRecordCreate = components['schemas']['DnsRecordCreate'];
export type DnsRecord = components['schemas']['DnsRecordResponse'];
export type DnsRrsetCreate = components['schemas']['DnsRrsetCreate'];
export type DnsRrset = components['schemas']['DnsRrsetResponse'];
export type DnsRrsetType = components['schemas']['DnsRrsetType'];
export type DnsZoneCreate = components['schemas']['DnsZoneCreate'];
export type DnsZone = components['schemas']['DnsZoneResponse'];
export type DnsZoneRrsetsCreate = components['schemas']['DnsZoneRrsetsCreate'];
export type DnssecAlgorithm = components['schemas']['DnssecAlgorithm'];
export type DnssecDigestType = components['schemas']['DnssecDigestType'];
export type DnssecRecordType = components['schemas']['DnssecRecordType'];
export type DnssecStatus = components['schemas']['DnssecStatus'];
export type DomainAvailability = components['schemas']['DomainAvailability'];
export type DomainAvailabilityMeta = components['schemas']['DomainAvailabilityMeta'];
export type DomainAvailabilityStatus = components['schemas']['DomainAvailabilityStatus'];
export type DomainCheck = components['schemas']['DomainCheckResponse'];
export type DomainClientStatus = components['schemas']['DomainClientStatus'];
export type DomainContact = components['schemas']['DomainContactResponse'];
export type DomainContactType = components['schemas']['DomainContactType'];
export type DomainCreate = components['schemas']['DomainCreate'];
export type DomainDnssecDataCreate = components['schemas']['DomainDnssecDataCreate'];
export type DomainDnssecData = components['schemas']['DomainDnssecDataResponse'];
export type DomainNameParts = components['schemas']['DomainNameParts'];
export type DomainPeriod = components['schemas']['DomainPeriod'];
export type DomainRenewRequest = components['schemas']['DomainRenewRequest'];
export type DomainRenew = components['schemas']['DomainRenewResponse'];
export type Domain = components['schemas']['DomainResponse'];
export type DomainSearchMeta = components['schemas']['DomainSearchMeta'];
export type DomainSearch = components['schemas']['DomainSearchResponse'];
export type DomainSearchSuggestion = components['schemas']['DomainSearchSuggestion'];
export type DomainSortField = components['schemas']['DomainSortField'];
export type DomainStatus = components['schemas']['DomainStatus'];
export type DomainTransferIn = components['schemas']['DomainTransferIn'];
export type DomainUpdate = components['schemas']['DomainUpdate'];
export type EmailForward = components['schemas']['EmailForward'];
export type EmailForwardBulkDelete = components['schemas']['EmailForwardBulkDelete'];
export type EmailForwardBulkUpdate = components['schemas']['EmailForwardBulkUpdate'];
export type EmailForwardBulkUpdateItem = components['schemas']['EmailForwardBulkUpdateItem'];
export type EmailForwardCreate = components['schemas']['EmailForwardCreate'];
export type EmailForwardStatus = components['schemas']['EmailForwardStatus'];
export type EmailForwardUpdate = components['schemas']['EmailForwardUpdate'];
export type EmailVerificationStatus = components['schemas']['EmailVerificationStatus'];
export type EppDateTime = components['schemas']['EppDateTime'];
export type EventObjectType = components['schemas']['EventObjectType'];
export type EventResponse = components['schemas']['EventResponse'];
export type EventSchema = components['schemas']['EventSchema'];
export type EventSubtype = components['schemas']['EventSubtype'];
export type EventType = components['schemas']['EventType'];
export type GrantType = components['schemas']['GrantType'];
export type HTTPValidationError = components['schemas']['HTTPValidationError'];
export type IpRestrictionCreate = components['schemas']['IpRestrictionCreate'];
export type IpRestriction = components['schemas']['IpRestrictionResponse'];
export type IpRestrictionUpdate = components['schemas']['IpRestrictionUpdate'];
export type JsonValue = components['schemas']['JsonValue'];
export type Nameserver = components['schemas']['Nameserver'];
export type Notification = components['schemas']['Notification'];
export type NotificationCreate = components['schemas']['NotificationCreate'];
export type NotificationSummary = components['schemas']['NotificationSummary'];
export type NotificationUpdate = components['schemas']['NotificationUpdate'];
export type Organization = components['schemas']['Organization'];
export type OrganizationAttribute = components['schemas']['OrganizationAttribute'];
export type OrganizationAttributeCreate = components['schemas']['OrganizationAttributeCreate'];
export type OrganizationAttribute2 = components['schemas']['OrganizationAttributeResponse'];
export type OrganizationAttributeUpdate = components['schemas']['OrganizationAttributeUpdate'];
export type OrganizationCreate = components['schemas']['OrganizationCreate'];
export type OrganizationCredential = components['schemas']['OrganizationCredential'];
export type OrganizationCredentialCreated = components['schemas']['OrganizationCredentialCreated'];
export type OrganizationCredentialExtra = components['schemas']['OrganizationCredentialExtra'];
export type OrganizationCredentialStatus = components['schemas']['OrganizationCredentialStatus'];
export type OrganizationStatus = components['schemas']['OrganizationStatus'];
export type OrganizationToken = components['schemas']['OrganizationTokenResponse'];
export type OrganizationUpdate = components['schemas']['OrganizationUpdate'];
export type OrganizationWithPlan = components['schemas']['OrganizationWithPlan'];
export type PaginationMetadata = components['schemas']['PaginationMetadata'];
export type Pagination_ContactSchema = components['schemas']['Pagination_ContactSchema_'];
export type Pagination_DnsZone = components['schemas']['Pagination_DnsZoneResponse_'];
export type Pagination_Domain = components['schemas']['Pagination_DomainResponse_'];
export type Pagination_EmailForward = components['schemas']['Pagination_EmailForward_'];
export type Pagination_Event = components['schemas']['Pagination_EventResponse_'];
export type Pagination_OrganizationCredential = components['schemas']['Pagination_OrganizationCredential_'];
export type Pagination_Organization = components['schemas']['Pagination_Organization_'];
export type Pagination_UserNotificationSummary = components['schemas']['Pagination_UserNotificationSummary_'];
export type Pagination_User = components['schemas']['Pagination_User_'];
export type PeriodUnit = components['schemas']['PeriodUnit'];
export type Permission = components['schemas']['Permission'];
export type PermissionSet = components['schemas']['PermissionSet'];
export type PlanRelation = components['schemas']['PlanRelation'];
export type PlanUpdate = components['schemas']['PlanUpdate'];
export type Problem = components['schemas']['Problem'];
export type Relation = components['schemas']['Relation'];
export type RelationSet = components['schemas']['RelationSet'];
export type RenewalMode = components['schemas']['RenewalMode'];
export type SignupCreate = components['schemas']['SignupCreate'];
export type SortOrder = components['schemas']['SortOrder'];
export type SpiceDbRelationshipUpdate = components['schemas']['SpiceDbRelationshipUpdate'];
export type TermsOfServiceAccept = components['schemas']['TermsOfServiceAccept'];
export type TransferEvent = components['schemas']['TransferEvent'];
export type User = components['schemas']['User'];
export type UserAttributeUpdate = components['schemas']['UserAttributeUpdate'];
export type UserCreate = components['schemas']['UserCreate'];
export type UserNotification = components['schemas']['UserNotification'];
export type UserNotificationStatus = components['schemas']['UserNotificationStatus'];
export type UserNotificationSummary = components['schemas']['UserNotificationSummary'];
export type UserStatus = components['schemas']['UserStatus'];
export type UserToken = components['schemas']['UserTokenResponse'];
export type UserUpdate = components['schemas']['UserUpdate'];
export type UserWithAttributes = components['schemas']['UserWithAttributes'];
export type UserWithRelationPermissions = components['schemas']['UserWithRelationPermissions'];
export type ValidationError = components['schemas']['ValidationError'];
export type VerificationType = components['schemas']['VerificationType'];
export type ZoneSortField = components['schemas']['ZoneSortField'];
export type DomainAvailabilityList = components['schemas']['common__models__availability__datasource__DomainAvailabilityResponse'];
export type DomainAvailabilityCheck = components['schemas']['common__models__domain__domain__DomainAvailabilityResponse'];