components:
  schemas:
    AllocationMethodType:
      enum:
      - fcfs
      - auction
      - lottery
      title: AllocationMethodType
      type: string
    AllowedNumberOfNameserverBase:
      properties:
        max:
          description: Maximum number of nameserver per domain name
          title: Max
          type: integer
        min:
          description: Minimum number of nameserver per domain name
          minimum: 0.0
          title: Min
          type: integer
      required:
      - min
      - max
      title: AllowedNumberOfNameserverBase
      type: object
    AttributeType:
      enum:
      - enum
      - string
      - boolean
      - datetime
      title: AttributeType
      type: string
    BillingMetadata:
      properties:
        billing_model:
          anyOf:
          - type: string
          - type: 'null'
          description: Payment terms for the organization.
          title: Billing Model
        customer_number:
          anyOf:
          - type: integer
          - type: 'null'
          description: Customer account number for the organization.
          title: Customer Number
      title: BillingMetadata
      type: object
    BillingPlan:
      properties:
        amount:
          description: Price of the billing plan.
          title: Amount
          type: string
        currency:
          anyOf:
          - $ref: '#/components/schemas/Currency'
          - type: 'null'
          description: Currency of the billing plan.
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the billing plan.
          title: Name
        plan_id:
          anyOf:
          - type: string
          - type: 'null'
          description: Billing plan ID for the organization.
          title: Plan Id
        plan_level:
          anyOf:
          - type: string
          - type: 'null'
          description: Plan level such as 'basic', 'premium' or 'enterprise'.
          title: Plan Level
        type:
          anyOf:
          - type: string
          - type: 'null'
          description: Plan type or billing interval.
          title: Type
      title: BillingPlan
      type: object
    BillingTransactionAction:
      enum:
      - create
      - transfer
      - renew
      - restore
      - trade
      - application
      title: BillingTransactionAction
      type: string
    BillingTransactionProductType:
      enum:
      - domain
      - zones
      - email_forward
      - domain_forward
      title: BillingTransactionProductType
      type: string
    BillingTransactionResponse:
      properties:
        action:
          $ref: '#/components/schemas/BillingTransactionAction'
          description: The action performed in the transaction
        amount:
          description: The amount of the transaction including VAT
          title: Amount
          type: string
        billing_transaction_id:
          examples:
          - billing_transaction_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^billing_transaction_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Billing Transaction Id
          type: string
          x-typeid-prefix: billing_transaction
        completed_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the transaction completed
          title: Completed On
        created_on:
          description: The date/time the transaction was created
          format: date-time
          title: Created On
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
          description: The currency of the transaction
        price:
          description: The price of the product without sales tax
          title: Price
          type: string
        product_reference:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The reference of the product
          title: Product Reference
        product_type:
          $ref: '#/components/schemas/BillingTransactionProductType'
          description: The type of product
        status:
          $ref: '#/components/schemas/BillingTransactionStatus'
          default: pending
          description: The status of the transaction
        tax_amount:
          description: The tax amount of the transaction
          title: Tax Amount
          type: string
        tax_rate:
          description: The tax rate of the transaction
          title: Tax Rate
          type: string
        updated_on:
          description: The date/time the transaction was updated
          format: date-time
          title: Updated On
          type: string
      required:
      - product_type
      - product_reference
      - action
      - amount
      - price
      - tax_rate
      - tax_amount
      title: BillingTransactionResponse
      type: object
    BillingTransactionSortField:
      enum:
      - product_type
      - action
      - status
      - created_on
      - completed_on
      title: BillingTransactionSortField
      type: string
    BillingTransactionStatus:
      enum:
      - pending
      - succeeded
      - failed
      - canceled
      title: BillingTransactionStatus
      type: string
    ContactAttributeDefinition:
      description: Definition of a possible attribute for a TLD.
      properties:
        key:
          $ref: '#/components/schemas/RegistryHandleAttributeType'
          description: Unique identifier for the attribute
        type:
          $ref: '#/components/schemas/AttributeType'
          description: Type of the attribute (e.g., 'enum', 'string', 'boolean')
        values:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Allowed values for enum types
          title: Values
      required:
      - key
      - type
      title: ContactAttributeDefinition
      type: object
    ContactConfigBase:
      properties:
        max:
          description: Maximum contacts per domain name
          minimum: 0.0
          title: Max
          type: integer
        min:
          description: Minimum contacts per domain name
          minimum: 0.0
          title: Min
          type: integer
        type:
          $ref: '#/components/schemas/ContactRoleType'
          description: The type of contact
      required:
      - type
      - min
      - max
      title: ContactConfigBase
      type: object
    ContactCreate:
      properties:
        city:
          description: The city of the contact
          minLength: 1
          title: City
          type: string
        country:
          description: The country of the contact
          minLength: 1
          title: Country
          type: string
        disclose:
          description: Whether the contact should be disclosed
          title: Disclose
          type: boolean
        email:
          description: The email of the contact
          format: email
          title: Email
          type: string
        fax:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The contacts's fax number
          title: Fax
        first_name:
          description: The first name of the contact
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The last name of the contact
          minLength: 1
          title: Last Name
          type: string
        org:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The organization of the contact
          title: Org
        phone:
          description: The contact's phone number
          examples:
          - '+1.2125552368'
          format: phone
          title: Phone
          type: string
        postal_code:
          description: The postal code of the contact
          minLength: 1
          title: Postal Code
          type: string
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The state of the contact
          title: State
        street:
          description: The address of the contact
          minLength: 1
          title: Street
          type: string
        title:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The title of the contact
          title: Title
      required:
      - first_name
      - last_name
      - email
      - phone
      - street
      - city
      - postal_code
      - country
      - disclose
      title: ContactCreate
      type: object
    ContactHandle:
      properties:
        attributes:
          anyOf:
          - additionalProperties:
              type: string
            propertyNames:
              $ref: '#/components/schemas/RegistryHandleAttributeType'
            type: object
          - type: 'null'
          description: Additional attributes related to the contact
          title: Attributes
        contact_id:
          description: The contact id of the contact
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      required:
      - contact_id
      title: ContactHandle
      type: object
    ContactIdList:
      additionalProperties:
        examples:
        - contact_01h45ytscbebyvny4gc8cr8ma2
        format: typeid
        pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
        type: string
        x-typeid-prefix: contact
      propertyNames:
        $ref: '#/components/schemas/DomainContactType'
      type: object
    ContactResponse:
      properties:
        city:
          description: The city of the contact
          minLength: 1
          title: City
          type: string
        country:
          description: The country of the contact
          minLength: 1
          title: Country
          type: string
        disclose:
          description: Whether the contact should be disclosed
          title: Disclose
          type: boolean
        email:
          description: The email of the contact
          format: email
          title: Email
          type: string
        fax:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The contacts's fax number
          title: Fax
        first_name:
          description: The first name of the contact
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The last name of the contact
          minLength: 1
          title: Last Name
          type: string
        org:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The organization of the contact
          title: Org
        phone:
          description: The contact's phone number
          examples:
          - '+1.2125552368'
          format: phone
          title: Phone
          type: string
        postal_code:
          description: The postal code of the contact
          minLength: 1
          title: Postal Code
          type: string
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The state of the contact
          title: State
        street:
          description: The address of the contact
          minLength: 1
          title: Street
          type: string
        title:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The title of the contact
          title: Title
      required:
      - first_name
      - last_name
      - email
      - phone
      - street
      - city
      - postal_code
      - country
      - disclose
      title: ContactResponse
      type: object
    ContactRoleAttributeRequirement:
      description: Attribute requirements for a specific contact role.
      properties:
        attributes:
          description: List of required attribute keys for this role
          items:
            $ref: '#/components/schemas/RegistryHandleAttributeType'
          title: Attributes
          type: array
        role:
          $ref: '#/components/schemas/ContactRoleType'
          description: The role this requirement applies to
      required:
      - role
      - attributes
      title: ContactRoleAttributeRequirement
      type: object
    ContactRoleType:
      enum:
      - registrant
      - admin
      - tech
      - billing
      title: ContactRoleType
      type: string
    ContactSchema:
      properties:
        city:
          description: The city of the contact
          minLength: 1
          title: City
          type: string
        contact_id:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        country:
          description: The country of the contact
          minLength: 1
          title: Country
          type: string
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        disclose:
          description: Whether the contact should be disclosed
          title: Disclose
          type: boolean
        email:
          description: The email of the contact
          format: email
          title: Email
          type: string
        fax:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The contacts's fax number
          title: Fax
        first_name:
          description: The first name of the contact
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The last name of the contact
          minLength: 1
          title: Last Name
          type: string
        org:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The organization of the contact
          title: Org
        organization_id:
          default: None
          description: The organization that owns the domain
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        phone:
          description: The contact's phone number
          examples:
          - '+1.2125552368'
          format: phone
          title: Phone
          type: string
        postal_code:
          description: The postal code of the contact
          minLength: 1
          title: Postal Code
          type: string
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The state of the contact
          title: State
        street:
          description: The address of the contact
          minLength: 1
          title: Street
          type: string
        title:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The title of the contact
          title: Title
      required:
      - first_name
      - last_name
      - email
      - phone
      - street
      - city
      - postal_code
      - country
      - disclose
      title: ContactSchema
      type: object
    ContactSortField:
      enum:
      - first_name
      - last_name
      - email
      - created_on
      title: ContactSortField
      type: string
    ContactVerificationApiResponse:
      properties:
        canceled_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was cancelled
          title: Canceled On
        contact_id:
          default: None
          description: The contact that is being verified
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        contact_verification_id:
          examples:
          - contact_verification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Verification Id
          type: string
          x-typeid-prefix: contact_verification
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        status:
          $ref: '#/components/schemas/EmailVerificationStatus'
          default: pending
          description: Current status of the email verification
        token:
          description: The token to verify the email address
          maxLength: 256
          minLength: 35
          title: Token
          type: string
        type:
          $ref: '#/components/schemas/VerificationType'
          description: 'The type of verification: ''api'' for retrieving token via
            API, ''email'' for retrieving via email'
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        verified_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was verified
          title: Verified On
      required:
      - token
      - type
      title: ContactVerificationApiResponse
      type: object
    ContactVerificationEmailResponse:
      properties:
        canceled_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was cancelled
          title: Canceled On
        contact_id:
          default: None
          description: The contact that is being verified
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        contact_verification_id:
          examples:
          - contact_verification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Verification Id
          type: string
          x-typeid-prefix: contact_verification
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        status:
          $ref: '#/components/schemas/EmailVerificationStatus'
          default: pending
          description: Current status of the email verification
        type:
          $ref: '#/components/schemas/VerificationType'
          description: 'The type of verification: ''api'' for retrieving token via
            API, ''email'' for retrieving via email'
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        verified_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was verified
          title: Verified On
      required:
      - type
      title: ContactVerificationEmailResponse
      type: object
    ContactVerificationResponse:
      properties:
        canceled_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was cancelled
          title: Canceled On
        contact_id:
          default: None
          description: The contact that is being verified
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        contact_verification_id:
          examples:
          - contact_verification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Verification Id
          type: string
          x-typeid-prefix: contact_verification
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        status:
          $ref: '#/components/schemas/EmailVerificationStatus'
          default: pending
          description: Current status of the email verification
        type:
          $ref: '#/components/schemas/VerificationType'
          description: 'The type of verification: ''api'' for retrieving token via
            API, ''email'' for retrieving via email'
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        verified_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was verified
          title: Verified On
      required:
      - type
      title: ContactVerificationResponse
      type: object
    ContactsBase:
      properties:
        authinfo_required:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the registry requires authinfo for contact creation
          title: Authinfo Required
        is_thick:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the registry supports thick contacts
          title: Is Thick
        possible_attributes:
          description: List of possible attributes that can be set for this TLD
          items:
            $ref: '#/components/schemas/ContactAttributeDefinition'
          title: Possible Attributes
          type: array
        privacy_proxy:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether a privacy service is allowed
          title: Privacy Proxy
        registrant_change:
          anyOf:
          - $ref: '#/components/schemas/RegistrantChangeType'
          - type: 'null'
          description: Whether the registrant can change through update or trade
        required_attributes:
          description: List of attribute requirements by role
          items:
            $ref: '#/components/schemas/ContactRoleAttributeRequirement'
          title: Required Attributes
          type: array
        support_check:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the registry supports contact checks
          title: Support Check
        support_client_contact_id:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the registry supports client defined contact ID
          title: Support Client Contact Id
        support_transfer:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the registry supports contact transfer
          title: Support Transfer
        supported_postal_types:
          anyOf:
          - items:
              $ref: '#/components/schemas/PostalAddressType'
            type: array
          - type: 'null'
          description: Supported postal address types
          title: Supported Postal Types
        supported_roles:
          anyOf:
          - items:
              $ref: '#/components/schemas/ContactConfigBase'
            type: array
          - type: 'null'
          description: Supported contact roles
          title: Supported Roles
      title: ContactsBase
      type: object
    Currency:
      enum:
      - USD
      - EUR
      title: Currency
      type: string
    DeletePolicyType:
      enum:
      - immediate
      - expiration
      title: DeletePolicyType
      type: string
    DnsChangeAction:
      enum:
      - create_zone
      - delete_zone
      - create_record
      - delete_record
      - enable_dnssec
      - disable_dnssec
      title: DnsChangeAction
      type: string
    DnsChangeResponse:
      properties:
        action:
          $ref: '#/components/schemas/DnsChangeAction'
        record_data:
          anyOf:
          - type: string
          - type: 'null'
          title: Record Data
        rrset_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Rrset Name
        rrset_type:
          anyOf:
          - $ref: '#/components/schemas/DnsRrsetType'
          - type: 'null'
        ttl:
          anyOf:
          - type: integer
          - type: 'null'
          title: Ttl
      required:
      - action
      - rrset_name
      - rrset_type
      - record_data
      - ttl
      title: DnsChangeResponse
      type: object
    DnsChangesResponse:
      properties:
        changes:
          items:
            $ref: '#/components/schemas/DnsChangeResponse'
          title: Changes
          type: array
        changeset_id:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: Changeset Id
        num_changes:
          title: Num Changes
          type: integer
        zone_name:
          title: Zone Name
          type: string
      required:
      - zone_name
      - changeset_id
      - num_changes
      - changes
      title: DnsChangesResponse
      type: object
    DnsConfigurationBase:
      properties:
        allowed_number_of_nameserver:
          $ref: '#/components/schemas/AllowedNumberOfNameserverBase'
        czds_available:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the zone is available in CZDS
          title: Czds Available
        dnssec_allowed:
          description: Whether the registry supports DNSSEC
          title: Dnssec Allowed
          type: boolean
        dnssec_mandatory:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether DNSSEC is mandatory for a domain name
          title: Dnssec Mandatory
        dnssec_mode:
          anyOf:
          - $ref: '#/components/schemas/DnssecModeType'
          - type: 'null'
          description: DNSSEC mode
        host_objects:
          description: Whether the registry supports host objects or use attributes
          title: Host Objects
          type: boolean
        host_parent_check_tlds:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: TLDs that require parent-host checks (ns1.example.com => example.com)
          title: Host Parent Check Tlds
        registry_nameserver_check:
          description: Whether the registry checks the nameserver configuration
          title: Registry Nameserver Check
          type: boolean
        registry_root_nameserver_update:
          description: Number of hours until the root zone is updated, 0 = real-time
          minimum: 0.0
          title: Registry Root Nameserver Update
          type: integer
      required:
      - allowed_number_of_nameserver
      - registry_nameserver_check
      - dnssec_allowed
      - registry_root_nameserver_update
      - host_objects
      title: DnsConfigurationBase
      type: object
    DnsRecordCreate:
      properties:
        rdata:
          title: Rdata
          type: string
      required:
      - rdata
      title: DnsRecordCreate
      type: object
    DnsRecordPatchOp:
      properties:
        op:
          $ref: '#/components/schemas/PatchOp'
        record:
          $ref: '#/components/schemas/DnsRrsetWithOneRecordPatch'
      required:
      - op
      - record
      title: DnsRecordPatchOp
      type: object
    DnsRecordResponse:
      properties:
        rdata:
          title: Rdata
          type: string
      required:
      - rdata
      title: DnsRecordResponse
      type: object
    DnsRrsetCreate:
      properties:
        name:
          title: Name
          type: string
        records:
          items:
            $ref: '#/components/schemas/DnsRecordCreate'
          title: Records
          type: array
        ttl:
          title: Ttl
          type: integer
        type:
          $ref: '#/components/schemas/DnsRrsetType'
      required:
      - name
      - type
      - ttl
      - records
      title: DnsRrsetCreate
      type: object
    DnsRrsetPatch:
      properties:
        name:
          title: Name
          type: string
        records:
          items:
            $ref: '#/components/schemas/DnsRecordCreate'
          title: Records
          type: array
        ttl:
          title: Ttl
          type: integer
        type:
          $ref: '#/components/schemas/DnsRrsetType'
      required:
      - name
      - type
      - ttl
      - records
      title: DnsRrsetPatch
      type: object
    DnsRrsetPatchOp:
      properties:
        op:
          $ref: '#/components/schemas/PatchOp'
        rrset:
          $ref: '#/components/schemas/DnsRrsetPatch'
      required:
      - op
      - rrset
      title: DnsRrsetPatchOp
      type: object
    DnsRrsetResponse:
      properties:
        name:
          title: Name
          type: string
        records:
          items:
            $ref: '#/components/schemas/DnsRecordResponse'
          title: Records
          type: array
        ttl:
          title: Ttl
          type: integer
        type:
          $ref: '#/components/schemas/DnsRrsetType'
      required:
      - name
      - type
      - ttl
      title: DnsRrsetResponse
      type: object
    DnsRrsetType:
      enum:
      - A
      - AAAA
      - ALIAS
      - CAA
      - CNAME
      - DNSKEY
      - DS
      - MX
      - NS
      - PTR
      - TXT
      - SOA
      - SRV
      - SMIMEA
      - TLSA
      - URI
      title: DnsRrsetType
      type: string
    DnsRrsetWithOneRecordPatch:
      properties:
        name:
          title: Name
          type: string
        rdata:
          title: Rdata
          type: string
        ttl:
          title: Ttl
          type: integer
        type:
          $ref: '#/components/schemas/DnsRrsetType'
      required:
      - rdata
      - name
      - type
      - ttl
      title: DnsRrsetWithOneRecordPatch
      type: object
    DnsZoneCreate:
      properties:
        dnssec_status:
          $ref: '#/components/schemas/DnssecStatus'
          default: disabled
        name:
          title: Name
          type: string
        rrsets:
          items:
            $ref: '#/components/schemas/DnsRrsetCreate'
          title: Rrsets
          type: array
      required:
      - name
      title: DnsZoneCreate
      type: object
    DnsZoneRecordsPatchOps:
      properties:
        ops:
          items:
            $ref: '#/components/schemas/DnsRecordPatchOp'
          title: Ops
          type: array
      required:
      - ops
      title: DnsZoneRecordsPatchOps
      type: object
    DnsZoneResponse:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        dnssec_status:
          $ref: '#/components/schemas/DnssecStatus'
          default: disabled
        domain_parts:
          $ref: '#/components/schemas/DomainNameParts'
        name:
          title: Name
          type: string
        rrsets:
          items:
            $ref: '#/components/schemas/DnsRrsetResponse'
          title: Rrsets
          type: array
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
      required:
      - name
      title: DnsZoneResponse
      type: object
    DnsZoneRrsetsCreate:
      properties:
        rrsets:
          items:
            $ref: '#/components/schemas/DnsRrsetCreate'
          title: Rrsets
          type: array
      title: DnsZoneRrsetsCreate
      type: object
    DnsZoneRrsetsPatchOps:
      properties:
        ops:
          items:
            $ref: '#/components/schemas/DnsRrsetPatchOp'
          title: Ops
          type: array
      required:
      - ops
      title: DnsZoneRrsetsPatchOps
      type: object
    DnsZoneSummary:
      properties:
        total_zones:
          description: Total number of DNS zones
          title: Total Zones
          type: integer
        zones_by_dnssec:
          additionalProperties:
            type: integer
          description: Count of zones by DNSSEC status
          propertyNames:
            $ref: '#/components/schemas/DnssecStatus'
          title: Zones By Dnssec
          type: object
      required:
      - total_zones
      title: DnsZoneSummary
      type: object
    DnssecAlgorithm:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 10
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 23
      title: DnssecAlgorithm
      type: integer
    DnssecDigestType:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      title: DnssecDigestType
      type: integer
    DnssecModeType:
      enum:
      - DS
      - DNSKEY
      title: DnssecModeType
      type: string
    DnssecRecordType:
      enum:
      - ds_data
      - key_data
      title: DnssecRecordType
      type: string
    DnssecStatus:
      enum:
      - enabled
      - disabled
      title: DnssecStatus
      type: string
    DomainAttributeKey:
      enum:
      - auto_renew_period
      title: DomainAttributeKey
      type: string
    DomainAvailability:
      properties:
        domain:
          title: Domain
          type: string
        status:
          $ref: '#/components/schemas/DomainAvailabilityStatus'
      required:
      - domain
      - status
      title: DomainAvailability
      type: object
    DomainAvailabilityMeta:
      properties:
        processing_time_ms:
          title: Processing Time Ms
          type: integer
        total:
          title: Total
          type: integer
      required:
      - total
      - processing_time_ms
      title: DomainAvailabilityMeta
      type: object
    DomainAvailabilityStatus:
      enum:
      - available
      - unavailable
      - market_available
      - tmch_claim
      - error
      title: DomainAvailabilityStatus
      type: string
    DomainCheckResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/common__models__domain__domain__DomainAvailabilityResponse'
          title: Results
          type: array
      required:
      - results
      title: DomainCheckResponse
      type: object
    DomainClientStatus:
      enum:
      - clientTransferProhibited
      - clientUpdateProhibited
      - clientDeleteProhibited
      - clientRenewProhibited
      - clientHold
      title: DomainClientStatus
      type: string
    DomainContactHandles:
      additionalProperties:
        items:
          $ref: '#/components/schemas/ContactHandle'
        type: array
      propertyNames:
        $ref: '#/components/schemas/DomainContactType'
      type: object
    DomainContactResponse:
      properties:
        contact_id:
          description: The contact id of the contact
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        contact_type:
          $ref: '#/components/schemas/DomainContactType'
          description: The type of contact
      required:
      - contact_id
      - contact_type
      title: DomainContactResponse
      type: object
    DomainContactType:
      enum:
      - registrant
      - admin
      - tech
      - billing
      title: DomainContactType
      type: string
    DomainCreate:
      properties:
        auth_code:
          anyOf:
          - maxLength: 32
            minLength: 6
            type: string
          - type: 'null'
          description: The auth code used for the domain
          title: Auth Code
        contacts:
          anyOf:
          - $ref: '#/components/schemas/DomainContactHandles'
          - $ref: '#/components/schemas/ContactIdList'
          description: The contacts of the domain
          title: Contacts
        create_zone:
          default: false
          description: Create a zone for the domain on OpusDNS nameserver infrastructure
          title: Create Zone
          type: boolean
        name:
          description: The domain to be created
          title: Name
          type: string
        nameservers:
          anyOf:
          - items:
              $ref: '#/components/schemas/Nameserver'
            type: array
          - type: 'null'
          description: The name servers for the domain
          title: Nameservers
        period:
          $ref: '#/components/schemas/DomainPeriod'
          description: The registration period of the domain
        renewal_mode:
          $ref: '#/components/schemas/RenewalMode'
          description: The renewal mode of the domain
      required:
      - name
      - contacts
      - renewal_mode
      - period
      title: DomainCreate
      type: object
    DomainDnssecDataCreate:
      properties:
        algorithm:
          $ref: '#/components/schemas/DnssecAlgorithm'
          description: DNSSEC algorithm used
        digest:
          anyOf:
          - type: string
          - type: 'null'
          description: Digest value for DS records
          title: Digest
        digest_type:
          anyOf:
          - $ref: '#/components/schemas/DnssecDigestType'
          - type: 'null'
          description: Digest type for DS records
        flags:
          anyOf:
          - type: integer
          - type: 'null'
          description: DNSKEY flags for key records
          title: Flags
        key_tag:
          anyOf:
          - type: integer
          - type: 'null'
          description: Key tag for DS records
          title: Key Tag
        protocol:
          anyOf:
          - type: integer
          - type: 'null'
          description: Protocol field for key records (typically 3)
          title: Protocol
        public_key:
          anyOf:
          - type: string
          - type: 'null'
          description: Base64-encoded public key for key records
          title: Public Key
        record_type:
          $ref: '#/components/schemas/DnssecRecordType'
          description: Type of DNSSEC record (DS or Key)
      required:
      - record_type
      - algorithm
      title: DomainDnssecDataCreate
      type: object
    DomainDnssecDataResponse:
      properties:
        algorithm:
          $ref: '#/components/schemas/DnssecAlgorithm'
          description: DNSSEC algorithm used
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        digest:
          anyOf:
          - type: string
          - type: 'null'
          description: Digest value for DS records
          title: Digest
        digest_type:
          anyOf:
          - $ref: '#/components/schemas/DnssecDigestType'
          - type: 'null'
          description: Digest type for DS records
        domain_dnssec_data_id:
          examples:
          - domain_dnssec_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^domain_dnssec_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Domain Dnssec Data Id
          type: string
          x-typeid-prefix: domain_dnssec
        domain_id:
          default: None
          description: The domain this DNSSEC record belongs to
          examples:
          - domain_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Domain Id
          type: string
          x-typeid-prefix: domain
        flags:
          anyOf:
          - type: integer
          - type: 'null'
          description: DNSKEY flags for key records
          title: Flags
        key_tag:
          anyOf:
          - type: integer
          - type: 'null'
          description: Key tag for DS records
          title: Key Tag
        protocol:
          anyOf:
          - type: integer
          - type: 'null'
          description: Protocol field for key records (typically 3)
          title: Protocol
        public_key:
          anyOf:
          - type: string
          - type: 'null'
          description: Base64-encoded public key for key records
          title: Public Key
        record_type:
          $ref: '#/components/schemas/DnssecRecordType'
          description: Type of DNSSEC record (DS or Key)
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
      required:
      - record_type
      - algorithm
      title: DomainDnssecDataResponse
      type: object
    DomainLifecycleBase:
      properties:
        add_grace_period:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: Add grace period in days after registration in ISO 8601 format
            (e.g., 5D, 3D)
          title: Add Grace Period
        auto_renew_before_expiration:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: Time before expiration to auto-renew a domain in ISO 8601 format
            (e.g., 5D, -7D)
          title: Auto Renew Before Expiration
        delete_before_expiration:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: Time before expiration to delete a domain in ISO 8601 format
            (e.g., 5D, -7D)
          title: Delete Before Expiration
        delete_policy:
          anyOf:
          - items:
              $ref: '#/components/schemas/DeletePolicyType'
            type: array
          - type: 'null'
          description: How a domain can be deleted
          title: Delete Policy
        explicit_renew:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether an explicit renewal is possible
          title: Explicit Renew
        grace_period:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: Grace period after expiration in ISO 8601 format (e.g., 5D,
            -7D)
          examples:
          - P5D
          - P30D
          title: Grace Period
        pending_delete:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: Pending delete period in ISO 8601 format (e.g., 5D, 10D) after
            redemption_period
          title: Pending Delete
        redemption_period:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: Redemption period for domain recovery after grace period in
            ISO 8601 format (e.g., 5D, -7D)
          title: Redemption Period
        registration_periods:
          $ref: '#/components/schemas/PeriodList'
          description: List of allowed registration periods (e.g., '1y' or ['1y',
            '2y', '5y'])
        registry_auto_renew:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Does the registry enforce auto-renewal
          title: Registry Auto Renew
        renewal_periods:
          $ref: '#/components/schemas/PeriodList'
          description: List of allowed renewal periods (e.g., '1y' or ['1y', '2y',
            '5y'])
        rgp_operations:
          anyOf:
          - $ref: '#/components/schemas/RgpOperations'
          - type: 'null'
          description: RGP operations supported by the registry
        sync_after_operations:
          anyOf:
          - items:
              $ref: '#/components/schemas/SyncOperationType'
            type: array
          - type: 'null'
          description: Operations that trigger a sync with the registry
          title: Sync After Operations
      title: DomainLifecycleBase
      type: object
    DomainNameParts:
      properties:
        domain:
          anyOf:
          - type: string
          - type: 'null'
          examples:
          - example
          title: Domain
        subdomain:
          anyOf:
          - type: string
          - type: 'null'
          examples:
          - foo
          title: Subdomain
        suffix:
          anyOf:
          - type: string
          - type: 'null'
          examples:
          - com
          title: Suffix
      title: DomainNameParts
      type: object
    DomainPeriod:
      properties:
        unit:
          $ref: '#/components/schemas/PeriodUnit'
          description: The unit of the period
        value:
          description: Amount of time in the unit
          exclusiveMinimum: 0.0
          title: Value
          type: integer
      required:
      - value
      - unit
      title: DomainPeriod
      type: object
    DomainRenewRequest:
      properties:
        current_expiry_date:
          description: Current expiration date of the domain for validation
          format: date-time
          title: Current Expiry Date
          type: string
        period:
          $ref: '#/components/schemas/DomainPeriod'
          description: How long to extend the domain registration
      required:
      - period
      - current_expiry_date
      title: DomainRenewRequest
      type: object
    DomainRenewResponse:
      properties:
        name:
          description: The domain name that was renewed
          title: Name
          type: string
        new_expiry_date:
          description: New expiration date after renewal
          format: date-time
          title: New Expiry Date
          type: string
        period_extended:
          $ref: '#/components/schemas/DomainPeriod'
          description: The period by which the domain was extended
      required:
      - name
      - new_expiry_date
      - period_extended
      title: DomainRenewResponse
      type: object
    DomainResponse:
      properties:
        auth_code:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The auth code for the domain
          title: Auth Code
        auth_code_expires_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the auth code expires
          title: Auth Code Expires On
        canceled_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the domain was deleted
          title: Canceled On
        contacts:
          description: The contacts of the domain
          items:
            $ref: '#/components/schemas/DomainContactResponse'
          title: Contacts
          type: array
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the domain will be deleted
          title: Deleted On
        domain_id:
          examples:
          - domain_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Domain Id
          type: string
          x-typeid-prefix: domain
        expires_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the domain expires
          title: Expires On
        name:
          description: The domain name
          examples:
          - example.com
          title: Name
          type: string
        nameservers:
          description: All the domain statuses
          items:
            $ref: '#/components/schemas/Nameserver'
          title: Nameservers
          type: array
        owner_id:
          default: None
          description: The organization that owns the domain
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Owner Id
          type: string
          x-typeid-prefix: organization
        registered_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the domain was registered
          title: Registered On
        registry_account_id:
          default: None
          examples:
          - registry_account_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^registry_account_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Registry Account Id
          type: string
          x-typeid-prefix: registry_account
        registry_statuses:
          description: All the domain statuses
          items:
            type: string
          title: Registry Statuses
          type: array
        renewal_mode:
          $ref: '#/components/schemas/RenewalMode'
          description: The renewal mode of the domain
        roid:
          description: The registry object id of the domain
          examples:
          - D123456789-EXAMPLE-TEST
          title: Roid
          type: string
        sld:
          description: The second level domain
          examples:
          - example
          minLength: 1
          title: Sld
          type: string
        tld:
          description: The top level domain of the domain
          examples:
          - com
          minLength: 1
          title: Tld
          type: string
        transfer_lock:
          default: false
          description: Whether the domain is locked for transfer
          title: Transfer Lock
          type: boolean
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
      required:
      - name
      - sld
      - tld
      - roid
      title: DomainResponse
      type: object
    DomainRestoreRequest:
      properties:
        additional_info:
          anyOf:
          - type: string
          - type: 'null'
          description: Additional information to include in the restore operation
          title: Additional Info
        auto_renew:
          default: true
          description: Whether to automatically renew the domain after restore
          title: Auto Renew
          type: boolean
        reason:
          description: Reason for restoring the domain
          title: Reason
          type: string
      required:
      - reason
      title: DomainRestoreRequest
      type: object
    DomainRestoreResponse:
      properties:
        domain_id:
          description: The ID of the restored domain
          examples:
          - domain_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Domain Id
          type: string
          x-typeid-prefix: domain
        expiration_date:
          description: The new expiration date after restore
          format: date-time
          title: Expiration Date
          type: string
        name:
          description: The name of the restored domain
          title: Name
          type: string
        restored_at:
          description: When the domain restore operation was completed
          format: date-time
          title: Restored At
          type: string
      required:
      - domain_id
      - name
      - expiration_date
      - restored_at
      title: DomainRestoreResponse
      type: object
    DomainSearchMeta:
      properties:
        processing_time_ms:
          title: Processing Time Ms
          type: integer
        total:
          title: Total
          type: integer
      required:
      - total
      - processing_time_ms
      title: DomainSearchMeta
      type: object
    DomainSearchResponse:
      properties:
        meta:
          $ref: '#/components/schemas/DomainSearchMeta'
        results:
          items:
            $ref: '#/components/schemas/DomainSearchSuggestionWithPrice'
          title: Results
          type: array
      required:
      - meta
      - results
      title: DomainSearchResponse
      type: object
    DomainSearchSuggestionPriceData:
      properties:
        amount:
          anyOf:
          - type: string
          - type: 'null'
          title: Amount
        currency:
          title: Currency
          type: string
        period:
          $ref: '#/components/schemas/DomainPeriod'
      required:
      - amount
      - currency
      - period
      title: DomainSearchSuggestionPriceData
      type: object
    DomainSearchSuggestionWithPrice:
      properties:
        available:
          title: Available
          type: boolean
        domain:
          title: Domain
          type: string
        premium:
          title: Premium
          type: boolean
        price:
          $ref: '#/components/schemas/DomainSearchSuggestionPriceData'
      required:
      - domain
      - available
      - premium
      - price
      title: DomainSearchSuggestionWithPrice
      type: object
    DomainSortField:
      enum:
      - name
      - created_on
      - updated_on
      - expires_on
      - registered_on
      title: DomainSortField
      type: string
    DomainStatus:
      enum:
      - ok
      - serverTransferProhibited
      - serverUpdateProhibited
      - serverDeleteProhibited
      - serverRenewProhibited
      - serverRestoreProhibited
      - serverHold
      - transferPeriod
      - renewPeriod
      - redemptionPeriod
      - pendingUpdate
      - pendingTransfer
      - pendingRestore
      - pendingRenew
      - pendingDelete
      - pendingCreate
      - inactive
      - autoRenewPeriod
      - addPeriod
      - deleted
      - clientTransferProhibited
      - clientUpdateProhibited
      - clientDeleteProhibited
      - clientRenewProhibited
      - clientHold
      - free
      - connect
      - failed
      - invalid
      title: DomainStatus
      type: string
    DomainStatusesBase:
      properties:
        default:
          description: The default status for an active domain with no restrictions
          items:
            type: string
          title: Default
          type: array
        status_mapping:
          anyOf:
          - additionalProperties:
              items:
                $ref: '#/components/schemas/DomainStatus'
              type: array
            type: object
          - type: 'null'
          description: Mapping of registry-specific statuses to their equivalent default
            ones, if any
          title: Status Mapping
        supported_statuses:
          description: Supported domain statuses
          items:
            type: string
          title: Supported Statuses
          type: array
      required:
      - default
      - supported_statuses
      title: DomainStatusesBase
      type: object
    DomainSummaryData:
      properties:
        by_status:
          additionalProperties:
            type: integer
          description: 'Domain counts by status (status: count)'
          title: By Status
          type: object
        by_tld:
          additionalProperties:
            type: integer
          description: 'Domain counts by TLD (tld: count)'
          title: By Tld
          type: object
        expiring_soon:
          $ref: '#/components/schemas/DomainsExpiringSoon'
          description: Domains expiring soon
        total_count:
          description: Total number of domains
          title: Total Count
          type: integer
      required:
      - total_count
      - by_status
      - by_tld
      - expiring_soon
      title: DomainSummaryData
      type: object
    DomainSummaryResponse:
      properties:
        domains:
          $ref: '#/components/schemas/DomainSummaryData'
          description: Domain summary data
        organization_id:
          description: The organization ID
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      required:
      - organization_id
      - domains
      title: DomainSummaryResponse
      type: object
    DomainTransferIn:
      properties:
        attributes:
          anyOf:
          - additionalProperties:
              type: string
            propertyNames:
              $ref: '#/components/schemas/DomainAttributeKey'
            type: object
          - type: 'null'
          description: Additional attributes of the domain
          title: Attributes
        auth_code:
          description: The auth code for the domain
          title: Auth Code
          type: string
        contacts:
          anyOf:
          - $ref: '#/components/schemas/DomainContactHandles'
          - $ref: '#/components/schemas/ContactIdList'
          description: The contacts of the domain
          title: Contacts
        create_zone:
          default: false
          description: Create a zone for the domain on OpusDNS nameserver infrastructure
          title: Create Zone
          type: boolean
        name:
          description: The domain to be created
          title: Name
          type: string
        nameservers:
          anyOf:
          - items:
              $ref: '#/components/schemas/Nameserver'
            type: array
          - type: 'null'
          description: The name servers for the domain
          title: Nameservers
        renewal_mode:
          $ref: '#/components/schemas/RenewalMode'
          description: The renewal mode of the domain
      required:
      - name
      - contacts
      - renewal_mode
      - auth_code
      title: DomainTransferIn
      type: object
    DomainUpdate:
      properties:
        auth_code:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The new auth code for the domain
          title: Auth Code
        contacts:
          anyOf:
          - $ref: '#/components/schemas/DomainContactHandles'
          - $ref: '#/components/schemas/ContactIdList'
          - type: 'null'
          description: The new contacts of the domain
          examples:
          - admin: contact_01h45ytscbebyvny4gc8cr8ma2
            billing: contact_01h45ytscbebyvny4gc8cr8ma2
            registrant: contact_01h45ytscbebyvny4gc8cr8ma2
            tech: contact_01h45ytscbebyvny4gc8cr8ma2
          title: Contacts
        nameservers:
          anyOf:
          - items:
              $ref: '#/components/schemas/Nameserver'
            type: array
          - type: 'null'
          description: The new name servers for the domain
          title: Nameservers
        renewal_mode:
          anyOf:
          - $ref: '#/components/schemas/RenewalMode'
          - type: 'null'
          description: The new renewal mode of the domain
        statuses:
          anyOf:
          - items:
              $ref: '#/components/schemas/DomainClientStatus'
            type: array
          - type: 'null'
          description: The new statuses of the domain
          title: Statuses
      title: DomainUpdate
      type: object
    DomainsExpiringSoon:
      properties:
        next_30_days:
          description: Number of domains expiring in the next 30 days
          title: Next 30 Days
          type: integer
        next_60_days:
          description: Number of domains expiring in the next 60 days
          title: Next 60 Days
          type: integer
        next_90_days:
          description: Number of domains expiring in the next 90 days
          title: Next 90 Days
          type: integer
      required:
      - next_30_days
      - next_60_days
      - next_90_days
      title: DomainsExpiringSoon
      type: object
    EmailForwardAlias:
      properties:
        alias:
          title: Alias
          type: string
        forward_to:
          format: email
          title: Forward To
          type: string
      required:
      - forward_to
      - alias
      title: EmailForwardAlias
      type: object
    EmailForwardAliasUpdate:
      properties:
        forward_to:
          format: email
          title: Forward To
          type: string
      required:
      - forward_to
      title: EmailForwardAliasUpdate
      type: object
    EmailVerificationStatus:
      enum:
      - verified
      - pending
      - canceled
      title: EmailVerificationStatus
      type: string
    EppDateTime:
      anyOf:
      - format: date-time
        type: string
      - type: string
    EventObjectType:
      enum:
      - DOMAIN
      - CONTACT
      - HOST
      - RAW
      - UNKNOWN
      title: EventObjectType
      type: string
    EventResponse:
      properties:
        event_data:
          title: Event Data
          type: object
        event_id:
          examples:
          - epp_event_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Event Id
          type: string
          x-typeid-prefix: epp_event
        object_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The id of the object that the event is about
          title: Object Id
        object_type:
          $ref: '#/components/schemas/EventObjectType'
          default: RAW
          description: The type of object that the event is about
        subtype:
          anyOf:
          - $ref: '#/components/schemas/EventSubtype'
          - type: 'null'
          description: The specific type/result of operation (considering the type
            property), more detailed (e.g., 'NOTIFICATION' with the 'DOMAIN_MODIFICATION'
            class)
        type:
          anyOf:
          - $ref: '#/components/schemas/EventType'
          - type: 'null'
          description: The type of the event - indicates the kind of operation occurring
            (e.g., 'ACCOUNT_CREATE', 'DOMAIN_MODIFICATION')
      required:
      - event_data
      title: EventResponse
      type: object
    EventSchema:
      properties:
        acknowledged_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the event was acknowledged
          title: Acknowledged On
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        event_data:
          $ref: '#/components/schemas/JsonValue'
          description: Additional details about the action
        event_id:
          examples:
          - epp_event_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Event Id
          type: string
          x-typeid-prefix: epp_event
        message_queue_id:
          anyOf:
          - type: string
          - type: 'null'
          description: A composite key with the registry account + message queue ID
            from the poll operation.
          title: Message Queue Id
        object_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The id of the object that the event is about
          title: Object Id
        object_type:
          $ref: '#/components/schemas/EventObjectType'
          default: RAW
          description: The type of object that the event is about
        source:
          description: The source of the event
          maxLength: 64
          title: Source
          type: string
        source_event_id:
          anyOf:
          - examples:
            - epp_event_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: epp_event
          - type: 'null'
          description: The reference of the original registry event (if any) that
            triggered this customer-facing event
          title: Source Event Id
        subtype:
          anyOf:
          - $ref: '#/components/schemas/EventSubtype'
          - type: 'null'
          description: The specific type/result of operation (considering the type
            property), more detailed (e.g., 'NOTIFICATION' with the 'DOMAIN_MODIFICATION'
            class)
        target:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: The target of the event
          title: Target
        type:
          anyOf:
          - $ref: '#/components/schemas/EventType'
          - type: 'null'
          description: The type of the event - indicates the kind of operation occurring
            (e.g., 'ACCOUNT_CREATE', 'DOMAIN_MODIFICATION')
      required:
      - event_data
      - source
      title: EventSchema
      type: object
    EventSubtype:
      enum:
      - NOTIFICATION
      - SUCCESS
      - FAILURE
      - CANCELED
      title: EventSubtype
      type: string
    EventType:
      enum:
      - REGISTRATION
      - RENEWAL
      - MODIFICATION
      - DELETION
      - INBOUND_TRANSFER
      - OUTBOUND_TRANSFER
      title: EventType
      type: string
    GeneralAvailabilityBase:
      properties:
        start_date:
          description: Start date of general availability
          format: date-time
          title: Start Date
          type: string
      required:
      - start_date
      title: GeneralAvailabilityBase
      type: object
    GetPricesResponse:
      properties:
        prices:
          description: List of prices
          items:
            $ref: '#/components/schemas/PriceInfo'
          title: Prices
          type: array
      required:
      - prices
      title: GetPricesResponse
      type: object
    GrantType:
      enum:
      - client_credentials
      - password
      - refresh_token
      title: GrantType
      type: string
    HTTPValidationError:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
        status:
          title: Status code
          type: integer
        title:
          title: Problem Title
          type: string
        type:
          title: Problem type
          type: string
      required:
      - type
      - title
      - errors
      - status
      title: RequestValidationError
      type: object
    IdnBase:
      properties:
        idn_capable:
          description: IDN allowed
          title: Idn Capable
          type: boolean
        idn_tables:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Allowed IDN characters, file with the IDN codes
          title: Idn Tables
      required:
      - idn_capable
      title: IdnBase
      type: object
    IpRestrictionCreate:
      description: 'Create an IP restriction for an organization.


        Accepts either a single IP address or a CIDR network range.

        Individual IP addresses are stored and returned with CIDR notation (/32 for
        IPv4, /128 for IPv6).'
      properties:
        ip_network:
          description: IP address or CIDR network range. Individual IPs can be specified
            without CIDR notation.
          examples:
          - 192.0.2.1
          - 192.0.2.0/24
          - 2001:db8::1
          - 2001:db8::/32
          format: ipvanynetwork
          title: Ip Network
          type: string
        organization_id:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      required:
      - ip_network
      title: IpRestrictionCreate
      type: object
    IpRestrictionResponse:
      properties:
        created_on:
          format: date-time
          title: Created On
          type: string
        ip_network:
          description: IP address or CIDR network range. Single IPs are returned with
            /32 (IPv4) or /128 (IPv6) notation.
          examples:
          - 192.0.2.1/32
          - 192.0.2.0/24
          - 2001:db8::1/128
          - 2001:db8::/32
          format: ipvanynetwork
          title: Ip Network
          type: string
        ip_restriction_id:
          title: Ip Restriction Id
          type: integer
        last_used_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Last Used On
        organization_id:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      required:
      - ip_restriction_id
      - organization_id
      - ip_network
      - created_on
      title: IpRestrictionResponse
      type: object
    IpRestrictionUpdate:
      description: 'Update an existing IP restriction.


        You can update the IP network range or the last usage timestamp.'
      properties:
        ip_network:
          anyOf:
          - format: ipvanynetwork
            type: string
          - type: 'null'
          description: IP address or CIDR network range to replace the existing restriction.
          examples:
          - 192.0.2.1
          - 192.0.2.0/24
          - 2001:db8::1
          - 2001:db8::/32
          title: Ip Network
        last_used_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Timestamp of the last usage.
          title: Last Used On
      title: IpRestrictionUpdate
      type: object
    JsonValue: {}
    LaunchPhaseBase:
      properties:
        allocation:
          anyOf:
          - $ref: '#/components/schemas/AllocationMethodType'
          - type: 'null'
          description: Allocation method
        end_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date of the phase
          title: End Date
        smd_required:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether an SMD file is required for participation
          title: Smd Required
        start_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date of the phase
          title: Start Date
        supported:
          description: Whether this phase is supported
          title: Supported
          type: boolean
        type:
          $ref: '#/components/schemas/LaunchPhaseType'
          description: Type of launch phase
      required:
      - type
      - supported
      title: LaunchPhaseBase
      type: object
    LaunchPhaseType:
      enum:
      - sunrise
      - landrush
      - eap
      title: LaunchPhaseType
      type: string
    LaunchPhasesBase:
      properties:
        general_availability:
          $ref: '#/components/schemas/GeneralAvailabilityBase'
        phases:
          default: []
          items:
            $ref: '#/components/schemas/LaunchPhaseBase'
          title: Phases
          type: array
        trademark_claims:
          anyOf:
          - $ref: '#/components/schemas/TrademarkClaimsBase'
          - type: 'null'
      required:
      - general_availability
      title: LaunchPhasesBase
      type: object
    LocalPresenceBase:
      properties:
        eligible_countries:
          anyOf:
          - items:
              pattern: ^\w{2}$
              type: string
            type: array
          - type: 'null'
          description: ISO 3166-1 Alpha-2 country code
          title: Eligible Countries
        required:
          description: Whether a local presence is required to register and maintain
            a domain name
          title: Required
          type: boolean
        requirement:
          anyOf:
          - items:
              $ref: '#/components/schemas/LocalPresenceRequirementType'
            type: array
          - type: 'null'
          description: Type of local presence requirement
          title: Requirement
        type:
          anyOf:
          - items:
              $ref: '#/components/schemas/ContactRoleType'
            type: array
          - type: 'null'
          description: Who must meet the requirement
          title: Type
      required:
      - required
      title: LocalPresenceBase
      type: object
    LocalPresenceRequirementType:
      enum:
      - physical_address
      - business_entity
      title: LocalPresenceRequirementType
      type: string
    Nameserver:
      properties:
        hostname:
          description: The name server of the domain
          examples:
          - ns1.example.com
          title: Hostname
          type: string
        ip_addresses:
          description: The ip addresses of the name server
          examples:
          - - 0.0.0.0
            - 127.0.0.1
          - - 2001:db8::1
            - 2001:db8::2
          items:
            format: ipvanyaddress
            type: string
          title: Ip Addresses
          type: array
      required:
      - hostname
      title: Nameserver
      type: object
    Organization:
      properties:
        address_1:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: First line of the organization's address.
          title: Address 1
        address_2:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Second line of the organization's address.
          title: Address 2
        attributes:
          items:
            $ref: '#/components/schemas/OrganizationAttribute'
          title: Attributes
          type: array
        business_number:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Government issued business identifier for the organization
            issued.
          title: Business Number
        city:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: City of the organization's address.
          title: City
        country_code:
          anyOf:
          - maxLength: 2
            pattern: ^\w{2}$
            type: string
          - type: 'null'
          description: ISO 3166-1 alpha-2 country code.
          title: Country Code
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        currency:
          anyOf:
          - $ref: '#/components/schemas/Currency'
          - type: 'null'
          description: The currency used by the organization.
        default_locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: Default locale for the organization.
          title: Default Locale
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        name:
          description: Name of the organization.
          minLength: 1
          title: Name
          type: string
        organization_id:
          description: Unique identifier for the organization.
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        parent_organization_id:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: ID of the parent organization.
          title: Parent Organization Id
        postal_code:
          anyOf:
          - maxLength: 20
            minLength: 1
            type: string
          - type: 'null'
          description: Postal code of the organization's address.
          title: Postal Code
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: State or province of the organization's address.
          title: State
        status:
          $ref: '#/components/schemas/OrganizationStatus'
          default: active
          description: Status of the organization.
        tax_id:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Tax ID of the organization.
          title: Tax Id
        tax_id_type:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Type of tax ID for the organization.
          title: Tax Id Type
        tax_rate:
          anyOf:
          - type: string
          - type: 'null'
          description: Tax rate for the organization.
          title: Tax Rate
        users:
          items:
            $ref: '#/components/schemas/User'
          title: Users
          type: array
      required:
      - name
      title: Organization
      type: object
    OrganizationAttribute:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        organization_attribute_id:
          title: Organization Attribute Id
          type: integer
        private:
          default: false
          description: When true, the attribute is private and not visible to users.
          title: Private
          type: boolean
        protected:
          default: false
          description: When true, the attribute is protected and cannot be modified
            by users.
          title: Protected
          type: boolean
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      - organization_attribute_id
      title: OrganizationAttribute
      type: object
    OrganizationAttributeCreate:
      properties:
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        private:
          default: false
          description: When true, the attribute is private and not visible to users.
          title: Private
          type: boolean
        protected:
          default: false
          description: When true, the attribute is protected and cannot be modified
            by users.
          title: Protected
          type: boolean
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      title: OrganizationAttributeCreate
      type: object
    OrganizationAttributeResponse:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        organization_attribute_id:
          title: Organization Attribute Id
          type: integer
        protected:
          default: false
          description: When true, the attribute is protected and cannot be modified
            by users.
          title: Protected
          type: boolean
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      - organization_attribute_id
      title: OrganizationAttributeResponse
      type: object
    OrganizationAttributeUpdate:
      properties:
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        private:
          default: false
          description: When true, the attribute is private and not visible to users.
          title: Private
          type: boolean
        protected:
          default: false
          description: When true, the attribute is protected and cannot be modified
            by users.
          title: Protected
          type: boolean
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      title: OrganizationAttributeUpdate
      type: object
    OrganizationCreate:
      properties:
        address_1:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: First line of the organization's address.
          title: Address 1
        address_2:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Second line of the organization's address.
          title: Address 2
        attributes:
          description: List of attributes for the organization.
          items:
            $ref: '#/components/schemas/OrganizationAttributeCreate'
          title: Attributes
          type: array
        business_number:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Government issued business identifier for the organization
            issued.
          title: Business Number
        city:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: City of the organization's address.
          title: City
        country_code:
          anyOf:
          - maxLength: 2
            pattern: ^\w{2}$
            type: string
          - type: 'null'
          description: ISO 3166-1 alpha-2 country code.
          title: Country Code
        currency:
          anyOf:
          - $ref: '#/components/schemas/Currency'
          - type: 'null'
          description: The currency used by the organization.
        default_locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: Default locale for the organization.
          title: Default Locale
        name:
          description: Name of the organization.
          minLength: 1
          title: Name
          type: string
        parent_organization_id:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: ID of the parent organization.
          title: Parent Organization Id
        postal_code:
          anyOf:
          - maxLength: 20
            minLength: 1
            type: string
          - type: 'null'
          description: Postal code of the organization's address.
          title: Postal Code
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: State or province of the organization's address.
          title: State
        tax_id:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Tax ID of the organization.
          title: Tax Id
        tax_id_type:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Type of tax ID for the organization.
          title: Tax Id Type
        tax_rate:
          anyOf:
          - type: number
          - type: string
          - type: 'null'
          description: Tax rate for the organization.
          title: Tax Rate
        users:
          description: List of users that needs to be created with the organization.
          items:
            $ref: '#/components/schemas/UserCreate'
          title: Users
          type: array
      required:
      - name
      title: OrganizationCreate
      type: object
    OrganizationStatus:
      enum:
      - active
      - inactive
      title: OrganizationStatus
      type: string
    OrganizationTokenResponse:
      properties:
        access_token:
          title: Access Token
          type: string
        expires_in:
          title: Expires In
          type: integer
        token_type:
          default: Bearer
          title: Token Type
          type: string
      required:
      - access_token
      - expires_in
      title: OrganizationTokenResponse
      type: object
    OrganizationUpdate:
      properties:
        address_1:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: First line of the organization's address.
          title: Address 1
        address_2:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Second line of the organization's address.
          title: Address 2
        business_number:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Government issued business identifier for the organization
            issued.
          title: Business Number
        city:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: City of the organization's address.
          title: City
        country_code:
          anyOf:
          - description: ISO 3166-1 alpha-2 country code.
            maxLength: 2
            minLength: 2
            pattern: ^\w{2}$
            type: string
          - type: 'null'
          title: Country Code
        default_locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: Default locale for the organization.
          title: Default Locale
        name:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Name of the organization.
          title: Name
        postal_code:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Postal code of the organization's address.
          title: Postal Code
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: State or province of the organization's address.
          title: State
        tax_id:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Tax ID of the organization.
          title: Tax Id
        tax_id_type:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Type of tax ID for the organization.
          title: Tax Id Type
        tax_rate:
          anyOf:
          - type: number
          - type: string
          - type: 'null'
          description: Tax rate for the organization.
          title: Tax Rate
      title: OrganizationUpdate
      type: object
    OrganizationWithBillingData:
      properties:
        account_balance:
          anyOf:
          - type: string
          - type: 'null'
          title: Account Balance
        active_plan:
          $ref: '#/components/schemas/BillingPlan'
        address_1:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: First line of the organization's address.
          title: Address 1
        address_2:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Second line of the organization's address.
          title: Address 2
        attributes:
          items:
            $ref: '#/components/schemas/OrganizationAttribute'
          title: Attributes
          type: array
        billing_metadata:
          $ref: '#/components/schemas/BillingMetadata'
        business_number:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Government issued business identifier for the organization
            issued.
          title: Business Number
        city:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: City of the organization's address.
          title: City
        country_code:
          anyOf:
          - maxLength: 2
            pattern: ^\w{2}$
            type: string
          - type: 'null'
          description: ISO 3166-1 alpha-2 country code.
          title: Country Code
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        currency:
          anyOf:
          - $ref: '#/components/schemas/Currency'
          - type: 'null'
          description: The currency used by the organization.
        default_locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: Default locale for the organization.
          title: Default Locale
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        name:
          description: Name of the organization.
          minLength: 1
          title: Name
          type: string
        organization_id:
          description: Unique identifier for the organization.
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        parent_organization_id:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: ID of the parent organization.
          title: Parent Organization Id
        postal_code:
          anyOf:
          - maxLength: 20
            minLength: 1
            type: string
          - type: 'null'
          description: Postal code of the organization's address.
          title: Postal Code
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: State or province of the organization's address.
          title: State
        status:
          $ref: '#/components/schemas/OrganizationStatus'
          default: active
          description: Status of the organization.
        tax_id:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Tax ID of the organization.
          title: Tax Id
        tax_id_type:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Type of tax ID for the organization.
          title: Tax Id Type
        tax_rate:
          anyOf:
          - type: string
          - type: 'null'
          description: Tax rate for the organization.
          title: Tax Rate
        users:
          items:
            $ref: '#/components/schemas/User'
          title: Users
          type: array
      required:
      - name
      title: OrganizationWithBillingData
      type: object
    PaginationMetadata:
      properties:
        current_page:
          title: Current Page
          type: integer
        has_next_page:
          title: Has Next Page
          type: boolean
        has_previous_page:
          title: Has Previous Page
          type: boolean
        page_size:
          title: Page Size
          type: integer
        total_items:
          title: Total Items
          type: integer
        total_pages:
          title: Total Pages
          type: integer
      required:
      - total_pages
      - total_items
      - current_page
      - page_size
      - has_next_page
      - has_previous_page
      title: PaginationMetadata
      type: object
    Pagination_BillingTransactionResponse_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/BillingTransactionResponse'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[BillingTransactionResponse]
      type: object
    Pagination_ContactSchema_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/ContactSchema'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[ContactSchema]
      type: object
    Pagination_DnsZoneResponse_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/DnsZoneResponse'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[DnsZoneResponse]
      type: object
    Pagination_DomainResponse_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/DomainResponse'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[DomainResponse]
      type: object
    Pagination_EmailForwardAlias_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/EmailForwardAlias'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[EmailForwardAlias]
      type: object
    Pagination_EventResponse_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/EventResponse'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[EventResponse]
      type: object
    Pagination_Organization_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/Organization'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[Organization]
      type: object
    Pagination_Redirect_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/Redirect'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[Redirect]
      type: object
    Pagination_User_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/User'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[User]
      type: object
    PasswordUpdate:
      properties:
        new_password:
          examples:
          - correcthorsebatterystaple
          title: New Password
          type: string
      required:
      - new_password
      title: PasswordUpdate
      type: object
    PatchOp:
      enum:
      - upsert
      - remove
      title: PatchOp
      type: string
    Period:
      properties:
        unit:
          $ref: '#/components/schemas/PeriodUnit'
          description: The unit of the period
        value:
          description: Amount of time in the unit
          exclusiveMinimum: 0.0
          title: Value
          type: integer
      required:
      - value
      - unit
      title: Period
      type: object
    PeriodList:
      anyOf:
      - items:
          $ref: '#/components/schemas/Period'
        type: array
      - type: 'null'
    PeriodUnit:
      enum:
      - y
      - m
      - d
      title: PeriodUnit
      type: string
    Permission:
      enum:
      - bulk_create
      - bulk_delete
      - bulk_renew_expire
      - bulk_transfer_trade
      - bulk_update
      - corporate_plan
      - create
      - delete
      - enterprise_plan
      - has_accepted_tos
      - manage_api_keys
      - manage_billing
      - manage_cms_content
      - manage_contacts
      - manage_dns_zones
      - manage_domains
      - manage_email_forwards
      - manage_events
      - manage_opusdns_api_keys
      - manage_products
      - manage_reseller
      - manage_users
      - manage_user_relations
      - plan_manager
      - premium_plan
      - renew_expire
      - starter_plan
      - transfer_trade
      - update
      - verify
      - view
      - view_audit_logs
      - view_events
      title: Permission
      type: string
    PermissionSet:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          title: Permissions
          type: array
      title: PermissionSet
      type: object
    PostTransferRequirements:
      enum:
      - update_contacts
      - tld_specific
      title: PostTransferRequirements
      type: string
    PostalAddressType:
      enum:
      - loc
      - int
      title: PostalAddressType
      type: string
    PremiumAffectsType:
      enum:
      - registration
      - renewal
      title: PremiumAffectsType
      type: string
    PremiumDomainsBase:
      properties:
        affects:
          anyOf:
          - items:
              $ref: '#/components/schemas/PremiumAffectsType'
            type: array
          - type: 'null'
          description: What operations are affected by premium status
          title: Affects
        source:
          anyOf:
          - $ref: '#/components/schemas/PremiumSourceType'
          - type: 'null'
          description: Source of premium domain information
        supported:
          description: Whether the registry has premium domains
          title: Supported
          type: boolean
      required:
      - supported
      title: PremiumDomainsBase
      type: object
    PremiumSourceType:
      enum:
      - EPP
      - API
      - CSV
      - manual
      title: PremiumSourceType
      type: string
    PriceInfo:
      properties:
        currency:
          title: Currency
          type: string
        period:
          anyOf:
          - $ref: '#/components/schemas/PricingPeriod'
          - type: 'null'
          description: Pricing period (e.g., 1 year, 2 months)
        price:
          title: Price
          type: string
        product_action:
          anyOf:
          - type: string
          - type: 'null'
          title: Product Action
        product_class:
          anyOf:
          - type: string
          - type: 'null'
          title: Product Class
        product_type:
          title: Product Type
          type: string
      required:
      - product_type
      - price
      - currency
      title: PriceInfo
      type: object
    PricingPeriod:
      properties:
        unit:
          $ref: '#/components/schemas/PeriodUnit'
          description: The unit of the period
        value:
          description: Amount of time in the unit
          exclusiveMinimum: 0.0
          title: Value
          type: integer
      required:
      - value
      - unit
      title: PricingPeriod
      type: object
    Problem:
      properties:
        detail:
          anyOf:
          - type: string
          - type: 'null'
          title: Problem detail
        status:
          title: Status code
          type: integer
        title:
          title: Problem Title
          type: string
        type:
          title: Problem type
          type: string
      required:
      - type
      - title
      - detail
      - status
      title: Problem
      type: object
    PublicAuthRequestForm:
      properties:
        client_id:
          description: The organization ID associated with the credentials.
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Client Id
          type: string
          x-typeid-prefix: organization
        client_secret:
          description: Client secret for authentication.
          title: Client Secret
          type: string
        grant_type:
          description: The grant type for the authentication request (should always
            be 'client_credentials').
          title: Grant Type
          type: string
      required:
      - grant_type
      - client_id
      - client_secret
      title: PublicAuthRequestForm
      type: object
    RdapBase:
      properties:
        rdap_server:
          anyOf:
          - format: uri
            maxLength: 2083
            minLength: 1
            type: string
          - type: 'null'
          description: RDAP server URL
          title: Rdap Server
      title: RdapBase
      type: object
    Redirect:
      properties:
        redirect_code:
          title: Redirect Code
          type: integer
        request_domain:
          title: Request Domain
          type: string
        request_path:
          title: Request Path
          type: string
        request_protocol:
          title: Request Protocol
          type: string
        request_subdomain:
          title: Request Subdomain
          type: string
        target_domain:
          title: Target Domain
          type: string
        target_path:
          title: Target Path
          type: string
        target_protocol:
          title: Target Protocol
          type: string
        target_subdomain:
          title: Target Subdomain
          type: string
      required:
      - request_protocol
      - request_subdomain
      - request_path
      - target_protocol
      - target_subdomain
      - target_domain
      - target_path
      - redirect_code
      - request_domain
      title: Redirect
      type: object
    RedirectPatchOp:
      properties:
        op:
          $ref: '#/components/schemas/PatchOp'
        redirect:
          anyOf:
          - $ref: '#/components/schemas/Redirect'
          - $ref: '#/components/schemas/RedirectRemove'
          title: Redirect
      required:
      - op
      - redirect
      title: RedirectPatchOp
      type: object
    RedirectPatchOps:
      properties:
        ops:
          items:
            $ref: '#/components/schemas/RedirectPatchOp'
          title: Ops
          type: array
      required:
      - ops
      title: RedirectPatchOps
      type: object
    RedirectRemove:
      properties:
        request_domain:
          title: Request Domain
          type: string
        request_path:
          title: Request Path
          type: string
        request_protocol:
          title: Request Protocol
          type: string
        request_subdomain:
          title: Request Subdomain
          type: string
      required:
      - request_protocol
      - request_subdomain
      - request_path
      - request_domain
      title: RedirectRemove
      type: object
    RedirectSet:
      properties:
        redirects:
          items:
            $ref: '#/components/schemas/RedirectUpdate'
          title: Redirects
          type: array
      required:
      - redirects
      title: RedirectSet
      type: object
    RedirectUpdate:
      properties:
        redirect_code:
          title: Redirect Code
          type: integer
        request_path:
          title: Request Path
          type: string
        request_protocol:
          title: Request Protocol
          type: string
        request_subdomain:
          title: Request Subdomain
          type: string
        target_domain:
          title: Target Domain
          type: string
        target_path:
          title: Target Path
          type: string
        target_protocol:
          title: Target Protocol
          type: string
        target_subdomain:
          title: Target Subdomain
          type: string
      required:
      - request_protocol
      - request_subdomain
      - request_path
      - target_protocol
      - target_subdomain
      - target_domain
      - target_path
      - redirect_code
      title: RedirectUpdate
      type: object
    RegistrantChangeType:
      enum:
      - update
      - trade
      title: RegistrantChangeType
      type: string
    RegistryHandleAttributeType:
      description: Registry handle attribute types for type-safe attribute key access.
      enum:
      - at-ext-contact:type
      - DE_CONTACT_TYPE
      title: RegistryHandleAttributeType
      type: string
    RegistryLockBase:
      properties:
        prevents:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: What operations are prevented by registry lock
          title: Prevents
        removal_process:
          anyOf:
          - type: string
          - type: 'null'
          description: Process for unlocking the domain
          title: Removal Process
        requires_manual_request:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether a manual request is required
          title: Requires Manual Request
        supported:
          description: Whether the registry provides a Registry Lock feature
          title: Supported
          type: boolean
      required:
      - supported
      title: RegistryLockBase
      type: object
    Relation:
      enum:
      - accepted_tos
      - admin
      - api_admin
      - billing_manager
      - client_api_key
      - cms_content_editor
      - contact_manager
      - domain_manager
      - email_forward_manager
      - events_manager
      - member
      - opusdns_internal_api_key
      - organization_manager
      - owner
      - parent
      - product_manager
      - reseller_manager
      - root_admin
      - self
      title: Relation
      type: string
    RelationSet:
      properties:
        relations:
          items:
            $ref: '#/components/schemas/Relation'
          title: Relations
          type: array
      title: RelationSet
      type: object
    RenewalMode:
      enum:
      - renew
      - expire
      - delete
      title: RenewalMode
      type: string
    ReservedDomainsBase:
      properties:
        source:
          anyOf:
          - $ref: '#/components/schemas/ReservedSourceType'
          - type: 'null'
          description: Source of reserved domain information
        supported:
          description: Registry provides a reserved list
          title: Supported
          type: boolean
        url:
          anyOf:
          - format: uri
            maxLength: 2083
            minLength: 1
            type: string
          - type: 'null'
          description: Link to reserved list
          title: Url
      required:
      - supported
      title: ReservedDomainsBase
      type: object
    ReservedSourceType:
      enum:
      - API
      - CSV
      - manual
      title: ReservedSourceType
      type: string
    RgpOperations:
      properties:
        report:
          default: true
          description: Whether registry supports RGP restore report
          title: Report
          type: boolean
        request:
          default: true
          description: Whether registry supports RGP restore request
          title: Request
          type: boolean
      title: RgpOperations
      type: object
    SldLength:
      properties:
        max:
          description: Maximum length of a domain name
          maximum: 63.0
          title: Max
          type: integer
        min:
          description: Minimum length of a domain name
          minimum: 1.0
          title: Min
          type: integer
      required:
      - min
      - max
      title: SldLength
      type: object
    SortOrder:
      enum:
      - asc
      - desc
      title: SortOrder
      type: string
    SpiceDbRelationshipUpdate:
      properties:
        add:
          anyOf:
          - items:
              $ref: '#/components/schemas/Relation'
            type: array
          - type: 'null'
          title: Add
        remove:
          anyOf:
          - items:
              $ref: '#/components/schemas/Relation'
            type: array
          - type: 'null'
          title: Remove
      title: SpiceDbRelationshipUpdate
      type: object
    SyncOperationType:
      enum:
      - registration
      - renewal
      - transfer
      title: SyncOperationType
      type: string
    TLDType:
      enum:
      - gTLD
      - ccTLD
      title: TLDType
      type: string
    TldBase:
      properties:
        name:
          description: The TLD being configured
          title: Name
          type: string
        third_level_structure:
          default: []
          description: Name of the third levels (name and overrides)
          items:
            type: string
          title: Third Level Structure
          type: array
        type:
          $ref: '#/components/schemas/TLDType'
          description: The type of the TLD (e.g., gTLD, ccTLD)
      required:
      - name
      - type
      title: TldBase
      type: object
    TldResponseShort:
      properties:
        tld:
          examples:
          - com
          - org
          - net
          title: Tld
          type: string
        type:
          $ref: '#/components/schemas/TLDType'
          examples:
          - gTLD
          - ccTLD
      required:
      - tld
      - type
      title: TldResponseShort
      type: object
    TldSpecificationResponse:
      properties:
        characters:
          $ref: '#/components/schemas/SldLength'
          description: Character limits for domain names
        contacts:
          anyOf:
          - $ref: '#/components/schemas/ContactsBase'
          - type: 'null'
          description: Contacts configuration
        dns_configuration:
          $ref: '#/components/schemas/DnsConfigurationBase'
          description: DNS configuration
        domain_lifecycle:
          $ref: '#/components/schemas/DomainLifecycleBase'
          description: Domain lifecycle configuration
        domain_statuses:
          $ref: '#/components/schemas/DomainStatusesBase'
          description: Domain statuses configuration
        idn:
          $ref: '#/components/schemas/IdnBase'
          description: IDN configuration
        launch_phases:
          anyOf:
          - $ref: '#/components/schemas/LaunchPhasesBase'
          - type: 'null'
          description: Launch phases configuration
        local_presence:
          anyOf:
          - $ref: '#/components/schemas/LocalPresenceBase'
          - type: 'null'
          description: Local presence requirements
        premium_domains:
          anyOf:
          - $ref: '#/components/schemas/PremiumDomainsBase'
          - type: 'null'
          description: Premium domains configuration
        rdap:
          anyOf:
          - $ref: '#/components/schemas/RdapBase'
          - type: 'null'
          description: RDAP configuration
        registry_lock:
          anyOf:
          - $ref: '#/components/schemas/RegistryLockBase'
          - type: 'null'
          description: Registry lock configuration
        reserved_domains:
          anyOf:
          - $ref: '#/components/schemas/ReservedDomainsBase'
          - type: 'null'
          description: Reserved domains configuration
        tlds:
          description: List of TLDs being configured
          items:
            $ref: '#/components/schemas/TldBase'
          title: Tlds
          type: array
        transfer_policies:
          $ref: '#/components/schemas/TransferPoliciesBase'
          description: Transfer policies configuration
        whois:
          anyOf:
          - $ref: '#/components/schemas/WhoisBase'
          - type: 'null'
          description: WHOIS configuration
      required:
      - tlds
      - domain_lifecycle
      - domain_statuses
      - characters
      - idn
      - dns_configuration
      - transfer_policies
      title: TldSpecificationResponse
      type: object
    TrademarkClaimsBase:
      properties:
        end_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: End date of trademark claims
          title: End Date
        start_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Start date of trademark claims
          title: Start Date
        supported:
          description: Whether trademark claims are supported
          title: Supported
          type: boolean
        tmch_required:
          anyOf:
          - type: boolean
          - type: 'null'
          description: If true, claim notifications are mandatory within the timeframe
          title: Tmch Required
      required:
      - supported
      title: TrademarkClaimsBase
      type: object
    TransferAckType:
      enum:
      - none
      - registrar
      - registrant
      - both
      title: TransferAckType
      type: string
    TransferPoliciesBase:
      properties:
        authinfo_max_length:
          anyOf:
          - minimum: 1.0
            type: integer
          - type: 'null'
          description: Maximum length of the auth info
          title: Authinfo Max Length
        authinfo_min_length:
          anyOf:
          - minimum: 1.0
            type: integer
          - type: 'null'
          description: Minimum length of the auth info
          title: Authinfo Min Length
        authinfo_required:
          description: Whether an auth info is required for transfers
          title: Authinfo Required
          type: boolean
        authinfo_time_limited:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether an auth info has a time limit
          title: Authinfo Time Limited
        authinfo_validity_period:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: Validity period of the auth info (e.g., '5D' for 5 days)
          title: Authinfo Validity Period
        info_contact_authinfo:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether querying a foreign contact with authinfo is possible
          title: Info Contact Authinfo
        info_domain_authinfo:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether querying a foreign domain with authinfo is possible
          title: Info Domain Authinfo
        post_transfer_requirements:
          anyOf:
          - items:
              $ref: '#/components/schemas/PostTransferRequirements'
            type: array
          - type: 'null'
          description: 'Post-transfer requirements: lists the behaviors, as in [''update_contacts'',
            ''set_transfer_lock''] or [ ''tld_specific'' ] for specific behavior'
          title: Post Transfer Requirements
        transfer_ack:
          anyOf:
          - $ref: '#/components/schemas/TransferAckType'
          - type: 'null'
          description: Whether a transfer can be approved
        transfer_email_required:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether an email confirmation is required to perform the transfer
          title: Transfer Email Required
        transfer_lock_enabled:
          description: Whether transfers are locked by default in our system
          title: Transfer Lock Enabled
          type: boolean
        transfer_nack:
          anyOf:
          - $ref: '#/components/schemas/TransferAckType'
          - type: 'null'
          description: Whether a transfer can be denied
        transfer_renewal_period:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: If transfer_renews_domain is true, the renewal period (e.g.,
            '1Y' for 1 year)
          title: Transfer Renewal Period
        transfer_renews_domain:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether a transfer triggers a domain renewal
          title: Transfer Renews Domain
        transfer_time:
          anyOf:
          - examples:
            - P5D
            - P1Y
            pattern: ^\-?P?(\d+Y)?(\d+M)?(\d+D)?T?(\d+H)?(\d+M)?(\d+S)?$
            type: string
          - type: 'null'
          description: Time duration of transfers in ISO 8601 format (e.g., 5D, -7D)
            according to the policy, 0 = real-time
          title: Transfer Time
      required:
      - transfer_lock_enabled
      - authinfo_required
      title: TransferPoliciesBase
      type: object
    User:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        email:
          description: The user's email address
          format: email
          title: Email
          type: string
        first_name:
          description: The user's first name
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The user's last name
          minLength: 1
          title: Last Name
          type: string
        locale:
          examples:
          - en_US
          title: Locale
          type: string
        organization_id:
          default: None
          description: The user's organization id
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          examples:
          - '+1.2125552368'
          title: Phone
        status:
          $ref: '#/components/schemas/UserStatus'
          readOnly: true
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        user_id:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
        username:
          description: The user's unique username
          maxLength: 128
          minLength: 3
          pattern: ^[a-zA-Z0-9\-+_@.]+$
          title: Username
          type: string
      required:
      - username
      - first_name
      - last_name
      - email
      - locale
      - status
      title: User
      type: object
    UserAttributeBase:
      properties:
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      title: UserAttributeBase
      type: object
    UserCreate:
      properties:
        email:
          description: The user's email address
          format: email
          title: Email
          type: string
        first_name:
          description: The user's first name
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The user's last name
          minLength: 1
          title: Last Name
          type: string
        locale:
          examples:
          - en_US
          title: Locale
          type: string
        password:
          description: Plaintext password for hashing during creation
          examples:
          - correcthorsebatterystaple
          title: Password
          type: string
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          examples:
          - '+1.2125552368'
          title: Phone
        user_attributes:
          anyOf:
          - items:
              $ref: '#/components/schemas/UserAttributeBase'
            type: array
          - type: 'null'
          description: User attributes
          title: User Attributes
        username:
          description: The user's unique username
          maxLength: 128
          minLength: 3
          pattern: ^[a-zA-Z0-9\-+_@.]+$
          title: Username
          type: string
      required:
      - username
      - first_name
      - last_name
      - email
      - locale
      - password
      title: UserCreate
      type: object
    UserStatus:
      enum:
      - active
      - inactive
      title: UserStatus
      type: string
    UserTokenResponse:
      properties:
        access_token:
          title: Access Token
          type: string
        expires_in:
          title: Expires In
          type: integer
        refresh_expires_in:
          title: Refresh Expires In
          type: integer
        refresh_token:
          title: Refresh Token
          type: string
        token_type:
          default: Bearer
          title: Token Type
          type: string
      required:
      - access_token
      - expires_in
      - refresh_token
      - refresh_expires_in
      title: UserTokenResponse
      type: object
    UserUpdate:
      properties:
        email:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          description: The user's email address
          title: Email
        first_name:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The user's first name
          title: First Name
        last_name:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The user's last name
          title: Last Name
        locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: The user's locale
          title: Locale
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          title: Phone
        user_attributes:
          anyOf:
          - items:
              $ref: '#/components/schemas/UserAttributeBase'
            type: array
          - type: 'null'
          description: User attributes
          title: User Attributes
        username:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The user's unique username
          title: Username
      title: UserUpdate
      type: object
    UserWithAttributes:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        email:
          description: The user's email address
          format: email
          title: Email
          type: string
        first_name:
          description: The user's first name
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The user's last name
          minLength: 1
          title: Last Name
          type: string
        locale:
          examples:
          - en_US
          title: Locale
          type: string
        organization_id:
          default: None
          description: The user's organization id
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          examples:
          - '+1.2125552368'
          title: Phone
        status:
          $ref: '#/components/schemas/UserStatus'
          readOnly: true
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        user_attributes:
          additionalProperties:
            $ref: '#/components/schemas/JsonValue'
          description: All of the user attributes
          examples:
          - array:
            - 1
            - 2
            - 3
            bool: true
            number: 1
            string: value2
          title: User Attributes
          type: object
        user_id:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
        username:
          description: The user's unique username
          maxLength: 128
          minLength: 3
          pattern: ^[a-zA-Z0-9\-+_@.]+$
          title: Username
          type: string
      required:
      - username
      - first_name
      - last_name
      - email
      - locale
      - status
      title: UserWithAttributes
      type: object
    UserWithRelationPermissions:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        email:
          description: The user's email address
          format: email
          title: Email
          type: string
        first_name:
          description: The user's first name
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The user's last name
          minLength: 1
          title: Last Name
          type: string
        locale:
          examples:
          - en_US
          title: Locale
          type: string
        organization_id:
          default: None
          description: The user's organization id
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        permissions:
          anyOf:
          - items:
              $ref: '#/components/schemas/Permission'
            type: array
          - type: 'null'
          title: Permissions
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          examples:
          - '+1.2125552368'
          title: Phone
        relations:
          anyOf:
          - items:
              $ref: '#/components/schemas/Relation'
            type: array
          - type: 'null'
          title: Relations
        status:
          $ref: '#/components/schemas/UserStatus'
          readOnly: true
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        user_attributes:
          additionalProperties:
            $ref: '#/components/schemas/JsonValue'
          description: All of the user attributes
          examples:
          - array:
            - 1
            - 2
            - 3
            bool: true
            number: 1
            string: value2
          title: User Attributes
          type: object
        user_id:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
        username:
          description: The user's unique username
          maxLength: 128
          minLength: 3
          pattern: ^[a-zA-Z0-9\-+_@.]+$
          title: Username
          type: string
      required:
      - username
      - first_name
      - last_name
      - email
      - locale
      - status
      title: UserWithRelationPermissions
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    VerificationType:
      enum:
      - api
      - email
      title: VerificationType
      type: string
    WhoisBase:
      properties:
        whois_server:
          anyOf:
          - type: string
          - type: 'null'
          description: WHOIS server
          title: Whois Server
      title: WhoisBase
      type: object
    ZoneSortField:
      enum:
      - name
      - created_on
      - updated_on
      - dnssec_status
      title: ZoneSortField
      type: string
    common__models__availability__datasource__DomainAvailabilityResponse:
      properties:
        meta:
          $ref: '#/components/schemas/DomainAvailabilityMeta'
        results:
          items:
            $ref: '#/components/schemas/DomainAvailability'
          title: Results
          type: array
      required:
      - meta
      - results
      title: DomainAvailabilityResponse
      type: object
    common__models__domain__domain__DomainAvailabilityResponse:
      properties:
        available:
          title: Available
          type: boolean
        domain:
          description: The domain name
          examples:
          - example.com
          title: Domain
          type: string
        reason:
          anyOf:
          - type: string
          - type: 'null'
          title: Reason
      required:
      - domain
      - available
      - reason
      title: DomainAvailabilityResponse
      type: object
  securitySchemes:
    APIKeyHeader:
      description: API key for the organization.
      in: header
      name: X-Api-Key
      type: apiKey
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: token
      type: oauth2
info:
  description: '# Authentication


    Describes authentication approach.



    # Resource IDs


    The API uses extensively [Type IDs](https://github.com/jetify-com/typeid): type-safe,
    K-sortable, globally unique identifier inspired by Stripe IDs. They can be easily
    identified with a format like `prefix_01jxe1nzrmf78scaqbkjx0va0f`. The `prefix`
    gives context to the ID - some examples include `user`, `organization`, `domain`.
    The rest of the ID is a 128-bit UUIDv7 encoded as a 26-character string using
    a modified base32 encoding. See [formal specification for details](https://github.com/jetify-com/typeid/tree/main/spec).


    This approach allows using unique IDs (UUIDv7), preventing iteration attacks,
    while also easily identifying the "namespace" of the ID. `01975c1f-a15a-7f6c-a5ce-b75fe33de079`
    is hardly distuingishable from `01975c1f-f120-7874-8dc2-de7d728bf261` by humans
    on first glance. However, when represented as Type IDs, they could be represented
    as `user_01jxe1z8atfxpabknqbzhkvr3s` and `domain_01jxe1zw90f1t8vgpyfns8qwk1`,
    immediately making it easier to differentiate between them.


    Additionally, this gives type safety and additional validation that can be done.
    There''s [libraries available for many languages to make handling Type IDs easier](https://github.com/jetify-com/typeid?tab=readme-ov-file#official-implementations-by-jetify).
    We''re using them ourselves on the backend to quickly catch mistakes like passing
    the wrong Type ID (passing a user ID like `user_01jxe1z8atfxpabknqbzhkvr3s` where
    a domain ID `domain_01jxe1zw90f1t8vgpyfns8qwk1` was expected).



    '
  summary: OpusDNS - your gateway to a seamless domain management experience.
  title: OpusDNS API
  version: 2025-10-15-151802
  x-logo:
    altText: OpusDNS API Reference
    url: https://d24lr4zqs1tgqh.cloudfront.net/c9505a20-5ae1-406c-b060-d392569caebf.jpg
openapi: 3.1.0
paths:
  /v1/auth/token:
    post:
      operationId: issue_organization_token_v1_auth_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicAuthRequestForm'
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OrganizationTokenResponse'
                - $ref: '#/components/schemas/UserTokenResponse'
                title: Response Issue Organization Token V1 Auth Token Post
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      - OAuth2PasswordBearer: []
      summary: Issue Organization Token
      tags:
      - authentication
  /v1/availability:
    get:
      description: Check the availability of one or more domains.
      operationId: bulk_availability_v1_availability_get
      parameters:
      - description: '

          Specify one or more domains to check for availability.

          '
        examples:
          list:
            summary: A list of domains
            value:
            - example.com
            - example.org
        in: query
        name: domains
        required: true
        schema:
          description: '

            Specify one or more domains to check for availability.

            '
          items:
            type: string
          title: Domains
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common__models__availability__datasource__DomainAvailabilityResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '502':
          content:
            application/problem+json:
              example:
                code: ERROR_AVAILABILITY_PROVIDER
                detail: Additional error context.
                status: 502
                title: Availability Error
                type: availability-provider
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Gateway
      security:
      - OAuth2PasswordBearer: []
      summary: Check domain availability
      tags:
      - availability
  /v1/availability/stream:
    get:
      description: Stream domain availability results using Server-Sent Events (SSE)
        until the `done` event is received.
      operationId: stream_availability_v1_availability_stream_get
      parameters:
      - description: '

          Specify one or more domains to check for availability.

          '
        examples:
          list:
            summary: A list of domains
            value:
            - example.com
            - example.org
        in: query
        name: domains
        required: true
        schema:
          description: '

            Specify one or more domains to check for availability.

            '
          items:
            type: string
          title: Domains
          type: array
      responses:
        '200':
          content:
            text/event-stream:
              examples:
                Data:
                  description: Returns individual domains' availability
                  summary: Availability data
                  value: 'data: {"domain":"example.com","status":"unavailable"}'
                Event:
                  description: Returned when an event occurs
                  summary: Event
                  value: 'event: done'
              schema:
                type: string
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '502':
          content:
            application/problem+json:
              example:
                code: ERROR_AVAILABILITY_PROVIDER
                detail: Additional error context.
                status: 502
                title: Availability Error
                type: availability-provider
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Gateway
      security:
      - OAuth2PasswordBearer: []
      summary: Stream domain availability results
      tags:
      - availability
  /v1/contacts:
    get:
      description: Retrieves a paginated list of all contacts
      operationId: get_contacts_v1_contacts_get
      parameters:
      - in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/ContactSortField'
          default: created_on
      - in: query
        name: sort_order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
          default: desc
      - in: query
        name: first_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
      - in: query
        name: last_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
      - in: query
        name: email
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: country
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
      - in: query
        name: created_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created After
      - in: query
        name: created_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created Before
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_ContactSchema_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List all contacts
      tags:
      - contact
    post:
      description: Create a new contact object to use for domain registration
      operationId: create_contact_v1_contacts_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactSchema'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create a contact
      tags:
      - contact
  /v1/contacts/verification:
    get:
      operationId: get_verification_by_token_v1_contacts_verification_get
      parameters:
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Retrieve contact verification by token
      tags:
      - contact
    put:
      operationId: update_verification_by_token_v1_contacts_verification_put
      parameters:
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/problem+json:
              examples:
                Contact Management Error:
                  value:
                    code: ERROR_INVALID_VERIFICATION_TOKEN
                    contact_id: Additional error context.
                    detail: Invalid verification token
                    status: 400
                    title: Contact Management Error
                    type: contact-verification-token-invalid
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Complete contact verification with token
      tags:
      - contact
  /v1/contacts/verify:
    get:
      operationId: email_verify_contact_v1_contacts_verify_get
      parameters:
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Email Verify Contact
      tags:
      - contact
  /v1/contacts/{contact_id}:
    delete:
      description: Deletes a contact object; only possible if the contact is not in
        use
      operationId: delete_contact_v1_contacts__contact_id__delete
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_IN_USE
                detail: Contact is linked to one or more domains
                domain_ids:
                - A
                - d
                - d
                - i
                - t
                - i
                - o
                - n
                - a
                - l
                - ' '
                - e
                - r
                - r
                - o
                - r
                - ' '
                - c
                - o
                - n
                - t
                - e
                - x
                - t
                - .
                status: 409
                title: Contact Management Error
                type: contact-in-use
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete a contact
      tags:
      - contact
    get:
      description: Retrieves a contact object
      operationId: get_contact_v1_contacts__contact_id__get
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactSchema'
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Retrieve a contact
      tags:
      - contact
  /v1/contacts/{contact_id}/verification:
    delete:
      operationId: cancel_verification_v1_contacts__contact_id__verification_delete
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete contact verification
      tags:
      - contact
    get:
      operationId: get_verification_status_v1_contacts__contact_id__verification_get
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactVerificationResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Retrieve contact verification by contact ID
      tags:
      - contact
    post:
      operationId: start_contact_verification_v1_contacts__contact_id__verification_post
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      - in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/VerificationType'
      responses:
        '201':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContactVerificationEmailResponse'
                - $ref: '#/components/schemas/ContactVerificationApiResponse'
                title: Response Start Contact Verification V1 Contacts  Contact Id  Verification
                  Post
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '405':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_INVALID_TYPE
                detail: 'Invalid verification type: Additional error context.'
                status: 405
                title: Contact Management Error
                type: contact-verification-type-invalid
              schema:
                $ref: '#/components/schemas/Problem'
          description: Method Not Allowed
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Start contact verification
      tags:
      - contact
    put:
      operationId: update_verification_v1_contacts__contact_id__verification_put
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/problem+json:
              examples:
                Contact Management Error:
                  value:
                    code: ERROR_INVALID_VERIFICATION_TOKEN
                    contact_id: Additional error context.
                    detail: Invalid verification token
                    status: 400
                    title: Contact Management Error
                    type: contact-verification-token-invalid
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_MISSING_PERMISSIONS
                detail: Missing permissions to verify contact as type Additional error
                  context.
                status: 403
                title: Contact Management Error
                type: contact-verification-type-missing-permissions
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Complete contact verification by contact ID
      tags:
      - contact
  /v1/dns:
    get:
      operationId: list_zones_v1_dns_get
      parameters:
      - in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/ZoneSortField'
          default: created_on
      - in: query
        name: sort_order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
          default: desc
      - in: query
        name: dnssec_status
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DnssecStatus'
          - type: 'null'
          title: Dnssec Status
      - in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: suffix
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Suffix
      - in: query
        name: created_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created After
      - in: query
        name: created_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created Before
      - in: query
        name: updated_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated After
      - in: query
        name: updated_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated Before
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_DnsZoneResponse_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Zones
      tags:
      - dns
    post:
      operationId: create_zone_v1_dns_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/DnsChangesResponse'
                - type: 'null'
                title: Response Create Zone V1 Dns Post
          description: Successful Response
        '400':
          content:
            application/problem+json:
              example:
                code: ERROR_DNS
                detail: Additional error context.
                status: 400
                title: DNS Error
                type: dns
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Zone
      tags:
      - dns
  /v1/dns/summary:
    get:
      operationId: get_zones_summary_v1_dns_summary_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZoneSummary'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Get Zones Summary
      tags:
      - dns
  /v1/dns/{zone_name}:
    delete:
      operationId: delete_zone_v1_dns__zone_name__delete
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Zone
      tags:
      - dns
    get:
      operationId: get_zone_v1_dns__zone_name__get
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZoneResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Zone
      tags:
      - dns
  /v1/dns/{zone_name}/dnssec/disable:
    post:
      operationId: disable_dnssec_v1_dns__zone_name__dnssec_disable_post
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsChangesResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Disable Dnssec
      tags:
      - dns
  /v1/dns/{zone_name}/dnssec/enable:
    post:
      operationId: enable_dnssec_v1_dns__zone_name__dnssec_enable_post
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsChangesResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Enable Dnssec
      tags:
      - dns
  /v1/dns/{zone_name}/records:
    patch:
      operationId: patch_zone_records_v1_dns__zone_name__records_patch
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneRecordsPatchOps'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/problem+json:
              example:
                code: ERROR_DNS
                detail: Additional error context.
                status: 400
                title: DNS Error
                type: dns
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Patch Zone Records
      tags:
      - dns
  /v1/dns/{zone_name}/rrsets:
    patch:
      operationId: patch_zone_rrsets_v1_dns__zone_name__rrsets_patch
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneRrsetsPatchOps'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/problem+json:
              example:
                code: ERROR_DNS
                detail: Additional error context.
                status: 400
                title: DNS Error
                type: dns
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Patch Zone Rrsets
      tags:
      - dns
    put:
      operationId: update_zone_rrsets_v1_dns__zone_name__rrsets_put
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneRrsetsCreate'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/problem+json:
              example:
                code: ERROR_DNS
                detail: Additional error context.
                status: 400
                title: DNS Error
                type: dns
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Zone Rrsets
      tags:
      - dns
  /v1/domain-forwards:
    patch:
      operationId: patch_redirects_v1_domain_forwards_patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedirectPatchOps'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Patch Redirects
      tags:
      - domain_forward
  /v1/domain-forwards/{zone_name}:
    delete:
      operationId: delete_redirects_v1_domain_forwards__zone_name__delete
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Redirects
      tags:
      - domain_forward
    get:
      operationId: get_redirects_v1_domain_forwards__zone_name__get
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_Redirect_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Redirects
      tags:
      - domain_forward
    post:
      operationId: create_redirects_v1_domain_forwards__zone_name__post
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedirectSet'
        required: true
      responses:
        '201':
          description: Successful Response
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_FORWARD_REDIRECT_ALREADY_EXISTS
                detail: Redirect already exists for A, d, d, i, t, i, o, n, a, l,  ,
                  e, r, r, o, r,  , c, o, n, t, e, x, t, .
                status: 409
                title: Domain Forward Error
                type: domain-forward-redirect-already-exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Redirects
      tags:
      - domain_forward
    put:
      operationId: update_redirects_v1_domain_forwards__zone_name__put
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedirectSet'
        required: true
      responses:
        '204':
          description: Successful Response
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_FORWARD_REDIRECT_NOT_EXISTS
                detail: Redirect does not exist for A, d, d, i, t, i, o, n, a, l,  ,
                  e, r, r, o, r,  , c, o, n, t, e, x, t, .
                status: 409
                title: Domain Forward Error
                type: domain-forward-redirect-not-exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Redirects
      tags:
      - domain_forward
  /v1/domain-forwards/{zone_name}/disable:
    patch:
      operationId: disable_domain_forward_v1_domain_forwards__zone_name__disable_patch
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Disable Domain Forward
      tags:
      - domain_forward
  /v1/domain-forwards/{zone_name}/enable:
    patch:
      operationId: enable_domain_forward_v1_domain_forwards__zone_name__enable_patch
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      - in: query
        name: auto_create_zone
        required: false
        schema:
          default: false
          title: Auto Create Zone
          type: boolean
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Enable Domain Forward
      tags:
      - domain_forward
  /v1/domain-search/suggest:
    get:
      description: Get a list of domain suggestions based on a search query
      operationId: suggest_v1_domain_search_suggest_get
      parameters:
      - description: The primary keyword or phrase for the domain search
        in: query
        name: query
        required: true
        schema:
          description: The primary keyword or phrase for the domain search
          title: Query
          type: string
      - description: The TLDs to include in the search
        examples:
          list:
            summary: A list of TLDs
            value:
            - com
            - net
        in: query
        name: tlds
        required: false
        schema:
          anyOf:
          - items:
              pattern: ^[a-zA-Z]+$
              type: string
            type: array
          - type: 'null'
          description: The TLDs to include in the search
          title: Tlds
      - description: The maximum number of domain suggestions to return
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - maximum: 100
            minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of domain suggestions to return
          title: Limit
      - description: Whether to include premium domains in the suggestions
        in: query
        name: premium
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to include premium domains in the suggestions
          title: Premium
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSearchResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '502':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_SEARCH_PROVIDER
                detail: Additional error context.
                status: 502
                title: Domain Search Error
                type: domain-search-provider
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Gateway
      security:
      - OAuth2PasswordBearer: []
      summary: Suggest domains
      tags:
      - domain_search
  /v1/domains:
    get:
      description: Retrieves a paginated list of all active domains
      operationId: get_domains_v1_domains_get
      parameters:
      - in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/DomainSortField'
          default: created_on
      - in: query
        name: sort_order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
          default: desc
      - in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: tld
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Tld
      - in: query
        name: sld
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Sld
      - in: query
        name: transfer_lock
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Transfer Lock
      - in: query
        name: created_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created After
      - in: query
        name: created_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created Before
      - in: query
        name: updated_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated After
      - in: query
        name: updated_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated Before
      - in: query
        name: expires_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Expires After
      - in: query
        name: expires_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Expires Before
      - in: query
        name: expires_in_30_days
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Expires In 30 Days
      - in: query
        name: expires_in_60_days
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Expires In 60 Days
      - in: query
        name: expires_in_90_days
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Expires In 90 Days
      - in: query
        name: registered_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Registered After
      - in: query
        name: registered_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Registered Before
      - description: Filter domains by registry status. Can be specified multiple
          times (union of all provided values).
        in: query
        name: registry_statuses
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Filter domains by registry status. Can be specified multiple
            times (union of all provided values).
          title: Registry Statuses
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_DomainResponse_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List all domains
      tags:
      - domain
    post:
      description: Registers a new domain
      operationId: create_domain_v1_domains_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Successful Response
        '400':
          content:
            application/problem+json:
              example:
                code: ERROR_TLD_NOT_AVAILABLE
                detail: This TLD is not available
                status: 400
                title: Domain Management Error
                tld: Additional error context.
                type: domain-tld-not-available
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_EXISTS
                detail: Domain already exists
                domain_name: Additional error context.
                status: 409
                title: Domain Management Error
                type: domain-exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create a domain
      tags:
      - domain
  /v1/domains/check:
    get:
      operationId: epp_check_domain_v1_domains_check_get
      parameters:
      - description: '

          Specify one or more domains to check for availability.

          '
        examples:
          list:
            summary: A list of domains
            value:
            - example.com
            - example.org
        in: query
        name: domains
        required: true
        schema:
          description: '

            Specify one or more domains to check for availability.

            '
          items:
            type: string
          title: Domains
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCheckResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Check domain availability
      tags:
      - domain
  /v1/domains/summary:
    get:
      description: Retrieves a summary of domains including counts by status, TLD,
        and expiration timeframes
      operationId: get_domain_summary_v1_domains_summary_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSummaryResponse'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Get domain summary
      tags:
      - domain
  /v1/domains/transfer:
    post:
      description: 'Start the transfer process for a domain <br>

        The domain will be in state `pending_transfer` until the transfer is completed.

        This process can take up to 5 days, until the transfer is approved'
      operationId: transfer_domain_v1_domains_transfer_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainTransferIn'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Successful Response
        '400':
          content:
            application/problem+json:
              examples:
                Domain Management Error:
                  value:
                    code: ERROR_TLD_NOT_AVAILABLE
                    detail: This TLD is not available
                    status: 400
                    title: Domain Management Error
                    tld: Additional error context.
                    type: domain-tld-not-available
                Domain Transfer Error:
                  value:
                    code: ERROR_DOMAIN_TRANSFER
                    detail: There was an error transferring the domain
                    domain_name: Additional error context.
                    reason: An unspecified error occurred
                    status: 400
                    title: Domain Transfer Error
                    type: domain-transfer
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_EXISTS
                detail: Domain already exists
                domain_name: Additional error context.
                status: 409
                title: Domain Management Error
                type: domain-exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              example:
                detail: Additional error context.
                status: 422
                title: Policy Validation Error
                type: policy-validation-error
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unprocessable Content
      security:
      - OAuth2PasswordBearer: []
      summary: Transfer a domain
      tags:
      - domain
  /v1/domains/{domain_reference}:
    delete:
      description: 'Initiates the deletion process for a domain. The domain will be
        marked for deletion

        and will enter a redemption period during which it may be restored.'
      operationId: delete_domain_v1_domains__domain_reference__delete
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_DELETE_PROHIBITED
                detail: 'Domain deletion is prohibited due to current status: '
                domain_name: Additional error context.
                prohibiting_statuses: []
                status: 409
                title: Domain Management Error
                type: domain-delete-prohibited
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete a domain
      tags:
      - domain
    get:
      description: Retrieves a single active domain by either its name or id
      operationId: get_domain_v1_domains__domain_reference__get
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Retrieve a domain
      tags:
      - domain
    patch:
      description: 'Updates various attributes of an existing domain. Only the fields
        provided in the request

        will be updated; all other fields will remain unchanged. <br>

        Providing `clientTransferProhibited` as a status will set the `transfer_lock`
        property'
      operationId: update_domain_v1_domains__domain_reference__patch
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Successful Response
        '404':
          content:
            application/problem+json:
              examples:
                Contact Management Error:
                  value:
                    code: ERROR_CONTACT_NOT_FOUND
                    contact_id: Additional error context.
                    detail: Contact not found
                    status: 404
                    title: Contact Management Error
                    type: contact-not-found
                Domain Management Error:
                  value:
                    code: ERROR_DOMAIN_NOT_FOUND
                    detail: Domain not found
                    domain_name: Additional error context.
                    status: 404
                    title: Domain Management Error
                    type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update a domain
      tags:
      - domain
  /v1/domains/{domain_reference}/dnssec:
    delete:
      description: Removes all DNSSEC data for a domain
      operationId: delete_dnssec_v1_domains__domain_reference__dnssec_delete
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete DNSSEC data
      tags:
      - domain
    get:
      description: Fetches all DNSSEC records associated with the specified domain.
      operationId: get_dnssec_v1_domains__domain_reference__dnssec_get
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DomainDnssecDataResponse'
                title: Response Get Dnssec V1 Domains  Domain Reference  Dnssec Get
                type: array
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Retrieve DNSSEC data
      tags:
      - domain
    put:
      description: Replaces all existing DNSSEC records for the domain with the provided
        records.
      operationId: create_or_update_dnssec_v1_domains__domain_reference__dnssec_put
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DomainDnssecDataCreate'
              title: Dnssec Data
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DomainDnssecDataResponse'
                title: Response Create Or Update Dnssec V1 Domains  Domain Reference  Dnssec
                  Put
                type: array
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              example:
                detail: Additional error context.
                status: 422
                title: Policy Validation Error
                type: policy-validation-error
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unprocessable Content
      security:
      - OAuth2PasswordBearer: []
      summary: Update DNSSEC data
      tags:
      - domain
  /v1/domains/{domain_reference}/dnssec/disable:
    post:
      operationId: disable_and_unpublish_dnssec_records_v1_domains__domain_reference__dnssec_disable_post
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Disable DNSSEC for domains using our nameservers
      tags:
      - domain
  /v1/domains/{domain_reference}/dnssec/enable:
    post:
      operationId: enable_and_publish_dnssec_records_v1_domains__domain_reference__dnssec_enable_post
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DomainDnssecDataResponse'
                title: Response Enable And Publish Dnssec Records V1 Domains  Domain
                  Reference  Dnssec Enable Post
                type: array
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Enable DNSSEC for domains using our nameservers
      tags:
      - domain
  /v1/domains/{domain_reference}/renew:
    post:
      description: 'Extends the registration period of an existing domain. The renewal
        period is added

        to the current expiration date of the domain.'
      operationId: renew_domain_v1_domains__domain_reference__renew_post
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRenewRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainRenewResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Renew a domain
      tags:
      - domain
  /v1/domains/{domain_reference}/restore:
    post:
      operationId: restore_domain_v1_domains__domain_reference__restore_post
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRestoreRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainRestoreResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Restore an eligible domain (during redemption period)
      tags:
      - domain
  /v1/domains/{domain_reference}/transfer:
    delete:
      description: This will cancel the in-progress domain transfer and delete the
        domain object
      operationId: cancel_domain_transfer_v1_domains__domain_reference__transfer_delete
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_TRANSFER
                detail: There was an error transferring the domain
                domain_name: Additional error context.
                reason: An unspecified error occurred
                status: 400
                title: Domain Transfer Error
                type: domain-transfer
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Cancel a domain transfer
      tags:
      - domain
  /v1/email-forwards/{zone_name}/aliases:
    delete:
      operationId: delete_email_forward_aliases_v1_email_forwards__zone_name__aliases_delete
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Email Forward Aliases
      tags:
      - email_forward
    get:
      operationId: get_email_forward_aliases_v1_email_forwards__zone_name__aliases_get
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_EmailForwardAlias_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Email Forward Aliases
      tags:
      - email_forward
    post:
      operationId: create_email_forward_alias_v1_email_forwards__zone_name__aliases_post
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailForwardAlias'
        required: true
      responses:
        '201':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Email Forward Alias
      tags:
      - email_forward
  /v1/email-forwards/{zone_name}/aliases/{alias}:
    delete:
      operationId: delete_email_forward_alias_v1_email_forwards__zone_name__aliases__alias__delete
      parameters:
      - in: path
        name: alias
        required: true
        schema:
          title: Alias
          type: string
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Email Forward Alias
      tags:
      - email_forward
    get:
      operationId: get_email_forward_alias_v1_email_forwards__zone_name__aliases__alias__get
      parameters:
      - in: path
        name: alias
        required: true
        schema:
          title: Alias
          type: string
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailForwardAlias'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Email Forward Alias
      tags:
      - email_forward
    put:
      operationId: update_email_forward_alias_v1_email_forwards__zone_name__aliases__alias__put
      parameters:
      - in: path
        name: alias
        required: true
        schema:
          title: Alias
          type: string
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailForwardAliasUpdate'
        required: true
      responses:
        '201':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Email Forward Alias
      tags:
      - email_forward
  /v1/email-forwards/{zone_name}/disable:
    patch:
      operationId: disable_email_forward_v1_email_forwards__zone_name__disable_patch
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Disable Email Forward
      tags:
      - email_forward
  /v1/email-forwards/{zone_name}/enable:
    patch:
      operationId: enable_email_forward_v1_email_forwards__zone_name__enable_patch
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      - in: query
        name: auto_create_zone
        required: false
        schema:
          default: false
          title: Auto Create Zone
          type: boolean
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Enable Email Forward
      tags:
      - email_forward
  /v1/events:
    get:
      description: Retrieves a paginated list of pending events for the organization
      operationId: get_events_v1_events_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_EventResponse_'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get pending events
      tags:
      - event
  /v1/events/{event_id}:
    get:
      description: Get an event by its ID
      operationId: get_event_v1_events__event_id__get
      parameters:
      - in: path
        name: event_id
        required: true
        schema:
          examples:
          - epp_event_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Event Id
          type: string
          x-typeid-prefix: epp_event
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_EVENT_NOT_FOUND
                detail: Event not found
                event_id: Additional error context.
                status: 404
                title: Event Error
                type: event-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get event
      tags:
      - event
    patch:
      description: Acknowledge an event
      operationId: acknowledge_event_v1_events__event_id__patch
      parameters:
      - in: path
        name: event_id
        required: true
        schema:
          examples:
          - epp_event_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Event Id
          type: string
          x-typeid-prefix: epp_event
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_EVENT_NOT_FOUND
                detail: Event not found
                event_id: Additional error context.
                status: 404
                title: Event Error
                type: event-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Acknowledge event
      tags:
      - event
  /v1/organizations:
    get:
      description: Retrieves a paginated list of organizations under the current organization
      operationId: list_organizations_v1_organizations_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_Organization_'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List all organizations
      tags:
      - organization
    post:
      description: Create a new organization under the current organization
      operationId: create_organization_v1_organizations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create an organization
      tags:
      - organization
  /v1/organizations/attributes:
    get:
      description: Retrieves a list of organization attributes for the current organization
      operationId: get_attributes_v1_organizations_attributes_get
      parameters:
      - in: query
        name: organization_id
        required: false
        schema:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          title: Organization Id
      - description: Optional list of attribute keys to filter
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Optional list of attribute keys to filter
          title: Keys
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAttributeResponse'
                title: Response Get Attributes V1 Organizations Attributes Get
                type: array
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List organization attributes
      tags:
      - organization
    patch:
      description: Updates one or more organization attributes for the current organization
      operationId: update_attributes_v1_organizations_attributes_patch
      parameters:
      - in: query
        name: organization_id
        required: false
        schema:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          title: Organization Id
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/OrganizationAttributeUpdate'
              title: Attributes
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAttributeResponse'
                title: Response Update Attributes V1 Organizations Attributes Patch
                type: array
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update organization attributes
      tags:
      - organization
  /v1/organizations/attributes/{organization_id}:
    get:
      description: Retrieves a list of organization attributes for the specified organization
      operationId: get_attributes_v1_organizations_attributes__organization_id__get
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          title: Organization Id
      - description: Optional list of attribute keys to filter
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Optional list of attribute keys to filter
          title: Keys
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAttributeResponse'
                title: Response Get Attributes V1 Organizations Attributes  Organization
                  Id  Get
                type: array
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List organization attributes
      tags:
      - organization
    patch:
      description: Updates one or more organization attributes for the specified organization
      operationId: update_attributes_v1_organizations_attributes__organization_id__patch
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          title: Organization Id
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/OrganizationAttributeUpdate'
              title: Attributes
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAttributeResponse'
                title: Response Update Attributes V1 Organizations Attributes  Organization
                  Id  Patch
                type: array
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update organization attributes
      tags:
      - organization
  /v1/organizations/ip-restrictions:
    get:
      description: 'List all IP restrictions for the organization.


        Returns a list of all IP restrictions configured for your organization.

        Single IP addresses are returned with CIDR notation (/32 for IPv4, /128 for
        IPv6).'
      operationId: list_ip_restrictions_v1_organizations_ip_restrictions_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IpRestrictionResponse'
                title: Response List Ip Restrictions V1 Organizations Ip Restrictions
                  Get
                type: array
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
      security:
      - OAuth2PasswordBearer: []
      summary: List IP restrictions
      tags:
      - organization
    post:
      description: 'Create a new IP restriction for the organization.


        Accepts either a single IP address or a CIDR network range.

        Individual IP addresses are stored and returned with CIDR notation (/32 for
        IPv4, /128 for IPv6).'
      operationId: create_ip_restriction_v1_organizations_ip_restrictions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpRestrictionCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create an IP restriction
      tags:
      - organization
  /v1/organizations/ip-restrictions/{ip_restriction_id}:
    delete:
      description: 'Delete an IP restriction.


        Permanently removes the specified IP restriction from your organization.'
      operationId: delete_ip_restriction_v1_organizations_ip_restrictions__ip_restriction_id__delete
      parameters:
      - in: path
        name: ip_restriction_id
        required: true
        schema:
          title: Ip Restriction Id
          type: integer
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete an IP restriction
      tags:
      - organization
    get:
      description: 'Get a specific IP restriction by ID.


        Returns the details of a specific IP restriction if it exists and belongs
        to your organization.

        Single IP addresses are returned with CIDR notation (/32 for IPv4, /128 for
        IPv6).'
      operationId: get_ip_restriction_v1_organizations_ip_restrictions__ip_restriction_id__get
      parameters:
      - in: path
        name: ip_restriction_id
        required: true
        schema:
          title: Ip Restriction Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get an IP restriction
      tags:
      - organization
    patch:
      description: 'Update an existing IP restriction.


        You can update the IP network range or the last usage timestamp.

        Individual IP addresses are stored and returned with CIDR notation (/32 for
        IPv4, /128 for IPv6).'
      operationId: update_ip_restriction_v1_organizations_ip_restrictions__ip_restriction_id__patch
      parameters:
      - in: path
        name: ip_restriction_id
        required: true
        schema:
          title: Ip Restriction Id
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpRestrictionUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update an IP restriction
      tags:
      - organization
  /v1/organizations/roles:
    get:
      description: Retrieves a list of roles for the current organization
      operationId: list_roles_v1_organizations_roles_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
      security:
      - OAuth2PasswordBearer: []
      summary: List all roles
      tags:
      - organization
  /v1/organizations/users:
    get:
      description: Retrieves a paginated list of users under the current organization
      operationId: list_users_v1_organizations_users_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_User_'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List all users
      tags:
      - organization
  /v1/organizations/{organization_id}:
    delete:
      description: Permanently deletes an organization
      operationId: delete_organization_v1_organizations__organization_id__delete
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete an organization
      tags:
      - organization
    get:
      description: Retrieves details for a specific organization
      operationId: get_organization_v1_organizations__organization_id__get
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWithBillingData'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get organization details
      tags:
      - organization
    patch:
      description: Updates details for a specific organization
      operationId: update_organization_v1_organizations__organization_id__patch
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update an organization
      tags:
      - organization
  /v1/organizations/{organization_id}/pricing/product-type/{product_type}:
    get:
      description: Retrieves pricing data for a specific product type. If a product
        action/class are specified, only prices for those are returned, if any.
      operationId: get_pricing_plans_v1_organizations__organization_id__pricing_product_type__product_type__get
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      - in: path
        name: product_type
        required: true
        schema:
          $ref: '#/components/schemas/BillingTransactionProductType'
      - in: query
        name: product_action
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/BillingTransactionAction'
          - type: 'null'
          title: Product Action
      - in: query
        name: product_class
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Product Class
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricesResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List product prices
      tags:
      - organization
  /v1/organizations/{organization_id}/transactions:
    get:
      description: Retrieves a paginated list of transactions for an organization
      operationId: get_transactions_v1_organizations__organization_id__transactions_get
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      - in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/BillingTransactionSortField'
          default: created_on
      - in: query
        name: sort_order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
          default: desc
      - in: query
        name: product_reference
        required: false
        schema:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          title: Product Reference
      - in: query
        name: product_type
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/BillingTransactionProductType'
          - type: 'null'
          title: Product Type
      - in: query
        name: action
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/BillingTransactionAction'
          - type: 'null'
          title: Action
      - in: query
        name: status
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/BillingTransactionStatus'
          - type: 'null'
          title: Status
      - in: query
        name: created_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created After
      - in: query
        name: created_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created Before
      - in: query
        name: completed_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Completed After
      - in: query
        name: completed_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Completed Before
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_BillingTransactionResponse_'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List all transactions
      tags:
      - organization
  /v1/organizations/{organization_id}/transactions/{transaction_id}:
    get:
      description: Retrieves details for a specific transaction for an organization
      operationId: get_transaction_v1_organizations__organization_id__transactions__transaction_id__get
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      - in: path
        name: transaction_id
        required: true
        schema:
          examples:
          - billing_transaction_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^billing_transaction_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Transaction Id
          type: string
          x-typeid-prefix: billing_transaction
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingTransactionResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_PERMISSION_DENIED
                detail: Insufficient permissions to perform this action
                status: 403
                title: Permission Denied
                type: permission-denied
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get a specific transaction
      tags:
      - organization
  /v1/tlds/portfolio:
    get:
      description: Retrieves a list of TLDs we have support for
      operationId: get_tld_portfolio_v1_tlds_portfolio_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TldResponseShort'
                title: Response Get Tld Portfolio V1 Tlds Portfolio Get
                type: array
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Get the list of TLDs we support
      tags:
      - tld
  /v1/tlds/{tld}:
    get:
      description: Retrieves the TLD specification for a given TLD
      operationId: get_tld_spec_v1_tlds__tld__get
      parameters:
      - in: path
        name: tld
        required: true
        schema:
          title: Tld
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TldSpecificationResponse'
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_TLD_NOT_FOUND
                detail: Unknown TLD
                status: 404
                title: TLD ERROR
                type: tld-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get the TLD specification
      tags:
      - tld
  /v1/users:
    post:
      description: Create a new user
      operationId: create_user_v1_users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create a user
      tags:
      - user
  /v1/users/me:
    get:
      description: Get the current user
      operationId: get_current_user_v1_users_me_get
      parameters:
      - in: query
        name: attributes
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Attributes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithRelationPermissions'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get current user
      tags:
      - user
  /v1/users/me/password-reset:
    patch:
      operationId: change_password_v1_users_me_password_reset_patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Change Password
      tags:
      - user
  /v1/users/{user_id}:
    delete:
      description: Delete a user by ID
      operationId: delete_user_v1_users__user_id__delete
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      responses:
        '204':
          description: Successful Response
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_USER_IS_LAST_ADMIN
                detail: User is the last admin for the organization
                status: 409
                title: User Management Error
                type: user-is-last-admin
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete a user
      tags:
      - user
    get:
      description: Get a user by ID
      operationId: get_user_v1_users__user_id__get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      - in: query
        name: attributes
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Attributes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAttributes'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get a user
      tags:
      - user
    patch:
      description: Update a user by ID
      operationId: update_user_v1_users__user_id__patch
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAttributes'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update a user
      tags:
      - user
  /v1/users/{user_id}/permissions:
    get:
      description: Get the permissions for a user
      operationId: get_user_permissions_v1_users__user_id__permissions_get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionSet'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get user permissions
      tags:
      - user
  /v1/users/{user_id}/roles:
    get:
      description: Get the roles for a user
      operationId: list_roles_v1_users__user_id__roles_get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationSet'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get user roles
      tags:
      - user
    patch:
      description: Update the roles for a user
      operationId: update_user_relations_v1_users__user_id__roles_patch
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpiceDbRelationshipUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationSet'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update user roles
      tags:
      - user
servers:
- description: Production environment
  url: https://api.opusdns.com
- description: Sandbox environment
  url: https://sandbox.opusdns.com
tags:
- description: 'Endpoints for authentication.

    '
  name: authentication
  x-displayName: Authentication
- description: 'Endpoints for checking domain availability.

    '
  name: availability
  x-displayName: Availability
- description: 'Endpoints for creating and managing contacts.

    '
  name: contact
  x-displayName: Contacts
- description: 'Endpoints for managing DNS records.

    '
  name: dns
  x-displayName: DNS Management
- description: 'Endpoints for creating and managing domains.

    '
  name: domain
  x-displayName: Domain management
- description: 'Endpoints for searching domains.

    '
  name: domain_search
  x-displayName: Domain search
- description: 'Endpoints for creating and managing email forwards.

    '
  name: email_forward
  x-displayName: Email forwards
- description: 'Endpoints for creating and managing domain forwards.

    '
  name: domain_forward
  x-displayName: Domain forwards
- description: 'Endpoints for interacting with events.

    '
  name: event
  x-displayName: Event handling
- description: 'Endpoints for managing nameservers.

    '
  name: nameserver
  x-displayName: Nameservers
- description: 'Endpoints for creating and managing organizations.

    '
  name: organization
  x-displayName: Organizations
- description: 'Endpoints for RDAP.

    '
  name: rdap
  x-displayName: RDAP
- description: 'Endpoints for retrieving TLD specifications.

    '
  name: tld
  x-displayName: TLD specification
- description: "Some requirements for users:\n - A user must belong to one and only\
    \ one organization.\n - Both their email address and username must be unique within\
    \ the whole system.\n"
  name: user
  x-displayName: Users
x-tagGroups:
- name: Account management
  tags:
  - authentication
  - user
  - organization
- name: Domains
  tags:
  - domain
  - contact
  - event
  - availability
- name: Services
  tags:
  - dns
  - email_forward
  - domain_forward
  - rdap
  - domain_search
