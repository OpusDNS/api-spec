components:
  schemas:
    Body_issue_organization_token_v1_auth_token_post:
      properties:
        client_id:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: The organization ID associated with the credentials.
          title: Client Id
        client_secret:
          anyOf:
          - type: string
          - type: 'null'
          description: Client secret for authentication.
          title: Client Secret
        grant_type:
          $ref: '#/components/schemas/GrantType'
          description: The grant type for the authentication request.
        password:
          anyOf:
          - type: string
          - type: 'null'
          description: Password for the user.
          title: Password
        username:
          anyOf:
          - type: string
          - type: 'null'
          description: Username for authentication.
          title: Username
      title: Body_issue_organization_token_v1_auth_token_post
      type: object
    BulkOperationResponse_EmailForwardBulkDeleteResult_:
      properties:
        results:
          items:
            $ref: '#/components/schemas/BulkOperationResult'
          title: Results
          type: array
      required:
      - results
      title: BulkOperationResponse[EmailForwardBulkDeleteResult]
      type: object
    BulkOperationResponse_EmailForwardBulkUpdateResult_:
      properties:
        results:
          items:
            $ref: '#/components/schemas/BulkOperationResult'
          title: Results
          type: array
      required:
      - results
      title: BulkOperationResponse[EmailForwardBulkUpdateResult]
      type: object
    BulkOperationResult:
      properties:
        error_message:
          anyOf:
          - type: string
          - type: 'null'
          description: Error message if operation failed
          title: Error Message
        status:
          $ref: '#/components/schemas/BulkOperationStatus'
          description: Status of performed operation
      required:
      - status
      title: BulkOperationResult
      type: object
    BulkOperationStatus:
      enum:
      - success
      - failed
      title: BulkOperationStatus
      type: string
    ContactCreate:
      properties:
        city:
          description: The city of the contact
          minLength: 1
          title: City
          type: string
        country:
          description: The country of the contact
          minLength: 1
          title: Country
          type: string
        disclose:
          description: Whether the contact should be disclosed
          title: Disclose
          type: boolean
        email:
          description: The email of the contact
          format: email
          title: Email
          type: string
        fax:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The contacts's fax number
          title: Fax
        first_name:
          description: The first name of the contact
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The last name of the contact
          minLength: 1
          title: Last Name
          type: string
        org:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The organization of the contact
          title: Org
        phone:
          description: The contact's phone number
          examples:
          - '+1.2125552368'
          format: phone
          title: Phone
          type: string
        postal_code:
          description: The postal code of the contact
          minLength: 1
          title: Postal Code
          type: string
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The state of the contact
          title: State
        street:
          description: The address of the contact
          minLength: 1
          title: Street
          type: string
        title:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The title of the contact
          title: Title
      required:
      - first_name
      - last_name
      - email
      - phone
      - street
      - city
      - postal_code
      - country
      - disclose
      title: ContactCreate
      type: object
    ContactIdList:
      additionalProperties:
        examples:
        - contact_01h45ytscbebyvny4gc8cr8ma2
        format: typeid
        pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
        type: string
        x-typeid-prefix: contact
      propertyNames:
        $ref: '#/components/schemas/DomainContactType'
      type: object
    ContactResponse:
      properties:
        city:
          description: The city of the contact
          minLength: 1
          title: City
          type: string
        country:
          description: The country of the contact
          minLength: 1
          title: Country
          type: string
        disclose:
          description: Whether the contact should be disclosed
          title: Disclose
          type: boolean
        email:
          description: The email of the contact
          format: email
          title: Email
          type: string
        fax:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The contacts's fax number
          title: Fax
        first_name:
          description: The first name of the contact
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The last name of the contact
          minLength: 1
          title: Last Name
          type: string
        org:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The organization of the contact
          title: Org
        phone:
          description: The contact's phone number
          examples:
          - '+1.2125552368'
          format: phone
          title: Phone
          type: string
        postal_code:
          description: The postal code of the contact
          minLength: 1
          title: Postal Code
          type: string
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The state of the contact
          title: State
        street:
          description: The address of the contact
          minLength: 1
          title: Street
          type: string
        title:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The title of the contact
          title: Title
      required:
      - first_name
      - last_name
      - email
      - phone
      - street
      - city
      - postal_code
      - country
      - disclose
      title: ContactResponse
      type: object
    ContactSchema:
      properties:
        city:
          description: The city of the contact
          minLength: 1
          title: City
          type: string
        contact_id:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        country:
          description: The country of the contact
          minLength: 1
          title: Country
          type: string
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        disclose:
          description: Whether the contact should be disclosed
          title: Disclose
          type: boolean
        email:
          description: The email of the contact
          format: email
          title: Email
          type: string
        fax:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The contacts's fax number
          title: Fax
        first_name:
          description: The first name of the contact
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The last name of the contact
          minLength: 1
          title: Last Name
          type: string
        org:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The organization of the contact
          title: Org
        organization_id:
          default: None
          description: The organization that owns the domain
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        phone:
          description: The contact's phone number
          examples:
          - '+1.2125552368'
          format: phone
          title: Phone
          type: string
        postal_code:
          description: The postal code of the contact
          minLength: 1
          title: Postal Code
          type: string
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The state of the contact
          title: State
        street:
          description: The address of the contact
          minLength: 1
          title: Street
          type: string
        title:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The title of the contact
          title: Title
      required:
      - first_name
      - last_name
      - email
      - phone
      - street
      - city
      - postal_code
      - country
      - disclose
      title: ContactSchema
      type: object
    ContactSortField:
      enum:
      - first_name
      - last_name
      - email
      - created_on
      title: ContactSortField
      type: string
    ContactVerificationApiResponse:
      properties:
        canceled_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was cancelled
          title: Canceled On
        contact_id:
          default: None
          description: The contact that is being verified
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        contact_verification_id:
          examples:
          - contact_verification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Verification Id
          type: string
          x-typeid-prefix: contact_verification
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        status:
          $ref: '#/components/schemas/EmailVerificationStatus'
          default: pending
          description: Current status of the email verification
        token:
          description: The token to verify the email address
          maxLength: 256
          minLength: 35
          title: Token
          type: string
        type:
          $ref: '#/components/schemas/VerificationType'
          description: 'The type of verification: ''api'' for retrieving token via
            API, ''email'' for retrieving via email'
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        verified_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was verified
          title: Verified On
      required:
      - token
      - type
      title: ContactVerificationApiResponse
      type: object
    ContactVerificationEmailResponse:
      properties:
        canceled_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was cancelled
          title: Canceled On
        contact_id:
          default: None
          description: The contact that is being verified
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        contact_verification_id:
          examples:
          - contact_verification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Verification Id
          type: string
          x-typeid-prefix: contact_verification
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        status:
          $ref: '#/components/schemas/EmailVerificationStatus'
          default: pending
          description: Current status of the email verification
        type:
          $ref: '#/components/schemas/VerificationType'
          description: 'The type of verification: ''api'' for retrieving token via
            API, ''email'' for retrieving via email'
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        verified_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was verified
          title: Verified On
      required:
      - type
      title: ContactVerificationEmailResponse
      type: object
    ContactVerificationResponse:
      properties:
        canceled_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was cancelled
          title: Canceled On
        contact_id:
          default: None
          description: The contact that is being verified
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        contact_verification_id:
          examples:
          - contact_verification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_verification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Verification Id
          type: string
          x-typeid-prefix: contact_verification
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        status:
          $ref: '#/components/schemas/EmailVerificationStatus'
          default: pending
          description: Current status of the email verification
        type:
          $ref: '#/components/schemas/VerificationType'
          description: 'The type of verification: ''api'' for retrieving token via
            API, ''email'' for retrieving via email'
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        verified_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date the verification was verified
          title: Verified On
      required:
      - type
      title: ContactVerificationResponse
      type: object
    Currency:
      enum:
      - USD
      - EUR
      title: Currency
      type: string
    DeletedEvent:
      properties:
        date:
          $ref: '#/components/schemas/EppDateTime'
      required:
      - date
      title: DeletedEvent
      type: object
    DnsChangeAction:
      enum:
      - create_zone
      - delete_zone
      - create_record
      - delete_record
      - enable_dnssec
      - disable_dnssec
      title: DnsChangeAction
      type: string
    DnsChangeResponse:
      properties:
        action:
          $ref: '#/components/schemas/DnsChangeAction'
        record_data:
          anyOf:
          - type: string
          - type: 'null'
          title: Record Data
        rrset_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Rrset Name
        rrset_type:
          anyOf:
          - $ref: '#/components/schemas/DnsRrsetType'
          - type: 'null'
        ttl:
          anyOf:
          - type: integer
          - type: 'null'
          title: Ttl
      required:
      - action
      - rrset_name
      - rrset_type
      - record_data
      - ttl
      title: DnsChangeResponse
      type: object
    DnsChangesResponse:
      properties:
        changes:
          items:
            $ref: '#/components/schemas/DnsChangeResponse'
          title: Changes
          type: array
        changeset_id:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: Changeset Id
        num_changes:
          title: Num Changes
          type: integer
        zone_name:
          title: Zone Name
          type: string
      required:
      - zone_name
      - changeset_id
      - num_changes
      - changes
      title: DnsChangesResponse
      type: object
    DnsRecordCreate:
      properties:
        rdata:
          title: Rdata
          type: string
      required:
      - rdata
      title: DnsRecordCreate
      type: object
    DnsRecordPatchOp:
      properties:
        op:
          $ref: '#/components/schemas/PatchOp'
        record:
          $ref: '#/components/schemas/DnsRrsetWithOneRecordPatch'
      required:
      - op
      - record
      title: DnsRecordPatchOp
      type: object
    DnsRecordResponse:
      properties:
        rdata:
          title: Rdata
          type: string
      required:
      - rdata
      title: DnsRecordResponse
      type: object
    DnsRrsetCreate:
      properties:
        name:
          title: Name
          type: string
        records:
          items:
            $ref: '#/components/schemas/DnsRecordCreate'
          title: Records
          type: array
        ttl:
          title: Ttl
          type: integer
        type:
          $ref: '#/components/schemas/DnsRrsetType'
      required:
      - name
      - type
      - ttl
      - records
      title: DnsRrsetCreate
      type: object
    DnsRrsetPatch:
      properties:
        name:
          title: Name
          type: string
        records:
          items:
            $ref: '#/components/schemas/DnsRecordCreate'
          title: Records
          type: array
        ttl:
          title: Ttl
          type: integer
        type:
          $ref: '#/components/schemas/DnsRrsetType'
      required:
      - name
      - type
      - ttl
      - records
      title: DnsRrsetPatch
      type: object
    DnsRrsetPatchOp:
      properties:
        op:
          $ref: '#/components/schemas/PatchOp'
        rrset:
          $ref: '#/components/schemas/DnsRrsetPatch'
      required:
      - op
      - rrset
      title: DnsRrsetPatchOp
      type: object
    DnsRrsetResponse:
      properties:
        name:
          title: Name
          type: string
        records:
          items:
            $ref: '#/components/schemas/DnsRecordResponse'
          title: Records
          type: array
        ttl:
          title: Ttl
          type: integer
        type:
          $ref: '#/components/schemas/DnsRrsetType'
      required:
      - name
      - type
      - ttl
      title: DnsRrsetResponse
      type: object
    DnsRrsetType:
      enum:
      - A
      - AAAA
      - ALIAS
      - CAA
      - CNAME
      - DNSKEY
      - DS
      - MX
      - NS
      - PTR
      - TXT
      - SOA
      - SRV
      title: DnsRrsetType
      type: string
    DnsRrsetWithOneRecordPatch:
      properties:
        name:
          title: Name
          type: string
        rdata:
          title: Rdata
          type: string
        ttl:
          title: Ttl
          type: integer
        type:
          $ref: '#/components/schemas/DnsRrsetType'
      required:
      - rdata
      - name
      - type
      - ttl
      title: DnsRrsetWithOneRecordPatch
      type: object
    DnsZoneCreate:
      properties:
        dnssec_status:
          $ref: '#/components/schemas/DnssecStatus'
          default: disabled
        name:
          title: Name
          type: string
        rrsets:
          items:
            $ref: '#/components/schemas/DnsRrsetCreate'
          title: Rrsets
          type: array
      required:
      - name
      title: DnsZoneCreate
      type: object
    DnsZoneRecordsPatchOps:
      properties:
        ops:
          items:
            $ref: '#/components/schemas/DnsRecordPatchOp'
          title: Ops
          type: array
      required:
      - ops
      title: DnsZoneRecordsPatchOps
      type: object
    DnsZoneResponse:
      properties:
        dnssec_status:
          $ref: '#/components/schemas/DnssecStatus'
          default: disabled
        domain_parts:
          $ref: '#/components/schemas/DomainNameParts'
        name:
          title: Name
          type: string
        rrsets:
          items:
            $ref: '#/components/schemas/DnsRrsetResponse'
          title: Rrsets
          type: array
      required:
      - name
      title: DnsZoneResponse
      type: object
    DnsZoneRrsetsCreate:
      properties:
        rrsets:
          items:
            $ref: '#/components/schemas/DnsRrsetCreate'
          title: Rrsets
          type: array
      title: DnsZoneRrsetsCreate
      type: object
    DnsZoneRrsetsPatchOps:
      properties:
        ops:
          items:
            $ref: '#/components/schemas/DnsRrsetPatchOp'
          title: Ops
          type: array
      required:
      - ops
      title: DnsZoneRrsetsPatchOps
      type: object
    DnssecAlgorithm:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 10
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 23
      title: DnssecAlgorithm
      type: integer
    DnssecDigestType:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      title: DnssecDigestType
      type: integer
    DnssecRecordType:
      enum:
      - ds_data
      - key_data
      title: DnssecRecordType
      type: string
    DnssecStatus:
      enum:
      - enabled
      - disabled
      title: DnssecStatus
      type: string
    DomainAvailability:
      properties:
        domain:
          title: Domain
          type: string
        status:
          $ref: '#/components/schemas/DomainAvailabilityStatus'
      required:
      - domain
      - status
      title: DomainAvailability
      type: object
    DomainAvailabilityMeta:
      properties:
        processing_time_ms:
          title: Processing Time Ms
          type: integer
        total:
          title: Total
          type: integer
      required:
      - total
      - processing_time_ms
      title: DomainAvailabilityMeta
      type: object
    DomainAvailabilityStatus:
      enum:
      - available
      - unavailable
      - market_available
      - tmch_claim
      - error
      title: DomainAvailabilityStatus
      type: string
    DomainCheckResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/common__models__domain__domain__DomainAvailabilityResponse'
          title: Results
          type: array
      required:
      - results
      title: DomainCheckResponse
      type: object
    DomainClientStatus:
      enum:
      - clientTransferProhibited
      - clientUpdateProhibited
      - clientDeleteProhibited
      - clientRenewProhibited
      - clientHold
      title: DomainClientStatus
      type: string
    DomainContactResponse:
      properties:
        contact_id:
          description: The contact id of the contact
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
        contact_type:
          $ref: '#/components/schemas/DomainContactType'
          description: The type of contact
      required:
      - contact_id
      - contact_type
      title: DomainContactResponse
      type: object
    DomainContactType:
      enum:
      - registrant
      - admin
      - tech
      - billing
      title: DomainContactType
      type: string
    DomainCreate:
      properties:
        auth_code:
          anyOf:
          - maxLength: 32
            minLength: 6
            type: string
          - type: 'null'
          description: The auth code used for the domain
          title: Auth Code
        contacts:
          $ref: '#/components/schemas/ContactIdList'
          description: The contacts of the domain
        name:
          description: The domain to be created
          title: Name
          type: string
        nameservers:
          anyOf:
          - items:
              $ref: '#/components/schemas/Nameserver'
            type: array
          - type: 'null'
          description: The name servers for the domain
          title: Nameservers
        period:
          $ref: '#/components/schemas/DomainPeriod'
          description: How long the domain should be registered for
        renewal_mode:
          $ref: '#/components/schemas/RenewalMode'
          description: The renewal mode of the domain
      required:
      - name
      - period
      - contacts
      - renewal_mode
      title: DomainCreate
      type: object
    DomainDnssecDataCreate:
      properties:
        algorithm:
          $ref: '#/components/schemas/DnssecAlgorithm'
          description: DNSSEC algorithm used
        digest:
          anyOf:
          - type: string
          - type: 'null'
          description: Digest value for DS records
          title: Digest
        digest_type:
          anyOf:
          - $ref: '#/components/schemas/DnssecDigestType'
          - type: 'null'
          description: Digest type for DS records
        flags:
          anyOf:
          - type: integer
          - type: 'null'
          description: DNSKEY flags for key records
          title: Flags
        key_tag:
          anyOf:
          - type: integer
          - type: 'null'
          description: Key tag for DS records
          title: Key Tag
        protocol:
          anyOf:
          - type: integer
          - type: 'null'
          description: Protocol field for key records (typically 3)
          title: Protocol
        public_key:
          anyOf:
          - type: string
          - type: 'null'
          description: Base64-encoded public key for key records
          title: Public Key
        record_type:
          $ref: '#/components/schemas/DnssecRecordType'
          description: Type of DNSSEC record (DS or Key)
      required:
      - record_type
      - algorithm
      title: DomainDnssecDataCreate
      type: object
    DomainDnssecDataResponse:
      properties:
        algorithm:
          $ref: '#/components/schemas/DnssecAlgorithm'
          description: DNSSEC algorithm used
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        digest:
          anyOf:
          - type: string
          - type: 'null'
          description: Digest value for DS records
          title: Digest
        digest_type:
          anyOf:
          - $ref: '#/components/schemas/DnssecDigestType'
          - type: 'null'
          description: Digest type for DS records
        domain_dnssec_data_id:
          examples:
          - domain_dnssec_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^domain_dnssec_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Domain Dnssec Data Id
          type: string
          x-typeid-prefix: domain_dnssec
        domain_id:
          default: None
          description: The domain this DNSSEC record belongs to
          examples:
          - domain_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Domain Id
          type: string
          x-typeid-prefix: domain
        flags:
          anyOf:
          - type: integer
          - type: 'null'
          description: DNSKEY flags for key records
          title: Flags
        key_tag:
          anyOf:
          - type: integer
          - type: 'null'
          description: Key tag for DS records
          title: Key Tag
        protocol:
          anyOf:
          - type: integer
          - type: 'null'
          description: Protocol field for key records (typically 3)
          title: Protocol
        public_key:
          anyOf:
          - type: string
          - type: 'null'
          description: Base64-encoded public key for key records
          title: Public Key
        record_type:
          $ref: '#/components/schemas/DnssecRecordType'
          description: Type of DNSSEC record (DS or Key)
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
      required:
      - record_type
      - algorithm
      title: DomainDnssecDataResponse
      type: object
    DomainNameParts:
      properties:
        domain:
          anyOf:
          - type: string
          - type: 'null'
          examples:
          - example
          title: Domain
        subdomain:
          anyOf:
          - type: string
          - type: 'null'
          examples:
          - foo
          title: Subdomain
        suffix:
          anyOf:
          - type: string
          - type: 'null'
          examples:
          - com
          title: Suffix
      title: DomainNameParts
      type: object
    DomainPeriod:
      properties:
        unit:
          $ref: '#/components/schemas/PeriodUnit'
          description: The unit of the period
        value:
          description: Amount of time in the unit
          exclusiveMinimum: 0.0
          title: Value
          type: integer
      required:
      - value
      - unit
      title: DomainPeriod
      type: object
    DomainRenewRequest:
      properties:
        current_expiry_date:
          description: Current expiration date of the domain for validation
          format: date-time
          title: Current Expiry Date
          type: string
        period:
          $ref: '#/components/schemas/DomainPeriod'
          description: How long to extend the domain registration
      required:
      - period
      - current_expiry_date
      title: DomainRenewRequest
      type: object
    DomainRenewResponse:
      properties:
        name:
          description: The domain name that was renewed
          title: Name
          type: string
        new_expiry_date:
          description: New expiration date after renewal
          format: date-time
          title: New Expiry Date
          type: string
        period_extended:
          $ref: '#/components/schemas/DomainPeriod'
          description: The period by which the domain was extended
      required:
      - name
      - new_expiry_date
      - period_extended
      title: DomainRenewResponse
      type: object
    DomainResponse:
      properties:
        auth_code:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The auth code for the domain
          title: Auth Code
        auth_code_expires_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the auth code expires
          title: Auth Code Expires On
        canceled_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the domain was deleted
          title: Canceled On
        contacts:
          description: The contacts of the domain
          items:
            $ref: '#/components/schemas/DomainContactResponse'
          title: Contacts
          type: array
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the domain will be deleted
          title: Deleted On
        domain_id:
          examples:
          - domain_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Domain Id
          type: string
          x-typeid-prefix: domain
        expires_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the domain expires
          title: Expires On
        name:
          description: The domain name
          examples:
          - example.com
          title: Name
          type: string
        nameservers:
          description: All the domain statuses
          items:
            $ref: '#/components/schemas/Nameserver'
          title: Nameservers
          type: array
        owner_id:
          default: None
          description: The organization that owns the domain
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Owner Id
          type: string
          x-typeid-prefix: organization
        registered_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the domain was registered
          title: Registered On
        registry_account_id:
          default: None
          examples:
          - registry_account_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^registry_account_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Registry Account Id
          type: string
          x-typeid-prefix: registry_account
        registry_statuses:
          description: All the domain statuses
          items:
            $ref: '#/components/schemas/DomainStatus'
          title: Registry Statuses
          type: array
        renewal_mode:
          $ref: '#/components/schemas/RenewalMode'
          description: The renewal mode of the domain
        roid:
          description: The registry object id of the domain
          examples:
          - D123456789-EXAMPLE-TEST
          title: Roid
          type: string
        sld:
          description: The second level domain
          examples:
          - example
          minLength: 1
          title: Sld
          type: string
        tld:
          description: The top level domain of the domain
          examples:
          - com
          minLength: 1
          title: Tld
          type: string
        transfer_lock:
          default: false
          description: Whether the domain is locked for transfer
          title: Transfer Lock
          type: boolean
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
      required:
      - name
      - sld
      - tld
      - roid
      title: DomainResponse
      type: object
    DomainSearchMeta:
      properties:
        processing_time_ms:
          title: Processing Time Ms
          type: integer
        total:
          title: Total
          type: integer
      required:
      - total
      - processing_time_ms
      title: DomainSearchMeta
      type: object
    DomainSearchResponse:
      properties:
        meta:
          $ref: '#/components/schemas/DomainSearchMeta'
        results:
          items:
            $ref: '#/components/schemas/DomainSearchSuggestion'
          title: Results
          type: array
      required:
      - meta
      - results
      title: DomainSearchResponse
      type: object
    DomainSearchSuggestion:
      properties:
        available:
          title: Available
          type: boolean
        domain:
          title: Domain
          type: string
        premium:
          title: Premium
          type: boolean
      required:
      - domain
      - available
      - premium
      title: DomainSearchSuggestion
      type: object
    DomainSortField:
      enum:
      - name
      - created_on
      - updated_on
      - expires_on
      - registered_on
      title: DomainSortField
      type: string
    DomainStatus:
      enum:
      - ok
      - serverTransferProhibited
      - serverUpdateProhibited
      - serverDeleteProhibited
      - serverRenewProhibited
      - serverHold
      - transferPeriod
      - renewPeriod
      - redemptionPeriod
      - pendingUpdate
      - pendingTransfer
      - pendingRestore
      - pendingRenew
      - pendingDelete
      - pendingCreate
      - inactive
      - autoRenewPeriod
      - addPeriod
      - deleted
      - clientTransferProhibited
      - clientUpdateProhibited
      - clientDeleteProhibited
      - clientRenewProhibited
      - clientHold
      title: DomainStatus
      type: string
    DomainSummaryData:
      properties:
        by_status:
          additionalProperties:
            type: integer
          description: 'Domain counts by status (status: count)'
          title: By Status
          type: object
        by_tld:
          additionalProperties:
            type: integer
          description: 'Domain counts by TLD (tld: count)'
          title: By Tld
          type: object
        expiring_soon:
          $ref: '#/components/schemas/DomainsExpiringSoon'
          description: Domains expiring soon
        total_count:
          description: Total number of domains
          title: Total Count
          type: integer
      required:
      - total_count
      - by_status
      - by_tld
      - expiring_soon
      title: DomainSummaryData
      type: object
    DomainSummaryResponse:
      properties:
        domains:
          $ref: '#/components/schemas/DomainSummaryData'
          description: Domain summary data
        organization_id:
          description: The organization ID
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      required:
      - organization_id
      - domains
      title: DomainSummaryResponse
      type: object
    DomainTransferIn:
      properties:
        auth_code:
          description: The auth code for the domain
          title: Auth Code
          type: string
        contacts:
          additionalProperties:
            examples:
            - contact_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: contact
          description: The contacts of the domain
          examples:
          - admin: contact_01h45ytscbebyvny4gc8cr8ma2
            billing: contact_01h45ytscbebyvny4gc8cr8ma2
            registrant: contact_01h45ytscbebyvny4gc8cr8ma2
            tech: contact_01h45ytscbebyvny4gc8cr8ma2
          propertyNames:
            $ref: '#/components/schemas/DomainContactType'
          title: Contacts
          type: object
        name:
          description: The domain name
          examples:
          - example.com
          title: Name
          type: string
        renewal_mode:
          $ref: '#/components/schemas/RenewalMode'
      required:
      - name
      - auth_code
      - renewal_mode
      title: DomainTransferIn
      type: object
    DomainUpdate:
      properties:
        auth_code:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The new auth code for the domain
          title: Auth Code
        contacts:
          anyOf:
          - additionalProperties:
              examples:
              - contact_01h45ytscbebyvny4gc8cr8ma2
              format: typeid
              pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
              type: string
              x-typeid-prefix: contact
            propertyNames:
              $ref: '#/components/schemas/DomainContactType'
            type: object
          - type: 'null'
          description: The new contacts of the domain
          examples:
          - admin: contact_01h45ytscbebyvny4gc8cr8ma2
            billing: contact_01h45ytscbebyvny4gc8cr8ma2
            registrant: contact_01h45ytscbebyvny4gc8cr8ma2
            tech: contact_01h45ytscbebyvny4gc8cr8ma2
          title: Contacts
        nameservers:
          anyOf:
          - items:
              $ref: '#/components/schemas/Nameserver'
            type: array
          - type: 'null'
          description: The new name servers for the domain
          title: Nameservers
        renewal_mode:
          anyOf:
          - $ref: '#/components/schemas/RenewalMode'
          - type: 'null'
          description: The new renewal mode of the domain
        statuses:
          anyOf:
          - items:
              $ref: '#/components/schemas/DomainClientStatus'
            type: array
          - type: 'null'
          description: The new statuses of the domain
          title: Statuses
      title: DomainUpdate
      type: object
    DomainsExpiringSoon:
      properties:
        next_30_days:
          description: Number of domains expiring in the next 30 days
          title: Next 30 Days
          type: integer
        next_60_days:
          description: Number of domains expiring in the next 60 days
          title: Next 60 Days
          type: integer
        next_90_days:
          description: Number of domains expiring in the next 90 days
          title: Next 90 Days
          type: integer
      required:
      - next_30_days
      - next_60_days
      - next_90_days
      title: DomainsExpiringSoon
      type: object
    EmailForward:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        email_forward_id:
          examples:
          - email_forward_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Email Forward Id
          type: string
          x-typeid-prefix: email_forward
        source_address:
          description: The source email address to forward from
          format: email
          title: Source Address
          type: string
        status:
          $ref: '#/components/schemas/EmailForwardStatus'
          default: active
          description: Current status of the email forward rule
        target_address:
          description: The target email address to forward to
          format: email
          title: Target Address
          type: string
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
      required:
      - source_address
      - target_address
      title: EmailForward
      type: object
    EmailForwardBulkDelete:
      properties:
        email_forward_ids:
          description: List of email forward ids to delete
          items:
            examples:
            - email_forward_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: email_forward
          maxItems: 50
          minItems: 1
          title: Email Forward Ids
          type: array
          uniqueItems: true
      required:
      - email_forward_ids
      title: EmailForwardBulkDelete
      type: object
    EmailForwardBulkUpdate:
      properties:
        email_forwards:
          description: List of email forwards data to update
          items:
            $ref: '#/components/schemas/EmailForwardBulkUpdateItem'
          maxItems: 50
          minItems: 1
          title: Email Forwards
          type: array
      required:
      - email_forwards
      title: EmailForwardBulkUpdate
      type: object
    EmailForwardBulkUpdateItem:
      properties:
        email_forward_id:
          description: Unique identifier for the email forward
          examples:
          - email_forward_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Email Forward Id
          type: string
          x-typeid-prefix: email_forward
        source_address:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          description: The source email address to forward from
          title: Source Address
        status:
          anyOf:
          - $ref: '#/components/schemas/EmailForwardStatus'
          - type: 'null'
          description: Current status of the email forward rule
        target_address:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          description: The target email address to forward to
          title: Target Address
      required:
      - email_forward_id
      title: EmailForwardBulkUpdateItem
      type: object
    EmailForwardCreate:
      properties:
        source_address:
          description: The source email address to forward from
          format: email
          title: Source Address
          type: string
        status:
          $ref: '#/components/schemas/EmailForwardStatus'
          default: active
          description: Current status of the email forward rule
        target_address:
          description: The target email address to forward to
          format: email
          title: Target Address
          type: string
      required:
      - source_address
      - target_address
      title: EmailForwardCreate
      type: object
    EmailForwardStatus:
      enum:
      - active
      - inactive
      title: EmailForwardStatus
      type: string
    EmailForwardUpdate:
      properties:
        source_address:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          description: The source email address to forward from
          title: Source Address
        status:
          anyOf:
          - $ref: '#/components/schemas/EmailForwardStatus'
          - type: 'null'
          description: Current status of the email forward rule
        target_address:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          description: The target email address to forward to
          title: Target Address
      title: EmailForwardUpdate
      type: object
    EmailVerificationStatus:
      enum:
      - verified
      - pending
      - canceled
      title: EmailVerificationStatus
      type: string
    EppDateTime:
      anyOf:
      - format: date-time
        type: string
      - type: string
    EventObjectType:
      enum:
      - DOMAIN
      - CONTACT
      - HOST
      - RAW
      - UNKNOWN
      title: EventObjectType
      type: string
    EventResponse:
      properties:
        event_data:
          anyOf:
          - $ref: '#/components/schemas/TransferEvent'
          - $ref: '#/components/schemas/DeletedEvent'
          title: Event Data
        event_id:
          examples:
          - epp_event_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Event Id
          type: string
          x-typeid-prefix: epp_event
        object_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The id of the object that the event is about
          title: Object Id
        object_type:
          $ref: '#/components/schemas/EventObjectType'
          default: RAW
          description: The type of object that the event is about
        subtype:
          anyOf:
          - $ref: '#/components/schemas/EventSubtype'
          - type: 'null'
          description: The specific type/result of operation (considering the type
            property), more detailed (e.g., 'NOTIFICATION' with the 'DOMAIN_MODIFICATION'
            class)
        type:
          anyOf:
          - $ref: '#/components/schemas/EventType'
          - type: 'null'
          description: The type of the event - indicates the kind of operation occurring
            (e.g., 'ACCOUNT_CREATE', 'DOMAIN_MODIFICATION')
      required:
      - event_data
      title: EventResponse
      type: object
    EventSchema:
      properties:
        acknowledged_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the event was acknowledged
          title: Acknowledged On
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        event_data:
          $ref: '#/components/schemas/JsonValue'
          description: Additional details about the action
        event_id:
          examples:
          - epp_event_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Event Id
          type: string
          x-typeid-prefix: epp_event
        message_queue_id:
          anyOf:
          - type: string
          - type: 'null'
          description: A composite key with the registry account + message queue ID
            from the poll operation.
          title: Message Queue Id
        object_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The id of the object that the event is about
          title: Object Id
        object_type:
          $ref: '#/components/schemas/EventObjectType'
          default: RAW
          description: The type of object that the event is about
        source:
          description: The source of the event
          maxLength: 64
          title: Source
          type: string
        source_event_id:
          anyOf:
          - examples:
            - epp_event_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: epp_event
          - type: 'null'
          description: The reference of the original registry event (if any) that
            triggered this customer-facing event
          title: Source Event Id
        subtype:
          anyOf:
          - $ref: '#/components/schemas/EventSubtype'
          - type: 'null'
          description: The specific type/result of operation (considering the type
            property), more detailed (e.g., 'NOTIFICATION' with the 'DOMAIN_MODIFICATION'
            class)
        target:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: The target of the event
          title: Target
        type:
          anyOf:
          - $ref: '#/components/schemas/EventType'
          - type: 'null'
          description: The type of the event - indicates the kind of operation occurring
            (e.g., 'ACCOUNT_CREATE', 'DOMAIN_MODIFICATION')
      required:
      - event_data
      - source
      title: EventSchema
      type: object
    EventSubtype:
      enum:
      - NOTIFICATION
      - SUCCESS
      - FAILURE
      - CANCELED
      title: EventSubtype
      type: string
    EventType:
      enum:
      - REGISTRATION
      - RENEWAL
      - MODIFICATION
      - DELETION
      - INBOUND_TRANSFER
      - OUTBOUND_TRANSFER
      title: EventType
      type: string
    GrantType:
      enum:
      - client_credentials
      - password
      - refresh_token
      title: GrantType
      type: string
    HTTPValidationError:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
        status:
          title: Status code
          type: integer
        title:
          title: Problem Title
          type: string
        type:
          title: Problem type
          type: string
      required:
      - type
      - title
      - errors
      - status
      title: RequestValidationError
      type: object
    IpRestrictionCreate:
      properties:
        ip_network:
          description: IP address or CIDR range for the restriction.
          examples:
          - 192.0.2.0/24
          format: ipvanynetwork
          title: Ip Network
          type: string
        organization_id:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      required:
      - ip_network
      title: IpRestrictionCreate
      type: object
    IpRestrictionResponse:
      properties:
        created_on:
          format: date-time
          title: Created On
          type: string
        ip_network:
          description: IP address or CIDR range for the restriction.
          examples:
          - 192.0.2.0/24
          format: ipvanynetwork
          title: Ip Network
          type: string
        ip_restriction_id:
          title: Ip Restriction Id
          type: integer
        last_used_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Last Used On
        organization_id:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      required:
      - ip_restriction_id
      - organization_id
      - ip_network
      - created_on
      title: IpRestrictionResponse
      type: object
    IpRestrictionUpdate:
      properties:
        ip_network:
          anyOf:
          - format: ipvanynetwork
            type: string
          - type: 'null'
          description: IP address or CIDR range for the restriction.
          examples:
          - 192.0.2.0/24
          title: Ip Network
        last_used_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Timestamp of the last usage.
          title: Last Used On
      title: IpRestrictionUpdate
      type: object
    JsonValue: {}
    Nameserver:
      properties:
        hostname:
          description: The name server of the domain
          examples:
          - ns1.example.com
          title: Hostname
          type: string
        ip_addresses:
          description: The ip addresses of the name server
          examples:
          - 0.0.0.0
          - 127.0.0.1
          items:
            format: ipvanyaddress
            type: string
          title: Ip Addresses
          type: array
      required:
      - hostname
      title: Nameserver
      type: object
    Notification:
      properties:
        author:
          description: The user or system that created the notification
          title: Author
          type: string
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        message:
          description: The message content of the notification
          title: Message
          type: string
        notification_id:
          examples:
          - notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Notification Id
          type: string
          x-typeid-prefix: notification
        publish_date:
          description: The date/time the notification is to be published
          format: date-time
          title: Publish Date
          type: string
        source:
          description: Source of the notification
          title: Source
          type: string
        subject:
          description: The subject of the notification
          title: Subject
          type: string
        target:
          description: Target audience (broadcast, account, user)
          title: Target
          type: string
        type:
          description: The type of notification
          title: Type
          type: string
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
      required:
      - subject
      - type
      - source
      - message
      - author
      - target
      title: Notification
      type: object
    NotificationCreate:
      properties:
        author:
          description: The user or system that created the notification
          title: Author
          type: string
        message:
          description: The message content of the notification
          title: Message
          type: string
        publish_date:
          description: The date/time the notification is to be published
          format: date-time
          title: Publish Date
          type: string
        source:
          description: Source of the notification
          title: Source
          type: string
        subject:
          description: The subject of the notification
          title: Subject
          type: string
        target:
          description: Target audience (broadcast, account, user)
          title: Target
          type: string
        type:
          description: The type of notification
          title: Type
          type: string
      required:
      - subject
      - type
      - source
      - message
      - author
      - target
      title: NotificationCreate
      type: object
    NotificationSummary:
      properties:
        author:
          description: The user or system that created the notification
          title: Author
          type: string
        message:
          description: The message content of the notification
          title: Message
          type: string
        notification_id:
          examples:
          - notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Notification Id
          type: string
          x-typeid-prefix: notification
        publish_date:
          description: The date/time the notification is to be published
          format: date-time
          title: Publish Date
          type: string
        source:
          description: Source of the notification
          title: Source
          type: string
        subject:
          description: The subject of the notification
          title: Subject
          type: string
        target:
          description: Target audience (broadcast, account, user)
          title: Target
          type: string
        type:
          description: The type of notification
          title: Type
          type: string
      required:
      - subject
      - type
      - source
      - message
      - author
      - target
      title: NotificationSummary
      type: object
    NotificationUpdate:
      properties:
        author:
          description: The user or system that created the notification
          title: Author
          type: string
        message:
          description: The message content of the notification
          title: Message
          type: string
        publish_date:
          description: The date/time the notification is to be published
          format: date-time
          title: Publish Date
          type: string
        source:
          description: Source of the notification
          title: Source
          type: string
        subject:
          description: The subject of the notification
          title: Subject
          type: string
        target:
          description: Target audience (broadcast, account, user)
          title: Target
          type: string
        type:
          description: The type of notification
          title: Type
          type: string
      required:
      - subject
      - type
      - source
      - message
      - author
      - target
      title: NotificationUpdate
      type: object
    Organization:
      properties:
        address_1:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: First line of the organization's address.
          title: Address 1
        address_2:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Second line of the organization's address.
          title: Address 2
        attributes:
          items:
            $ref: '#/components/schemas/OrganizationAttribute'
          title: Attributes
          type: array
        business_number:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Government issued business identifier for the organization
            issued.
          title: Business Number
        city:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: City of the organization's address.
          title: City
        country_code:
          anyOf:
          - maxLength: 2
            pattern: ^\w{2}$
            type: string
          - type: 'null'
          description: ISO 3166-1 alpha-2 country code.
          title: Country Code
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        currency:
          anyOf:
          - $ref: '#/components/schemas/Currency'
          - type: 'null'
          description: The currency used by the organization.
        default_locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: Default locale for the organization.
          title: Default Locale
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        name:
          description: Name of the organization.
          minLength: 1
          title: Name
          type: string
        organization_id:
          description: Unique identifier for the organization.
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        parent_organization_id:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: ID of the parent organization.
          title: Parent Organization Id
        postal_code:
          anyOf:
          - maxLength: 20
            minLength: 1
            type: string
          - type: 'null'
          description: Postal code of the organization's address.
          title: Postal Code
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: State or province of the organization's address.
          title: State
        status:
          $ref: '#/components/schemas/OrganizationStatus'
          default: active
          description: Status of the organization.
        tax_id:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Tax ID of the organization.
          title: Tax Id
        tax_id_type:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Type of tax ID for the organization.
          title: Tax Id Type
        tax_rate:
          anyOf:
          - type: string
          - type: 'null'
          description: Tax rate for the organization.
          title: Tax Rate
        users:
          items:
            $ref: '#/components/schemas/User'
          title: Users
          type: array
      required:
      - name
      title: Organization
      type: object
    OrganizationAttribute:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        organization_attribute_id:
          title: Organization Attribute Id
          type: integer
        private:
          default: false
          description: When true, the attribute is private and not visible to users.
          title: Private
          type: boolean
        protected:
          default: false
          description: When true, the attribute is protected and cannot be modified
            by users.
          title: Protected
          type: boolean
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      - organization_attribute_id
      title: OrganizationAttribute
      type: object
    OrganizationAttributeCreate:
      properties:
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        private:
          default: false
          description: When true, the attribute is private and not visible to users.
          title: Private
          type: boolean
        protected:
          default: false
          description: When true, the attribute is protected and cannot be modified
            by users.
          title: Protected
          type: boolean
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      title: OrganizationAttributeCreate
      type: object
    OrganizationAttributeResponse:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        organization_attribute_id:
          title: Organization Attribute Id
          type: integer
        protected:
          default: false
          description: When true, the attribute is protected and cannot be modified
            by users.
          title: Protected
          type: boolean
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      - organization_attribute_id
      title: OrganizationAttributeResponse
      type: object
    OrganizationAttributeUpdate:
      properties:
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        private:
          default: false
          description: When true, the attribute is private and not visible to users.
          title: Private
          type: boolean
        protected:
          default: false
          description: When true, the attribute is protected and cannot be modified
            by users.
          title: Protected
          type: boolean
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      title: OrganizationAttributeUpdate
      type: object
    OrganizationCreate:
      properties:
        address_1:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: First line of the organization's address.
          title: Address 1
        address_2:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Second line of the organization's address.
          title: Address 2
        attributes:
          description: List of attributes for the organization.
          items:
            $ref: '#/components/schemas/OrganizationAttributeCreate'
          title: Attributes
          type: array
        business_number:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Government issued business identifier for the organization
            issued.
          title: Business Number
        city:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: City of the organization's address.
          title: City
        country_code:
          anyOf:
          - maxLength: 2
            pattern: ^\w{2}$
            type: string
          - type: 'null'
          description: ISO 3166-1 alpha-2 country code.
          title: Country Code
        currency:
          anyOf:
          - $ref: '#/components/schemas/Currency'
          - type: 'null'
          description: The currency used by the organization.
        default_locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: Default locale for the organization.
          title: Default Locale
        name:
          description: Name of the organization.
          minLength: 1
          title: Name
          type: string
        parent_organization_id:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: ID of the parent organization.
          title: Parent Organization Id
        postal_code:
          anyOf:
          - maxLength: 20
            minLength: 1
            type: string
          - type: 'null'
          description: Postal code of the organization's address.
          title: Postal Code
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: State or province of the organization's address.
          title: State
        tax_id:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Tax ID of the organization.
          title: Tax Id
        tax_id_type:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Type of tax ID for the organization.
          title: Tax Id Type
        tax_rate:
          anyOf:
          - type: number
          - type: string
          - type: 'null'
          description: Tax rate for the organization.
          title: Tax Rate
        users:
          description: List of users that needs to be created with the organization.
          items:
            $ref: '#/components/schemas/UserCreate'
          title: Users
          type: array
      required:
      - name
      title: OrganizationCreate
      type: object
    OrganizationCredential:
      properties:
        api_key_description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the organization credential.
          title: Api Key Description
        api_key_id:
          description: Unique identifier of the organization credential.
          examples:
          - api_key_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Api Key Id
          type: string
          x-typeid-prefix: api_key
        api_key_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the organization credential. Only a-z, A-Z, 0-9, underscore,
            and hyphen are allowed.
          title: Api Key Name
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        last_used_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Last Used On
        organization_id:
          default: None
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        status:
          $ref: '#/components/schemas/OrganizationCredentialStatus'
          description: The status of the organization credential.
          readOnly: true
      required:
      - api_key_id
      - status
      title: OrganizationCredential
      type: object
    OrganizationCredentialCreated:
      properties:
        api_key:
          description: Unique identifier of the organization credential.
          examples:
          - api_key_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Api Key
          type: string
          x-typeid-prefix: api_key
        api_key_description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the organization credential.
          title: Api Key Description
        api_key_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the organization credential. Only a-z, A-Z, 0-9, underscore,
            and hyphen are allowed.
          title: Api Key Name
        client_id:
          default: None
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Client Id
          type: string
          x-typeid-prefix: organization
        client_secret:
          anyOf:
          - type: string
          - type: 'null'
          description: Plaintext secret to be hashed (not stored directly in the DB).
          title: Client Secret
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        last_used_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Last Used On
        status:
          $ref: '#/components/schemas/OrganizationCredentialStatus'
          description: The status of the organization credential.
          readOnly: true
      required:
      - api_key
      - status
      title: OrganizationCredentialCreated
      type: object
    OrganizationCredentialExtra:
      properties:
        api_key_description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the organization credential.
          title: Api Key Description
        api_key_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the organization credential. Only a-z, A-Z, 0-9, underscore,
            and hyphen are allowed.
          title: Api Key Name
        expires_at:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date and time the credential expiration.
          title: Expires At
      title: OrganizationCredentialExtra
      type: object
    OrganizationCredentialStatus:
      enum:
      - active
      - revoked
      title: OrganizationCredentialStatus
      type: string
    OrganizationStatus:
      enum:
      - active
      - inactive
      title: OrganizationStatus
      type: string
    OrganizationTokenResponse:
      properties:
        access_token:
          title: Access Token
          type: string
        expires_in:
          title: Expires In
          type: integer
        token_type:
          default: Bearer
          title: Token Type
          type: string
      required:
      - access_token
      - expires_in
      title: OrganizationTokenResponse
      type: object
    OrganizationUpdate:
      properties:
        address_1:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: First line of the organization's address.
          title: Address 1
        address_2:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Second line of the organization's address.
          title: Address 2
        business_number:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Government issued business identifier for the organization
            issued.
          title: Business Number
        city:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: City of the organization's address.
          title: City
        country_code:
          anyOf:
          - description: ISO 3166-1 alpha-2 country code.
            maxLength: 2
            minLength: 2
            pattern: ^\w{2}$
            type: string
          - type: 'null'
          title: Country Code
        default_locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: Default locale for the organization.
          title: Default Locale
        name:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Name of the organization.
          title: Name
        postal_code:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Postal code of the organization's address.
          title: Postal Code
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: State or province of the organization's address.
          title: State
        tax_id:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Tax ID of the organization.
          title: Tax Id
        tax_id_type:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Type of tax ID for the organization.
          title: Tax Id Type
        tax_rate:
          anyOf:
          - type: number
          - type: string
          - type: 'null'
          description: Tax rate for the organization.
          title: Tax Rate
      title: OrganizationUpdate
      type: object
    OrganizationWithPlan:
      properties:
        address_1:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: First line of the organization's address.
          title: Address 1
        address_2:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: Second line of the organization's address.
          title: Address 2
        attributes:
          items:
            $ref: '#/components/schemas/OrganizationAttribute'
          title: Attributes
          type: array
        business_number:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          description: Government issued business identifier for the organization
            issued.
          title: Business Number
        city:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: City of the organization's address.
          title: City
        country_code:
          anyOf:
          - maxLength: 2
            pattern: ^\w{2}$
            type: string
          - type: 'null'
          description: ISO 3166-1 alpha-2 country code.
          title: Country Code
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        currency:
          anyOf:
          - $ref: '#/components/schemas/Currency'
          - type: 'null'
          description: The currency used by the organization.
        default_locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: Default locale for the organization.
          title: Default Locale
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        name:
          description: Name of the organization.
          minLength: 1
          title: Name
          type: string
        organization_id:
          description: Unique identifier for the organization.
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        parent_organization_id:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          description: ID of the parent organization.
          title: Parent Organization Id
        plan:
          $ref: '#/components/schemas/PlanRelation'
          default: basic_plan
        postal_code:
          anyOf:
          - maxLength: 20
            minLength: 1
            type: string
          - type: 'null'
          description: Postal code of the organization's address.
          title: Postal Code
        state:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: State or province of the organization's address.
          title: State
        status:
          $ref: '#/components/schemas/OrganizationStatus'
          default: active
          description: Status of the organization.
        tax_id:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Tax ID of the organization.
          title: Tax Id
        tax_id_type:
          anyOf:
          - maxLength: 50
            minLength: 1
            type: string
          - type: 'null'
          description: Type of tax ID for the organization.
          title: Tax Id Type
        tax_rate:
          anyOf:
          - type: string
          - type: 'null'
          description: Tax rate for the organization.
          title: Tax Rate
        users:
          items:
            $ref: '#/components/schemas/User'
          title: Users
          type: array
      required:
      - name
      title: OrganizationWithPlan
      type: object
    PaginationMetadata:
      properties:
        current_page:
          title: Current Page
          type: integer
        has_next_page:
          title: Has Next Page
          type: boolean
        has_previous_page:
          title: Has Previous Page
          type: boolean
        page_size:
          title: Page Size
          type: integer
        total_items:
          title: Total Items
          type: integer
        total_pages:
          title: Total Pages
          type: integer
      required:
      - total_pages
      - total_items
      - current_page
      - page_size
      - has_next_page
      - has_previous_page
      title: PaginationMetadata
      type: object
    Pagination_ContactSchema_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/ContactSchema'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[ContactSchema]
      type: object
    Pagination_DnsZoneResponse_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/DnsZoneResponse'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[DnsZoneResponse]
      type: object
    Pagination_DomainResponse_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/DomainResponse'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[DomainResponse]
      type: object
    Pagination_EmailForward_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/EmailForward'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[EmailForward]
      type: object
    Pagination_EventResponse_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/EventResponse'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[EventResponse]
      type: object
    Pagination_OrganizationCredential_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/OrganizationCredential'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[OrganizationCredential]
      type: object
    Pagination_Organization_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/Organization'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[Organization]
      type: object
    Pagination_UserNotificationSummary_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/UserNotificationSummary'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[UserNotificationSummary]
      type: object
    Pagination_User_:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/User'
          title: Results
          type: array
      required:
      - results
      - pagination
      title: Pagination[User]
      type: object
    PatchOp:
      enum:
      - upsert
      - remove
      title: PatchOp
      type: string
    PeriodUnit:
      enum:
      - y
      - m
      - d
      title: PeriodUnit
      type: string
    Permission:
      enum:
      - acknowledge
      - bulk_create
      - bulk_delete
      - bulk_renew_expire
      - bulk_transfer_trade
      - bulk_update
      - create
      - delete
      - enterprise
      - manage_api_keys
      - manage_billing
      - manage_cms_content
      - manage_contacts
      - manage_dns_zones
      - manage_domains
      - manage_email_forwards
      - manage_opusdns_api_keys
      - manage_products
      - manage_reseller
      - manage_user_relations
      - manage_users
      - plan_manager
      - premium
      - premium_reseller
      - renew_expire
      - sign_org_tos
      - starter
      - transfer_trade
      - update
      - verify
      - view
      - view_audit_logs
      title: Permission
      type: string
    PermissionSet:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          title: Permissions
          type: array
      title: PermissionSet
      type: object
    PlanRelation:
      enum:
      - basic_plan
      - enterprise_plan
      - premium_plan
      - starter_plan
      title: PlanRelation
      type: string
    PlanUpdate:
      properties:
        plan:
          $ref: '#/components/schemas/PlanRelation'
          default: basic_plan
      title: PlanUpdate
      type: object
    Problem:
      properties:
        detail:
          anyOf:
          - type: string
          - type: 'null'
          title: Problem detail
        status:
          title: Status code
          type: integer
        title:
          title: Problem Title
          type: string
        type:
          title: Problem type
          type: string
      required:
      - type
      - title
      - detail
      - status
      title: Problem
      type: object
    Relation:
      enum:
      - accepted_tos
      - admin
      - api_admin
      - billing_manager
      - client_api_key
      - cms_content_editor
      - contact_manager
      - domain_manager
      - email_forward_manager
      - member
      - opusdns_internal_api_key
      - organization_manager
      - owner
      - parent
      - product_manager
      - recipient
      - reseller_manager
      - root_admin
      - self
      title: Relation
      type: string
    RelationSet:
      properties:
        relations:
          items:
            $ref: '#/components/schemas/Relation'
          title: Relations
          type: array
      title: RelationSet
      type: object
    RenewalMode:
      enum:
      - renew
      - expire
      - delete
      title: RenewalMode
      type: string
    SignupCreate:
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationCreate'
          description: Organization signup.
        terms_of_service:
          anyOf:
          - $ref: '#/components/schemas/TermsOfServiceAccept'
          - type: 'null'
          description: Optional terms of service acceptance.
        user:
          $ref: '#/components/schemas/UserCreate'
          description: User signup to platform.
      required:
      - user
      - organization
      title: SignupCreate
      type: object
    SortOrder:
      enum:
      - asc
      - desc
      title: SortOrder
      type: string
    SpiceDbRelationshipUpdate:
      properties:
        add:
          anyOf:
          - items:
              $ref: '#/components/schemas/Relation'
            type: array
          - type: 'null'
          title: Add
        remove:
          anyOf:
          - items:
              $ref: '#/components/schemas/Relation'
            type: array
          - type: 'null'
          title: Remove
      title: SpiceDbRelationshipUpdate
      type: object
    TermsOfServiceAccept:
      properties:
        accepted:
          title: Accepted
          type: boolean
      required:
      - accepted
      title: TermsOfServiceAccept
      type: object
    TransferEvent:
      properties:
        current_registrar:
          title: Current Registrar
          type: string
        execution_date:
          $ref: '#/components/schemas/EppDateTime'
        expiration_date:
          anyOf:
          - $ref: '#/components/schemas/EppDateTime'
          - type: 'null'
        message:
          title: Message
          type: string
        requesting_registrar:
          title: Requesting Registrar
          type: string
      required:
      - execution_date
      - message
      - requesting_registrar
      - current_registrar
      - expiration_date
      title: TransferEvent
      type: object
    User:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        email:
          description: The user's email address
          format: email
          title: Email
          type: string
        first_name:
          description: The user's first name
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The user's last name
          minLength: 1
          title: Last Name
          type: string
        locale:
          examples:
          - en_US
          title: Locale
          type: string
        organization_id:
          default: None
          description: The user's organization id
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          examples:
          - '+1.2125552368'
          title: Phone
        status:
          $ref: '#/components/schemas/UserStatus'
          readOnly: true
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        user_id:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
        username:
          description: The user's unique username
          minLength: 1
          title: Username
          type: string
      required:
      - username
      - first_name
      - last_name
      - email
      - locale
      - status
      title: User
      type: object
    UserAttributeUpdate:
      properties:
        key:
          description: Key of the attribute.
          minLength: 1
          title: Key
          type: string
        value:
          anyOf:
          - $ref: '#/components/schemas/JsonValue'
          - type: 'null'
          description: Value of the attribute.
      required:
      - key
      title: UserAttributeUpdate
      type: object
    UserCreate:
      properties:
        email:
          description: The user's email address
          format: email
          title: Email
          type: string
        first_name:
          description: The user's first name
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The user's last name
          minLength: 1
          title: Last Name
          type: string
        locale:
          examples:
          - en_US
          title: Locale
          type: string
        password:
          description: Plaintext password for hashing during creation
          examples:
          - correcthorsebatterystaple
          title: Password
          type: string
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          examples:
          - '+1.2125552368'
          title: Phone
        username:
          description: The user's unique username
          minLength: 1
          title: Username
          type: string
      required:
      - username
      - first_name
      - last_name
      - email
      - locale
      - password
      title: UserCreate
      type: object
    UserNotification:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        notification:
          $ref: '#/components/schemas/Notification'
        notification_id:
          default: None
          description: Unique identifier for the notification
          examples:
          - notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Notification Id
          type: string
          x-typeid-prefix: notification
        status:
          $ref: '#/components/schemas/UserNotificationStatus'
          default: unread
          description: Whether the user has read the notification
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        user_id:
          default: None
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
        user_notification_id:
          examples:
          - user_notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Notification Id
          type: string
          x-typeid-prefix: user_notification
      required:
      - notification
      title: UserNotification
      type: object
    UserNotificationStatus:
      enum:
      - read
      - unread
      title: UserNotificationStatus
      type: string
    UserNotificationSummary:
      properties:
        notification:
          $ref: '#/components/schemas/NotificationSummary'
        status:
          $ref: '#/components/schemas/UserNotificationStatus'
          default: unread
          description: Whether the user has read the notification
        user_notification_id:
          examples:
          - user_notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Notification Id
          type: string
          x-typeid-prefix: user_notification
      required:
      - notification
      title: UserNotificationSummary
      type: object
    UserStatus:
      enum:
      - active
      - inactive
      title: UserStatus
      type: string
    UserTokenResponse:
      properties:
        access_token:
          title: Access Token
          type: string
        expires_in:
          title: Expires In
          type: integer
        refresh_expires_in:
          title: Refresh Expires In
          type: integer
        refresh_token:
          title: Refresh Token
          type: string
        token_type:
          default: Bearer
          title: Token Type
          type: string
      required:
      - access_token
      - expires_in
      - refresh_token
      - refresh_expires_in
      title: UserTokenResponse
      type: object
    UserUpdate:
      properties:
        email:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          description: The user's email address
          title: Email
        first_name:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The user's first name
          title: First Name
        last_name:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The user's last name
          title: Last Name
        locale:
          anyOf:
          - examples:
            - en_US
            type: string
          - type: 'null'
          description: The user's locale
          title: Locale
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          title: Phone
        user_attributes:
          anyOf:
          - items:
              $ref: '#/components/schemas/UserAttributeUpdate'
            type: array
          - type: 'null'
          description: User attributes
          title: User Attributes
        username:
          anyOf:
          - minLength: 1
            type: string
          - type: 'null'
          description: The user's unique username
          title: Username
      title: UserUpdate
      type: object
    UserWithAttributes:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        email:
          description: The user's email address
          format: email
          title: Email
          type: string
        first_name:
          description: The user's first name
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The user's last name
          minLength: 1
          title: Last Name
          type: string
        locale:
          examples:
          - en_US
          title: Locale
          type: string
        organization_id:
          default: None
          description: The user's organization id
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          examples:
          - '+1.2125552368'
          title: Phone
        status:
          $ref: '#/components/schemas/UserStatus'
          readOnly: true
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        user_attributes:
          additionalProperties:
            $ref: '#/components/schemas/JsonValue'
          description: All of the user attributes
          examples:
          - array:
            - 1
            - 2
            - 3
            bool: true
            number: 1
            string: value2
          title: User Attributes
          type: object
        user_id:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
        username:
          description: The user's unique username
          minLength: 1
          title: Username
          type: string
      required:
      - username
      - first_name
      - last_name
      - email
      - locale
      - status
      title: UserWithAttributes
      type: object
    UserWithRelationPermissions:
      properties:
        created_on:
          description: The date/time the entry was created on
          format: date-time
          title: Created On
          type: string
        deleted_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date/time the entry was deleted on
          title: Deleted On
        email:
          description: The user's email address
          format: email
          title: Email
          type: string
        first_name:
          description: The user's first name
          minLength: 1
          title: First Name
          type: string
        last_name:
          description: The user's last name
          minLength: 1
          title: Last Name
          type: string
        locale:
          examples:
          - en_US
          title: Locale
          type: string
        organization_id:
          default: None
          description: The user's organization id
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
        permissions:
          anyOf:
          - items:
              $ref: '#/components/schemas/Permission'
            type: array
          - type: 'null'
          title: Permissions
        phone:
          anyOf:
          - format: phone
            type: string
          - type: 'null'
          description: The user's phone number
          examples:
          - '+1.2125552368'
          title: Phone
        relations:
          anyOf:
          - items:
              $ref: '#/components/schemas/Relation'
            type: array
          - type: 'null'
          title: Relations
        status:
          $ref: '#/components/schemas/UserStatus'
          readOnly: true
        updated_on:
          description: The date/time the entry was last updated on
          format: date-time
          title: Updated On
          type: string
        user_attributes:
          additionalProperties:
            $ref: '#/components/schemas/JsonValue'
          description: All of the user attributes
          examples:
          - array:
            - 1
            - 2
            - 3
            bool: true
            number: 1
            string: value2
          title: User Attributes
          type: object
        user_id:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
        username:
          description: The user's unique username
          minLength: 1
          title: Username
          type: string
      required:
      - username
      - first_name
      - last_name
      - email
      - locale
      - status
      title: UserWithRelationPermissions
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    VerificationType:
      enum:
      - api
      - email
      title: VerificationType
      type: string
    ZoneSortField:
      enum:
      - name
      - created_on
      - updated_on
      - dnssec_status
      title: ZoneSortField
      type: string
    common__models__availability__datasource__DomainAvailabilityResponse:
      properties:
        meta:
          $ref: '#/components/schemas/DomainAvailabilityMeta'
        results:
          items:
            $ref: '#/components/schemas/DomainAvailability'
          title: Results
          type: array
      required:
      - meta
      - results
      title: DomainAvailabilityResponse
      type: object
    common__models__domain__domain__DomainAvailabilityResponse:
      properties:
        available:
          title: Available
          type: boolean
        domain:
          description: The domain name
          examples:
          - example.com
          title: Domain
          type: string
        reason:
          anyOf:
          - type: string
          - type: 'null'
          title: Reason
      required:
      - domain
      - available
      - reason
      title: DomainAvailabilityResponse
      type: object
  securitySchemes:
    APIKeyHeader:
      description: API key for the organization.
      in: header
      name: X-Api-Key
      type: apiKey
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: token
      type: oauth2
info:
  description: '# Authentication


    Describes authentication approach.



    # Resource IDs


    The API uses extensively [Type IDs](https://github.com/jetify-com/typeid): type-safe,
    K-sortable, globally unique identifier inspired by Stripe IDs. They can be easily
    identified with a format like `prefix_01jxe1nzrmf78scaqbkjx0va0f`. The `prefix`
    gives context to the ID - some examples include `user`, `organization`, `domain`.
    The rest of the ID is a 128-bit UUIDv7 encoded as a 26-character string using
    a modified base32 encoding. See [formal specification for details](https://github.com/jetify-com/typeid/tree/main/spec).


    This approach allows using unique IDs (UUIDv7), preventing iteration attacks,
    while also easily identifying the "namespace" of the ID. `01975c1f-a15a-7f6c-a5ce-b75fe33de079`
    is hardly distuingishable from `01975c1f-f120-7874-8dc2-de7d728bf261` by humans
    on first glance. However, when represented as Type IDs, they could be represented
    as `user_01jxe1z8atfxpabknqbzhkvr3s` and `domain_01jxe1zw90f1t8vgpyfns8qwk1`,
    immediately making it easier to differentiate between them.


    Additionally, this gives type safety and additional validation that can be done.
    There''s [libraries available for many languages to make handling Type IDs easier](https://github.com/jetify-com/typeid?tab=readme-ov-file#official-implementations-by-jetify).
    We''re using them ourselves on the backend to quickly catch mistakes like passing
    the wrong Type ID (passing a user ID like `user_01jxe1z8atfxpabknqbzhkvr3s` where
    a domain ID `domain_01jxe1zw90f1t8vgpyfns8qwk1` was expected).



    '
  summary: OpusDNS - your gateway to a seamless domain management experience.
  title: OpusDNS API
  version: 2025-07-31-022547
  x-logo:
    altText: OpusDNS API Reference
    url: https://d24lr4zqs1tgqh.cloudfront.net/c9505a20-5ae1-406c-b060-d392569caebf.jpg
openapi: 3.1.0
paths:
  /v1/auth/client_credentials:
    get:
      operationId: list_api_keys_v1_auth_client_credentials_get
      parameters:
      - description: Optional status to filter the results
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/OrganizationCredentialStatus'
          - type: 'null'
          description: Optional status to filter the results
          title: Status
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_OrganizationCredential_'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Api Keys
      tags:
      - authentication
    post:
      operationId: issue_api_key_v1_auth_client_credentials_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCredentialExtra'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCredentialCreated'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Issue Api Key
      tags:
      - authentication
  /v1/auth/client_credentials/{api_key_id}:
    delete:
      operationId: delete_api_key_v1_auth_client_credentials__api_key_id__delete
      parameters:
      - in: path
        name: api_key_id
        required: true
        schema:
          examples:
          - api_key_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^api_key_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Api Key Id
          type: string
          x-typeid-prefix: api_key
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_ORGANIZATION_CREDENTIAL_NOT_FOUND
                credential_id: Additional error context.
                detail: Organization credential with ID Additional error context.
                  not found
                status: 404
                title: Organization Management Error
                type: organization-credential-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Api Key
      tags:
      - authentication
  /v1/auth/logout:
    post:
      operationId: logout_v1_auth_logout_post
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
      security:
      - OAuth2PasswordBearer: []
      summary: Logout
      tags:
      - authentication
  /v1/auth/signup:
    post:
      operationId: signup_v1_auth_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OrganizationTokenResponse'
                - $ref: '#/components/schemas/UserTokenResponse'
                title: Response Signup V1 Auth Signup Post
          description: Successful Response
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_USER_EXISTS
                detail: User with username or email already exists
                status: 409
                title: User Management Error
                type: user-already-present
                user: Additional error context.
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup
      tags:
      - authentication
  /v1/auth/token:
    post:
      operationId: issue_organization_token_v1_auth_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_issue_organization_token_v1_auth_token_post'
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/OrganizationTokenResponse'
                - $ref: '#/components/schemas/UserTokenResponse'
                title: Response Issue Organization Token V1 Auth Token Post
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      - OAuth2PasswordBearer: []
      summary: Issue Organization Token
      tags:
      - authentication
  /v1/availability:
    get:
      description: Check the availability of one or more domains.
      operationId: bulk_availability_v1_availability_get
      parameters:
      - description: '

          Specify one or more domains to check for availability.

          '
        examples:
          list:
            summary: A list of domains
            value:
            - example.com
            - example.org
        in: query
        name: domains
        required: true
        schema:
          description: '

            Specify one or more domains to check for availability.

            '
          items:
            type: string
          title: Domains
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common__models__availability__datasource__DomainAvailabilityResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '502':
          content:
            application/problem+json:
              example:
                code: ERROR_AVAILABILITY_PROVIDER
                detail: Additional error context.
                status: 502
                title: Availability Error
                type: availability-provider
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Gateway
      security:
      - OAuth2PasswordBearer: []
      summary: Bulk Availability
      tags:
      - availability
  /v1/availability/stream:
    get:
      description: Stream domain availability results using Server-Sent Events (SSE)
        until the `done` event is received.
      operationId: stream_availability_v1_availability_stream_get
      parameters:
      - description: '

          Specify one or more domains to check for availability.

          '
        examples:
          list:
            summary: A list of domains
            value:
            - example.com
            - example.org
        in: query
        name: domains
        required: true
        schema:
          description: '

            Specify one or more domains to check for availability.

            '
          items:
            type: string
          title: Domains
          type: array
      responses:
        '200':
          content:
            text/event-stream:
              examples:
                Data:
                  description: Returns individual domains' availability
                  summary: Availability data
                  value: 'data: {"domain":"example.com","status":"unavailable"}'
                Event:
                  description: Returned when an event occurs
                  summary: Event
                  value: 'event: done'
              schema:
                type: string
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '502':
          content:
            application/problem+json:
              example:
                code: ERROR_AVAILABILITY_PROVIDER
                detail: Additional error context.
                status: 502
                title: Availability Error
                type: availability-provider
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Gateway
      security:
      - OAuth2PasswordBearer: []
      summary: Stream Availability
      tags:
      - availability
  /v1/contacts:
    get:
      description: List all contacts
      operationId: get_contacts_v1_contacts_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      - in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/ContactSortField'
          default: created_on
      - in: query
        name: sort_order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
          default: desc
      - in: query
        name: first_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
      - in: query
        name: last_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
      - in: query
        name: email
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: country
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
      - in: query
        name: created_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created After
      - in: query
        name: created_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created Before
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_ContactSchema_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Contacts
      tags:
      - contact
    post:
      description: Create a contact
      operationId: create_contact_v1_contacts_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactSchema'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Contact
      tags:
      - contact
  /v1/contacts/verification:
    get:
      description: Retrieve contact verification
      operationId: get_verification_by_token_v1_contacts_verification_get
      parameters:
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Verification By Token
      tags:
      - contact
    put:
      description: Complete contact verification
      operationId: update_verification_by_token_v1_contacts_verification_put
      parameters:
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/problem+json:
              examples:
                Contact Management Error:
                  value:
                    code: ERROR_INVALID_VERIFICATION_TOKEN
                    contact_id: Additional error context.
                    detail: Invalid verification token
                    status: 400
                    title: Contact Management Error
                    type: contact-verification-token-invalid
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Verification By Token
      tags:
      - contact
  /v1/contacts/verify:
    get:
      operationId: email_verify_contact_v1_contacts_verify_get
      parameters:
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Email Verify Contact
      tags:
      - contact
  /v1/contacts/{contact_id}:
    delete:
      description: Delete a contact
      operationId: delete_contact_v1_contacts__contact_id__delete
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_IN_USE
                detail: Contact is linked to one or more domains
                domain_ids:
                - A
                - d
                - d
                - i
                - t
                - i
                - o
                - n
                - a
                - l
                - ' '
                - e
                - r
                - r
                - o
                - r
                - ' '
                - c
                - o
                - n
                - t
                - e
                - x
                - t
                - .
                status: 409
                title: Contact Management Error
                type: contact-in-use
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Contact
      tags:
      - contact
    get:
      description: Retrieve a contact
      operationId: get_contact_v1_contacts__contact_id__get
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactSchema'
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Contact
      tags:
      - contact
  /v1/contacts/{contact_id}/verification:
    delete:
      description: Delete contact verification
      operationId: cancel_verification_v1_contacts__contact_id__verification_delete
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Cancel Verification
      tags:
      - contact
    get:
      description: Retrieve contact verification
      operationId: get_verification_status_v1_contacts__contact_id__verification_get
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactVerificationResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Verification Status
      tags:
      - contact
    post:
      description: Start contact verification
      operationId: start_contact_verification_v1_contacts__contact_id__verification_post
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      - in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/VerificationType'
      responses:
        '201':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ContactVerificationEmailResponse'
                - $ref: '#/components/schemas/ContactVerificationApiResponse'
                title: Response Start Contact Verification V1 Contacts  Contact Id  Verification
                  Post
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '405':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_INVALID_TYPE
                detail: 'Invalid verification type: Additional error context.'
                status: 405
                title: Contact Management Error
                type: contact-verification-type-invalid
              schema:
                $ref: '#/components/schemas/Problem'
          description: Method Not Allowed
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Start Contact Verification
      tags:
      - contact
    put:
      description: Complete contact verification
      operationId: update_verification_v1_contacts__contact_id__verification_put
      parameters:
      - in: path
        name: contact_id
        required: true
        schema:
          examples:
          - contact_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^contact_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Contact Id
          type: string
          x-typeid-prefix: contact
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      responses:
        '204':
          description: Successful Response
        '400':
          content:
            application/problem+json:
              examples:
                Contact Management Error:
                  value:
                    code: ERROR_INVALID_VERIFICATION_TOKEN
                    contact_id: Additional error context.
                    detail: Invalid verification token
                    status: 400
                    title: Contact Management Error
                    type: contact-verification-token-invalid
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_MISSING_PERMISSIONS
                detail: Missing permissions to verify contact as type Additional error
                  context.
                status: 403
                title: Contact Management Error
                type: contact-verification-type-missing-permissions
              schema:
                $ref: '#/components/schemas/Problem'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_VERIFICATION_NOT_FOUND
                detail: No contact verification found
                status: 404
                title: Contact Management Error
                token: Additional error context.
                type: contact-verification-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Verification
      tags:
      - contact
  /v1/dns:
    get:
      operationId: list_zones_v1_dns_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      - in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/ZoneSortField'
          default: created_on
      - in: query
        name: sort_order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
          default: desc
      - in: query
        name: dnssec_status
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DnssecStatus'
          - type: 'null'
          title: Dnssec Status
      - in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: suffix
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Suffix
      - in: query
        name: created_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created After
      - in: query
        name: created_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created Before
      - in: query
        name: updated_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated After
      - in: query
        name: updated_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated Before
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_DnsZoneResponse_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Zones
      tags:
      - dns
    post:
      operationId: create_zone_v1_dns_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/DnsChangesResponse'
                - type: 'null'
                title: Response Create Zone V1 Dns Post
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Zone
      tags:
      - dns
  /v1/dns/{zone_name}:
    delete:
      operationId: delete_zone_v1_dns__zone_name__delete
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Zone
      tags:
      - dns
    get:
      operationId: get_zone_v1_dns__zone_name__get
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZoneResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Zone
      tags:
      - dns
  /v1/dns/{zone_name}/dnssec/disable:
    post:
      operationId: disable_dnssec_v1_dns__zone_name__dnssec_disable_post
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsChangesResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Disable Dnssec
      tags:
      - dns
  /v1/dns/{zone_name}/dnssec/enable:
    post:
      operationId: enable_dnssec_v1_dns__zone_name__dnssec_enable_post
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsChangesResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Enable Dnssec
      tags:
      - dns
  /v1/dns/{zone_name}/records:
    patch:
      operationId: patch_zone_records_v1_dns__zone_name__records_patch
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneRecordsPatchOps'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Patch Zone Records
      tags:
      - dns
  /v1/dns/{zone_name}/rrsets:
    patch:
      operationId: patch_zone_rrsets_v1_dns__zone_name__rrsets_patch
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneRrsetsPatchOps'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Patch Zone Rrsets
      tags:
      - dns
    put:
      operationId: update_zone_rrsets_v1_dns__zone_name__rrsets_put
      parameters:
      - description: DNS zone name (trailing dot optional)
        in: path
        name: zone_name
        required: true
        schema:
          description: DNS zone name (trailing dot optional)
          title: Zone Name
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneRrsetsCreate'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Zone Rrsets
      tags:
      - dns
  /v1/domain-search/suggest:
    get:
      operationId: suggest_v1_domain_search_suggest_get
      parameters:
      - description: The primary keyword or phrase for the domain search
        in: query
        name: query
        required: true
        schema:
          description: The primary keyword or phrase for the domain search
          title: Query
          type: string
      - description: '

          Specify one or more TLDs to include in the search.

          '
        examples:
          list:
            summary: A list of TLDs
            value:
            - com
            - net
        in: query
        name: tlds
        required: false
        schema:
          anyOf:
          - items:
              pattern: ^[a-zA-Z]+$
              type: string
            type: array
          - type: 'null'
          description: '

            Specify one or more TLDs to include in the search.

            '
          title: Tlds
      - description: The maximum number of domain suggestions to return
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - maximum: 100
            minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of domain suggestions to return
          title: Limit
      - description: Whether to include premium domains in the suggestions
        in: query
        name: premium
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to include premium domains in the suggestions
          title: Premium
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSearchResponse'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '502':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_SEARCH_PROVIDER
                detail: Additional error context.
                status: 502
                title: Domain Search Error
                type: domain-search-provider
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Gateway
      security:
      - OAuth2PasswordBearer: []
      summary: Suggest
      tags:
      - domain_search
  /v1/domains:
    get:
      description: Retrieves a paginated list of all domains
      operationId: get_domains_v1_domains_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      - in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/DomainSortField'
          default: created_on
      - in: query
        name: sort_order
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
          default: desc
      - in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      - in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - in: query
        name: tld
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Tld
      - in: query
        name: sld
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Sld
      - in: query
        name: transfer_lock
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Transfer Lock
      - in: query
        name: created_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created After
      - in: query
        name: created_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created Before
      - in: query
        name: updated_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated After
      - in: query
        name: updated_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated Before
      - in: query
        name: expires_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Expires After
      - in: query
        name: expires_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Expires Before
      - in: query
        name: registered_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Registered After
      - in: query
        name: registered_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Registered Before
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_DomainResponse_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List all domains
      tags:
      - domain
    post:
      description: Registers a new domain
      operationId: create_domain_v1_domains_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Successful Response
        '400':
          content:
            application/problem+json:
              example:
                code: ERROR_TLD_NOT_AVAILABLE
                detail: This TLD is not available
                status: 400
                title: Domain Management Error
                tld: Additional error context.
                type: domain-tld-not-available
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_EXISTS
                detail: Domain already exists
                domain_name: Additional error context.
                status: 409
                title: Domain Management Error
                type: domain-exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create a domain
      tags:
      - domain
  /v1/domains/check:
    get:
      operationId: epp_check_domain_v1_domains_check_get
      parameters:
      - description: '

          Specify one or more domains to check for availability.

          '
        examples:
          list:
            summary: A list of domains
            value:
            - example.com
            - example.org
        in: query
        name: domains
        required: true
        schema:
          description: '

            Specify one or more domains to check for availability.

            '
          items:
            type: string
          title: Domains
          type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCheckResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Check domain availability
      tags:
      - domain
  /v1/domains/summary:
    get:
      description: Retrieves a summary of domains including counts by status, TLD,
        and expiration timeframes
      operationId: get_domain_summary_v1_domains_summary_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSummaryResponse'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Get domain summary
      tags:
      - domain
  /v1/domains/transfer:
    post:
      description: 'Start the transfer process for a domain <br>

        The domain will be in state `pending_transfer` until the transfer is completed.

        This process can take up to 5 days, until the transfer is approved'
      operationId: transfer_domain_v1_domains_transfer_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainTransferIn'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Successful Response
        '400':
          content:
            application/problem+json:
              examples:
                Domain Management Error:
                  value:
                    code: ERROR_TLD_NOT_AVAILABLE
                    detail: This TLD is not available
                    status: 400
                    title: Domain Management Error
                    tld: Additional error context.
                    type: domain-tld-not-available
                Domain Transfer Error:
                  value:
                    code: ERROR_DOMAIN_TRANSFER
                    detail: An unspecified error occurred
                    domain_name: Additional error context.
                    reason: There was an error transferring the domain
                    status: 400
                    title: Domain Transfer Error
                    type: domain-transfer
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_CONTACT_NOT_FOUND
                contact_id: Additional error context.
                detail: Contact not found
                status: 404
                title: Contact Management Error
                type: contact-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_EXISTS
                detail: Domain already exists
                domain_name: Additional error context.
                status: 409
                title: Domain Management Error
                type: domain-exists
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              example:
                detail: Additional error context.
                status: 422
                title: Policy Validation Error
                type: policy-validation-error
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unprocessable Content
      security:
      - OAuth2PasswordBearer: []
      summary: Transfer a domain
      tags:
      - domain
  /v1/domains/{domain_reference}:
    delete:
      description: 'Initiates the deletion process for a domain. The domain will be
        marked for deletion

        and will enter a redemption period during which it may be restored.'
      operationId: delete_domain_v1_domains__domain_reference__delete
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_DELETE_PROHIBITED
                detail: 'Domain deletion is prohibited due to current status: '
                domain_name: Additional error context.
                prohibiting_statuses: []
                status: 409
                title: Domain Management Error
                type: domain-delete-prohibited
              schema:
                $ref: '#/components/schemas/Problem'
          description: Conflict
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete a domain
      tags:
      - domain
    get:
      description: Retrieves a single domain by either its name or id
      operationId: get_domain_v1_domains__domain_reference__get
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Retrieve a domain
      tags:
      - domain
    patch:
      description: 'Updates various attributes of an existing domain. Only the fields
        provided in the request

        will be updated; all other fields will remain unchanged. <br>

        Providing `clientTransferProhibited` as a status will set the `transfer_lock`
        property'
      operationId: update_domain_v1_domains__domain_reference__patch
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Successful Response
        '404':
          content:
            application/problem+json:
              examples:
                Contact Management Error:
                  value:
                    code: ERROR_CONTACT_NOT_FOUND
                    contact_id: Additional error context.
                    detail: Contact not found
                    status: 404
                    title: Contact Management Error
                    type: contact-not-found
                Domain Management Error:
                  value:
                    code: ERROR_DOMAIN_NOT_FOUND
                    detail: Domain not found
                    domain_name: Additional error context.
                    status: 404
                    title: Domain Management Error
                    type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update a domain
      tags:
      - domain
  /v1/domains/{domain_reference}/dnssec:
    delete:
      description: Removes all DNSSEC data for a domain
      operationId: delete_dnssec_v1_domains__domain_reference__dnssec_delete
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete DNSSEC data
      tags:
      - domain
    get:
      description: Fetches all DNSSEC records associated with the specified domain.
      operationId: get_dnssec_v1_domains__domain_reference__dnssec_get
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DomainDnssecDataResponse'
                title: Response Get Dnssec V1 Domains  Domain Reference  Dnssec Get
                type: array
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Retrieve DNSSEC data
      tags:
      - domain
    put:
      description: Replaces all existing DNSSEC records for the domain with the provided
        records.
      operationId: create_or_update_dnssec_v1_domains__domain_reference__dnssec_put
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DomainDnssecDataCreate'
              title: Dnssec Data
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DomainDnssecDataResponse'
                title: Response Create Or Update Dnssec V1 Domains  Domain Reference  Dnssec
                  Put
                type: array
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update DNSSEC data
      tags:
      - domain
  /v1/domains/{domain_reference}/renew:
    post:
      description: 'Extends the registration period of an existing domain. The renewal
        period is added

        to the current expiration date of the domain.'
      operationId: renew_domain_v1_domains__domain_reference__renew_post
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRenewRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainRenewResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Renew a domain
      tags:
      - domain
  /v1/domains/{domain_reference}/transfer:
    delete:
      description: This will cancel the in-progress domain transfer and delete the
        domain object
      operationId: cancel_domain_transfer_v1_domains__domain_reference__transfer_delete
      parameters:
      - in: path
        name: domain_reference
        required: true
        schema:
          anyOf:
          - examples:
            - domain_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^domain_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: domain
          - type: string
          title: Domain Reference
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_NOT_FOUND
                detail: Domain not found
                domain_name: Additional error context.
                status: 404
                title: Domain Management Error
                type: domain-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '409':
          content:
            application/problem+json:
              example:
                code: ERROR_DOMAIN_TRANSFER
                detail: An unspecified error occurred
                domain_name: Additional error context.
                reason: There was an error transferring the domain
                status: 400
                title: Domain Transfer Error
                type: domain-transfer
              schema:
                $ref: '#/components/schemas/Problem'
          description: Bad Request
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Cancel a domain transfer
      tags:
      - domain
  /v1/email-forwards:
    get:
      operationId: list_email_forwards_v1_email_forwards_get
      parameters:
      - description: Optional status to filter the results
        in: query
        name: status
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/EmailForwardStatus'
          - type: 'null'
          description: Optional status to filter the results
          title: Status
      - description: Optional source address to filter the results
        in: query
        name: source_address
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional source address to filter the results
          title: Source Address
      - description: Optional target address to filter the results
        in: query
        name: target_address
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional target address to filter the results
          title: Target Address
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_EmailForward_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Email Forwards
      tags:
      - email_forward
    post:
      operationId: create_email_forward_v1_email_forwards_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailForwardCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailForward'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Email Forward
      tags:
      - email_forward
  /v1/email-forwards/bulk-delete:
    post:
      operationId: bulk_delete_email_forwards_v1_email_forwards_bulk_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailForwardBulkDelete'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse_EmailForwardBulkDeleteResult_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Bulk Delete Email Forwards
      tags:
      - email_forward
  /v1/email-forwards/bulk-update:
    patch:
      operationId: bulk_update_email_forwards_v1_email_forwards_bulk_update_patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailForwardBulkUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse_EmailForwardBulkUpdateResult_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Bulk Update Email Forwards
      tags:
      - email_forward
  /v1/email-forwards/{email_forward_id}:
    delete:
      operationId: delete_email_forward_v1_email_forwards__email_forward_id__delete
      parameters:
      - in: path
        name: email_forward_id
        required: true
        schema:
          examples:
          - email_forward_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Email Forward Id
          type: string
          x-typeid-prefix: email_forward
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Email Forward
      tags:
      - email_forward
    get:
      operationId: get_email_forward_v1_email_forwards__email_forward_id__get
      parameters:
      - in: path
        name: email_forward_id
        required: true
        schema:
          examples:
          - email_forward_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Email Forward Id
          type: string
          x-typeid-prefix: email_forward
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailForward'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Email Forward
      tags:
      - email_forward
    patch:
      operationId: update_email_forward_v1_email_forwards__email_forward_id__patch
      parameters:
      - in: path
        name: email_forward_id
        required: true
        schema:
          examples:
          - email_forward_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^email_forward_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Email Forward Id
          type: string
          x-typeid-prefix: email_forward
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailForwardUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailForward'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Email Forward
      tags:
      - email_forward
  /v1/event:
    get:
      operationId: get_events_v1_event_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_EventResponse_'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Events
      tags:
      - event
  /v1/event/{event_id}:
    get:
      operationId: get_event_v1_event__event_id__get
      parameters:
      - in: path
        name: event_id
        required: true
        schema:
          examples:
          - epp_event_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Event Id
          type: string
          x-typeid-prefix: epp_event
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_EVENT_NOT_FOUND
                detail: Event not found
                event_id: Additional error context.
                status: 404
                title: Event Error
                type: event-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Event
      tags:
      - event
    patch:
      operationId: acknowledge_event_v1_event__event_id__patch
      parameters:
      - in: path
        name: event_id
        required: true
        schema:
          examples:
          - epp_event_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^epp_event_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Event Id
          type: string
          x-typeid-prefix: epp_event
      responses:
        '204':
          description: Successful Response
        '401':
          content:
            application/problem+json:
              example:
                code: ERROR_AUTHENTICATION
                detail: Additional error context.
                status: 401
                title: Authentication Error
                type: authentication
              schema:
                $ref: '#/components/schemas/Problem'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                code: ERROR_EVENT_NOT_FOUND
                detail: Event not found
                event_id: Additional error context.
                status: 404
                title: Event Error
                type: event-not-found
              schema:
                $ref: '#/components/schemas/Problem'
          description: Not Found
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Acknowledge Event
      tags:
      - event
  /v1/notifications:
    get:
      operationId: list_notifications_v1_notifications_get
      parameters:
      - in: query
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_UserNotificationSummary_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Notifications
      tags:
      - notification
    post:
      operationId: create_notification_v1_notifications_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreate'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Notification
      tags:
      - notification
  /v1/notifications/{notification_id}:
    delete:
      operationId: delete_notification_v1_notifications__notification_id__delete
      parameters:
      - in: path
        name: notification_id
        required: true
        schema:
          examples:
          - notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Notification Id
          type: string
          x-typeid-prefix: notification
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Notification
      tags:
      - notification
    get:
      operationId: get_notification_v1_notifications__notification_id__get
      parameters:
      - in: path
        name: notification_id
        required: true
        schema:
          examples:
          - notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Notification Id
          type: string
          x-typeid-prefix: notification
      - in: query
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotification'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Notification
      tags:
      - notification
    put:
      operationId: update_notification_v1_notifications__notification_id__put
      parameters:
      - in: path
        name: notification_id
        required: true
        schema:
          examples:
          - notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Notification Id
          type: string
          x-typeid-prefix: notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Notification
      tags:
      - notification
  /v1/notifications/{notification_id}/read:
    patch:
      operationId: update_notification_read_v1_notifications__notification_id__read_patch
      parameters:
      - in: path
        name: notification_id
        required: true
        schema:
          examples:
          - notification_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^notification_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Notification Id
          type: string
          x-typeid-prefix: notification
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Notification Read
      tags:
      - notification
  /v1/organizations:
    get:
      operationId: list_organizations_v1_organizations_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_Organization_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Organizations
      tags:
      - organization
    post:
      operationId: create_organization_v1_organizations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Organization
      tags:
      - organization
  /v1/organizations/attributes:
    get:
      operationId: get_attributes_v1_organizations_attributes_get
      parameters:
      - in: query
        name: organization_id
        required: false
        schema:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          title: Organization Id
      - description: Optional list of attribute keys to filter
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Optional list of attribute keys to filter
          title: Keys
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAttributeResponse'
                title: Response Get Attributes V1 Organizations Attributes Get
                type: array
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Attributes
      tags:
      - organization
    patch:
      operationId: update_attributes_v1_organizations_attributes_patch
      parameters:
      - in: query
        name: organization_id
        required: false
        schema:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          title: Organization Id
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/OrganizationAttributeUpdate'
              title: Attributes
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAttributeResponse'
                title: Response Update Attributes V1 Organizations Attributes Patch
                type: array
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Attributes
      tags:
      - organization
  /v1/organizations/attributes/{organization_id}:
    get:
      operationId: get_attributes_v1_organizations_attributes__organization_id__get
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          title: Organization Id
      - description: Optional list of attribute keys to filter
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Optional list of attribute keys to filter
          title: Keys
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAttributeResponse'
                title: Response Get Attributes V1 Organizations Attributes  Organization
                  Id  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Attributes
      tags:
      - organization
    patch:
      operationId: update_attributes_v1_organizations_attributes__organization_id__patch
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          anyOf:
          - examples:
            - organization_01h45ytscbebyvny4gc8cr8ma2
            format: typeid
            pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
            type: string
            x-typeid-prefix: organization
          - type: 'null'
          title: Organization Id
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/OrganizationAttributeUpdate'
              title: Attributes
              type: array
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationAttributeResponse'
                title: Response Update Attributes V1 Organizations Attributes  Organization
                  Id  Patch
                type: array
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Attributes
      tags:
      - organization
  /v1/organizations/ip-restrictions:
    get:
      description: Get all IP restrictions for the organization
      operationId: list_ip_restrictions_v1_organizations_ip_restrictions_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IpRestrictionResponse'
                title: Response List Ip Restrictions V1 Organizations Ip Restrictions
                  Get
                type: array
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: List Ip Restrictions
      tags:
      - organization
    post:
      description: Create a new IP restriction for the organization
      operationId: create_ip_restriction_v1_organizations_ip_restrictions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpRestrictionCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create Ip Restriction
      tags:
      - organization
  /v1/organizations/ip-restrictions/{ip_restriction_id}:
    delete:
      description: Delete an IP restriction
      operationId: delete_ip_restriction_v1_organizations_ip_restrictions__ip_restriction_id__delete
      parameters:
      - in: path
        name: ip_restriction_id
        required: true
        schema:
          title: Ip Restriction Id
          type: integer
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Ip Restriction
      tags:
      - organization
    get:
      description: Get a specific IP restriction by ID
      operationId: get_ip_restriction_v1_organizations_ip_restrictions__ip_restriction_id__get
      parameters:
      - in: path
        name: ip_restriction_id
        required: true
        schema:
          title: Ip Restriction Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Ip Restriction
      tags:
      - organization
    patch:
      description: Update an IP restriction
      operationId: update_ip_restriction_v1_organizations_ip_restrictions__ip_restriction_id__patch
      parameters:
      - in: path
        name: ip_restriction_id
        required: true
        schema:
          title: Ip Restriction Id
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpRestrictionUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionResponse'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Ip Restriction
      tags:
      - organization
  /v1/organizations/roles:
    get:
      operationId: list_roles_v1_organizations_roles_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: List Roles
      tags:
      - organization
  /v1/organizations/users:
    get:
      operationId: list_users_v1_organizations_users_get
      parameters:
      - in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagination_User_'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Users
      tags:
      - organization
  /v1/organizations/{organization_id}:
    delete:
      operationId: delete_user_v1_organizations__organization_id__delete
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete User
      tags:
      - organization
    get:
      operationId: get_organization_v1_organizations__organization_id__get
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWithPlan'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Organization
      tags:
      - organization
    patch:
      operationId: update_organization_v1_organizations__organization_id__patch
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update Organization
      tags:
      - organization
  /v1/organizations/{organization_id}/plan:
    patch:
      operationId: change_plan_v1_organizations__organization_id__plan_patch
      parameters:
      - in: path
        name: organization_id
        required: true
        schema:
          examples:
          - organization_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^organization_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: Organization Id
          type: string
          x-typeid-prefix: organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWithPlan'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Change Plan
      tags:
      - organization
  /v1/users:
    post:
      operationId: create_user_v1_users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Create User
      tags:
      - user
  /v1/users/accept-tos:
    post:
      operationId: tos_sign_v1_users_accept_tos_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TermsOfServiceAccept'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Tos Sign
      tags:
      - user
  /v1/users/me:
    get:
      operationId: get_current_user_v1_users_me_get
      parameters:
      - in: query
        name: attributes
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Attributes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithRelationPermissions'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Current User
      tags:
      - user
  /v1/users/{user_id}:
    delete:
      operationId: delete_user_v1_users__user_id__delete
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete User
      tags:
      - user
    get:
      operationId: get_user_v1_users__user_id__get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      - in: query
        name: attributes
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Attributes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAttributes'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get User
      tags:
      - user
    patch:
      operationId: update_user_v1_users__user_id__patch
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAttributes'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update User
      tags:
      - user
  /v1/users/{user_id}/permissions:
    get:
      operationId: get_user_permissions_v1_users__user_id__permissions_get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionSet'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get User Permissions
      tags:
      - user
  /v1/users/{user_id}/roles:
    get:
      operationId: list_roles_v1_users__user_id__roles_get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationSet'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: List Roles
      tags:
      - user
    patch:
      operationId: update_user_relations_v1_users__user_id__roles_patch
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          examples:
          - user_01h45ytscbebyvny4gc8cr8ma2
          format: typeid
          pattern: ^user_[0-7][0-9a-hjkmnpq-tv-z]{25}$
          title: User Id
          type: string
          x-typeid-prefix: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpiceDbRelationshipUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationSet'
          description: Successful Response
        '422':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Update User Relations
      tags:
      - user
servers:
- description: Production environment
  url: https://api.opusdns.com
- description: Sandbox environment
  url: https://sandbox.opusdns.com
tags:
- description: 'Endpoints for authentication.

    '
  name: authentication
  x-displayName: Authentication
- description: 'Endpoints for checking domain availability.

    '
  name: availability
  x-displayName: Availability
- description: 'Endpoints for creating and managing contacts.

    '
  name: contact
  x-displayName: Contacts
- description: 'Endpoints for managing DNS records.

    '
  name: dns
  x-displayName: DNS Management
- description: 'Endpoints for creating and managing domains.

    '
  name: domain
  x-displayName: Domain management
- description: 'Endpoints for searching domains.

    '
  name: domain_search
  x-displayName: Domain search
- description: 'Endpoints for creating and managing email forwards.

    '
  name: email_forward
  x-displayName: Email forwards
- description: 'Endpoints for interacting with events.

    '
  name: event
  x-displayName: Event handling
- description: 'Endpoints for managing nameservers.

    '
  name: nameserver
  x-displayName: Nameservers
- description: 'Endpoints for creating and managing notifications.

    '
  name: notification
  x-displayName: Notifications
- description: 'Endpoints for creating and managing organizations.

    '
  name: organization
  x-displayName: Organizations
- description: 'Endpoints for RDAP.

    '
  name: rdap
  x-displayName: RDAP
- description: 'Endpoints for retrieving TLD specifications.

    '
  name: tld
  x-displayName: TLD specification
- description: "Some requirements for users:\n - A user must belong to one and only\
    \ one organization.\n - Both their email address and username must be unique within\
    \ the whole system.\n"
  name: user
  x-displayName: Users
x-tagGroups:
- name: Account management
  tags:
  - authentication
  - user
  - organization
- name: Domains
  tags:
  - domain
  - contact
  - event
  - availability
- name: Services
  tags:
  - dns
  - email_forward
  - rdap
  - domain_search
  - notification
